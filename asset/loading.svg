{
  "data_kontrakan": [
    {
      "nomer": 2,
      "kota": "Malang",
      "latitude": -7.921950493857903,
      "longitude": 112.64547520276322,
      "harga_sewa": "13000000",
      "label_harga_sewa": "Rp13jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250825111545_52003",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "4 kamar tidur\n2 kamar mandi\n\nhttps://wa.me/6282231320160\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 3,
      "kota": "Malang",
      "latitude": -7.92739990979125,
      "longitude": 112.62642493341826,
      "harga_sewa": "16000000",
      "label_harga_sewa": "Rp16jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250825111545_88608",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "3 kt\n1km\nDapur\nGarasi \nAkses mobil simpangan\n\nhttps://wa.me/6282231320160\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 4,
      "kota": "Malang",
      "latitude": -7.954788876653099,
      "longitude": 112.63364490061706,
      "harga_sewa": "16000000",
      "label_harga_sewa": "Rp16jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250825111545_9151",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Di kontrakan rumah di dekat Jl. Kalpataru - Suhat - Malang. 10 menit ke kampus UB. \nBaru selesai di kontrak anak UB.\n\nSilahkan datang langsung untuk melihat kontrakannya. No tipu\". Wa saya 0857-0665-9432 (Sofiul)\n\nFasilitas:\n✅️ 2 Kamar Tidur (ruang depan bisa dijadikan 1 kamar tambahan)\n✅ ️1 Kamar Mandi besar\n✅️ Tempat jemur pakaian di lantai 2. Sudah ada atapnya. Tidak kehujanan.\n✅️ Dapur\n✅️ Garasi sepeda motor muat 4 sepeda\n✅️ Pagar rumah besi tinggi\n✅️ Air sumur\n✅️ Ada tandon air\n✅️ Listrik pakai Token \n✅️ sudah dipasangkan wifi\n✅️ Atap tinggi. Jadi tidak gerah\n✅️ Tetangga Ramah\n✅️ Lingkungan perkampuangan yg asri \n✅️ Ke suhat dekat\n\nHarga pertahun 16jt. (Hanya terima tahunan 🙂🙏)\n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 5,
      "kota": "Malang",
      "latitude": -7.9494079971490255,
      "longitude": 112.6014584556603,
      "harga_sewa": "20000000",
      "label_harga_sewa": "Rp20jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250825111545_93938",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "•Garasi mobil dan pagar\n•Kawasan tenang. Cocok untuk yg cari lingkungan tenang.\n•jalan depan lebar untuk 2 mobil\n•Dekat dari mall di Malang dan kampus besar di Malang\n•10 menit dari Univ Negeri Malang\n\nhttps://wa.me/6282231320160\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 6,
      "kota": "Malang",
      "latitude": -7.888171738464252,
      "longitude": 112.60343598496708,
      "harga_sewa": "16000000",
      "label_harga_sewa": "Rp16jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_77091",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Monggo di kontrakan  Perumahan Arjuna Gumilang blok F-5 desa Ngijo Karangploso Malang\n Luas 86 m2 Full bangunan\nAda carport, ruang tamu ruang klg gede, 2 kamar tidur, dapur, 1 kamar mandi dan tempat cuci baju di belakang\n Listrik 1.300 watt token\nAir PDAM Perumahan\nJalan masuk perumahan lebar 5 m\nDi kontrakan 16 Juta pertahun nego\nBsa di bayar 6 bulan \n\nhttps://wa.me/6282231320160\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 7,
      "kota": "Malang",
      "latitude": -7.901203222955514,
      "longitude": 112.57476496427148,
      "harga_sewa": "9500000",
      "label_harga_sewa": "Rp9,5jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_85353",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Di kontrakan rumah  .!!\n Bangunan baru \n✔️2 kamar tidur\n✔️ 1 kamar mandi\n✔️Dapur \n ✔️ruang tamu \n✔️Akses Mobil\n✔️PLN 900 \n✔️Air PDAM \nLokasi sangat strategis Deket dengan kampus\nUmm dekat UIN Pascasarjana\nDeket dengan sekolah TK,SD, SMP, SMK\nDeket dengan pasar Karangploso.\n📍 lokasi Pendem perbatasan batu malang  9.5 JT /  tahun\nBisa nego dikit\n\nhttps://wa.me/6282231320160\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 8,
      "kota": "Malang",
      "latitude": -7.925850609732174,
      "longitude": 112.59485398072529,
      "harga_sewa": "37000000",
      "label_harga_sewa": "Rp37jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_14690",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Silahkan yg cari kontrakan depan kampus umm3 bisa jl kaki.. ad 13kt 4km yok kalian bisa patungan sm teman atau pak bos bisa di koskan lagi .ini lagi BU harga murmer 37jt nego.. \n\nhttps://wa.me/6282231320160\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 9,
      "kota": "Malang",
      "latitude": -7.977235729635797,
      "longitude": 112.6505871348994,
      "harga_sewa": "1000000",
      "label_harga_sewa": "Rp1jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_41928",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "bismillah. di sewakan RUMAH PETAK (bangunan baru dan kosongan) untuk pasutri SAH/single\ndi JL. WIROTO GG.7 (polehan)\nnb: tidak untuk usaha laundry:)\n✅ fasilitas : \n- 1 kamar tidur\n- 1 kamar mandi\n- dapur\n- ruang tamu\n- teras, ada tempat jemuran\n- listrik token\n- bebas air PDAM *pemakaian normal\n✅ akses sepeda motor\n✅ lokasi dekat pasar bunul - sawojajar polehan\n💰 1jt/bulan untuk pasutri dan 900rb/bulan untuk single\n\nhttps://wa.me/6282231320160\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 10,
      "kota": "Malang",
      "latitude": -7.955276576989402,
      "longitude": 112.58383773691513,
      "harga_sewa": "24000000",
      "label_harga_sewa": "Rp24jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_45817",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Perumahan BCT 3kt 1km 2 lantai\n\nhttps://wa.me/6282231320160\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 11,
      "kota": "Malang",
      "latitude": -7.952627288235398,
      "longitude": 112.62093088583775,
      "harga_sewa": "32000000",
      "label_harga_sewa": "Rp32jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_92785",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan 2 lantai tahunan FULL PERABOT\n✅ 5 kamar tidur\n✅ 2 kamar mandi\n✅ Ruang tengah\n✅ Tempat jemur\n✅ Tempat nongkrong\n✅ Kasur dan bantal setiap kamar\n✅ Kompor\n✅ Kulkas\n✅ Gratis 100% biaya iuran keamanan dan sampah\n\nhttps://wa.me/6282231320160\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 12,
      "kota": "Malang",
      "latitude": -7.953126785273621,
      "longitude": 112.62036957952445,
      "harga_sewa": "32000000",
      "label_harga_sewa": "Rp32jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_64228",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan 2 lantai tahunan FULL PERABOT\n✅ 5 kamar tidur\n✅ 2 kamar mandi\n✅ Ruang tengah\n✅ Tempat jemur\n✅ Tempat nongkrong\n✅ Kasur dan bantal setiap kamar\n✅ Kompor\n✅ Kulkas\n✅ Gratis 100% biaya iuran keamanan dan sampah\n\nhttps://wa.me/6282231320160\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 13,
      "kota": "Malang",
      "latitude": -7.953530902888296,
      "longitude": 112.62089966710066,
      "harga_sewa": "28000000",
      "label_harga_sewa": "Rp28jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_93860",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan 2 lantai tahunan FULL PERABOT\n✅ 4 kamar tidur besar - bisa untuk 2 kasur\n✅ 2 kamar mandi\n✅ Ruang tengah\n✅ Tempat jemur\n✅ Kasur dan bantal setiap kamar\n✅ Kompor\n✅ Kulkas\n✅ Gratis 100% biaya iuran keamanan dan sampah\n\nhttps://wa.me/6282231320160\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 14,
      "kota": "Malang",
      "latitude": -7.916067655205644,
      "longitude": 112.59339629582225,
      "harga_sewa": "15000000",
      "label_harga_sewa": "Rp15jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_43243",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah kosong harga pertahun 13 juta.\nKm 2,dapur,toilet,r tamu.garasi.\nLokasi belakang kampus UMM 3.\n\nhttps://wa.me/6282231320160\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 15,
      "kota": "Malang",
      "latitude": -7.928811396061823,
      "longitude": 112.65736245260103,
      "harga_sewa": "12700000",
      "label_harga_sewa": "Rp12,7jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_48477",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Rumah siap huni disewakan..3 menit ke term arjosari..10 menit ke suhat Lantai 2, 2 Kamar Tidur, 1 Kamar Mandi, dapur, ruang tamu, listrik token, air PDAM Jemuran ada di Lantai 2 Lingkungan aman dan nyaman karena dekat musholla dan masjid Luas bangunan 65m2 Lokasi Jl. Teluk Pelabuhan Ratu..Gang Arjuna 5 No.26B...depan SMP Arjuna Malang\n\nhttps://wa.me/6282231320160\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 16,
      "kota": "Malang",
      "latitude": -7.962213460672286,
      "longitude": 112.63892951578856,
      "harga_sewa": "15000000",
      "label_harga_sewa": "Rp15jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_68036",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Rumah untuk usaha/RT, ada ruangan usaha + 2 Kamar tidur, 1 Kamar Mandi Dapur toilet duduk Akses mobil papasan Sewa 15jt/ tahun nego Alus Jalan Bango, Malang 65123, Indonesia\n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 17,
      "kota": "Malang",
      "latitude": -7.969903906988328,
      "longitude": 112.6097722944785,
      "harga_sewa": "15000000",
      "label_harga_sewa": "Rp15jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_32590",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah lokasi sukunKamar4Kmd1Akses mobil2 lantaiDekat unmer, soepraon15jt/tahun\n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 18,
      "kota": "Malang",
      "latitude": -7.920542894240232,
      "longitude": 112.61815612959361,
      "harga_sewa": "20000000",
      "label_harga_sewa": "Rp20jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_56017",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah minimum 1 th. Perumahan royal atletik residence blok b 23 ad 1 kamar mandi dapur garasi dan 2 kamar tidur. Silahkan WA https://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 19,
      "kota": "Malang",
      "latitude": -7.89554179566571,
      "longitude": 112.60789350641888,
      "harga_sewa": "25000000",
      "label_harga_sewa": "Rp25jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_87125",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "2 kamar tidur \n1 dapur\n1 ruang keluarga\n1 kamar mandi\nPln 1300watt\nPdam\nTandon air\nParkiran mobil&sepeda\nLuas kak ruangannya dan parkirannya\n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 20,
      "kota": "Malang",
      "latitude": -7.903847443290109,
      "longitude": 112.61833643293966,
      "harga_sewa": "18000000",
      "label_harga_sewa": "Rp18jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_27541",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Di KONTRAKAN rumah milik pribadi PERUMAHAN GRAHA PULOMAS BLOK B2 KEPUHARJO KARANGPLOSO Tahunan saja 18 jt setahun 27 jt 2 thn. Akses mobil truk bus. \n\n2 kamar tidur\n2 kamar mandi\ndapur\ncarport\nruang jemur\n\nhttps://wa.me/6282231320160\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 21,
      "kota": "Malang",
      "latitude": -7.9128492890696025,
      "longitude": 112.62602375762042,
      "harga_sewa": "15000000",
      "label_harga_sewa": "Rp15jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_37814",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Monggo yg sedang cari rumah kontrakan murah dan aman 2 lantai untuk ditempati. Silahkan mampir dulu lihat\" rumahnya. ada tempat parkir mobil di tanah kosong dekat rumah.\n\nRuangan:\n✅ 3 kamar tidur besar\n✅ 1 kamar mandi\n✅ Tempat Wudhu / Tempat Cuci Baju\n✅ Ruang depan\n✅ Teras depan ada pagarnya\n✅ Tempat jemur baju di lantai 2\n✅ Listrik pakai token\n\nBonus:\n✅ Bonus listrik saya isikan 350rb saat ditempati\n✅ Gratis iuran sampah selama menempati\n✅ Bersih-bersih kontrakan sebelum ditempati\n\nhttps://wa.me/6282231320160\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 22,
      "kota": "Malang",
      "latitude": -7.95162288337965,
      "longitude": 112.62112454107539,
      "harga_sewa": "28000000",
      "label_harga_sewa": "Rp28jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_60756",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan bangunan baru FULL 2 lantai. \nMonggo boleh langsung cek ke lokasi. no tipu\"\nLokasi belakang apartemen Suhat. 5 menit ke arah kampus UB  \n\npertahun 28Jt  (Kosongan)\n\nFasilitas: \n✅ Teras\n✅ 3 kamar tidur besar \n✅ 1 kamar mandi \n✅ Dapur \n✅ Air Sumur \n✅ Listrik PLN 900 watt\n✅ Garasi sepeda motor ada pagarnya \n✅ Tempat jemur baju di lantai 2 (balkon)  \n✅ Tempat Santai di lantai 2\n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 23,
      "kota": "Malang",
      "latitude": -7.924871718292516,
      "longitude": 112.63572885432825,
      "harga_sewa": "26000000",
      "label_harga_sewa": "Rp26jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_93415",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan Rumah Di jalan ikan Tombro. Pinggir jalan Utama.\n\n✅ Garasi\n✅ Teras Depan\n✅ Ruang Tamu\n✅ 4 kamar tidur \n✅ 1 kamar mandi \n✅ Dapur\n✅ Listrik Token\n✅ Air Sumur\n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 24,
      "kota": "Malang",
      "latitude": -7.934736796410253,
      "longitude": 112.6117185122582,
      "harga_sewa": "15000000",
      "label_harga_sewa": "Rp15jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_40579",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan Rumah Di dekat Stikes Maharani  - Saxophone. \n\n✅ 2 kamar tidur\n✅ 1 kamar mandi\n✅ Dapur\n✅ Air PDAM\n✅ Listrik Token\n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 25,
      "kota": "Malang",
      "latitude": -7.931966298790628,
      "longitude": 112.63913193964325,
      "harga_sewa": "26000000",
      "label_harga_sewa": "Rp26jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_90709",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan Rumah Di jln ikan Nila - Blimbing. Kawasan tentang.\n\n✅ 3 kamar tidur di lantai 1 \n✅ 1 kamar tidur di lantai 2\n✅ Tempat jemuran\n✅ 2 kamar mandi\n✅ Dapur\n✅ Ruang tamu\n✅ Ruang keluarga\n✅ Air PDAM\n✅ Ada sumur pompa tangan\n✅ PLN 900 watt\n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 26,
      "kota": "Malang",
      "latitude": -7.927819222145332,
      "longitude": 112.62712118727356,
      "harga_sewa": "25000000",
      "label_harga_sewa": "Rp25jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_17828",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Ada 2 unit rumah mas masing² 4 kamar tidur 1 kamar mandi\nListrik pulsa\nAir Sumur bor\n\nKosongan\n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 27,
      "kota": "Malang",
      "latitude": -7.934132075370353,
      "longitude": 112.63165698408669,
      "harga_sewa": "45000000",
      "label_harga_sewa": "Rp45jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_56576",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "2 Lantai \n4 kamar tidur \n3 kamar mandi\nGarasi bisa muat 2 mobil\n\nWatt listrik 1300\nPAM\nUang keamanan RT 75rb/bln\n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 28,
      "kota": "Malang",
      "latitude": -7.938231049847161,
      "longitude": 112.62265002895734,
      "harga_sewa": "24000000",
      "label_harga_sewa": "Rp24jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_20691",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "carport, 3 kamar tidur, dapur, 1 kamar mandi\n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 29,
      "kota": "Malang",
      "latitude": -7.952775585572925,
      "longitude": 112.62056784548729,
      "harga_sewa": "25000000",
      "label_harga_sewa": "Rp25jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_81085",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "rumah 3 lantai\n5 Kamar tidur\n2 kamar mandi\ndapur\ntempat jemur pakaian di lantai 3\n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 30,
      "kota": "Malang",
      "latitude": -7.9438945757551656,
      "longitude": 112.62300107737079,
      "harga_sewa": "17000000",
      "label_harga_sewa": "Rp17jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250715093331_4487.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan lantai 2. Full prabot. tinggal tempati saja\n✅ 4 kamar tidur \n✅ 1 kamar mandi\n✅ Dapur\n✅ Sudah ada Kasur dan Lemari\n✅ Akses Motor\n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 31,
      "kota": "Malang",
      "latitude": -7.927034302403199,
      "longitude": 112.65718968628248,
      "harga_sewa": "12000000",
      "label_harga_sewa": "Rp12jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_13714",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "2 kamar tidur 1 kamar mandi dapur\n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 32,
      "kota": "Malang",
      "latitude": -7.945804328470784,
      "longitude": 112.62842047718915,
      "harga_sewa": "36000000",
      "label_harga_sewa": "Rp36jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_3845",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "✅ 3 kamar tidur\n✅ 2 kamar mandi\n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 33,
      "kota": "Malang",
      "latitude": -7.9449318992406095,
      "longitude": 112.60870496801105,
      "harga_sewa": "30000000",
      "label_harga_sewa": "Rp30jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_10882",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "✅ 7 kamar tidur\n✅ 2 kamar mandi\n✅ Ruang depan untuk parkir sepeda motor\n✅ Tempat Jemur di lantai atas\n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 34,
      "kota": "Malang",
      "latitude": -7.93032953036862,
      "longitude": 112.61796233284466,
      "harga_sewa": "38000000",
      "label_harga_sewa": "Rp38jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_40536",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "2 kamar tidur\n1 garasi\n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 35,
      "kota": "Malang",
      "latitude": -7.939745614839078,
      "longitude": 112.62338003101453,
      "harga_sewa": "23000000",
      "label_harga_sewa": "Rp23jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_82205",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "5 kamar  2 kamar mandi\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 36,
      "kota": "Malang",
      "latitude": -7.9376666354335805,
      "longitude": 112.61980397896119,
      "harga_sewa": "31000000",
      "label_harga_sewa": "Rp31jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_84316",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "5 kamar  2 kamar mandi\nsudah laku..\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 37,
      "kota": "Malang",
      "latitude": -7.93627729154615,
      "longitude": 112.62038231618277,
      "harga_sewa": "27000000",
      "label_harga_sewa": "Rp27jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_10244",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "3 kt +1musholla(luas)\n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 38,
      "kota": "Malang",
      "latitude": -7.938144248289344,
      "longitude": 112.62090744558067,
      "harga_sewa": "28000000",
      "label_harga_sewa": "Rp28jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_2820",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "2 kamar tidur\n1 ruang tamu besar\n1 ruang keluarga yg langsung menyatu\n1 kamar mandi dalam\ndapur bersih\nlorong belakang model L\n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 39,
      "kota": "Malang",
      "latitude": -7.938437879385323,
      "longitude": 112.62154663253793,
      "harga_sewa": "25000000",
      "label_harga_sewa": "Rp25jt",
      "ketersediaan": "Laku 😍️",
      "foto_kontrakan": "20250301202648_11221",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Saya kebetulan ada 1 rumah kontrakan murah terakhir di perumahan griya shanta suhat.. \n\nFasilitas:\n✅ Gratiss kasur.\n✅ Gratiss lemari.\n✅ Gratiss kompor.\n✅ Sudah ada wifi Indihome.\n✅ 5 kamar tidur.\n✅ 2 kamar mandi. \n✅ Dapur.\n✅ Ruang tamu.\n✅ Jemur baju di lantai 2.\n✅ Rumah 2 lantai. \n✅ Perumahan di tengah suhat.\n✅ Akses Mobil.\n✅ Keamanan 24 jam 2 ring.\n✅ Lingkungan bebas sopan.\n\nPertahun cuma 25 juta aja.. \n\nwa.me/6282231320160?text=mau%20tanya%20kontrakan%205%20kamar%20di%20perumahan%20Griya%20Shanta\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 40,
      "kota": "Malang",
      "latitude": -7.945833312290756,
      "longitude": 112.60800660669535,
      "harga_sewa": "16000000",
      "label_harga_sewa": "Rp16jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_67433",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "2 kamar tidur\n1 kamar mandi\ndapur\n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 41,
      "kota": "Malang",
      "latitude": -7.921030207428347,
      "longitude": 112.63062125892559,
      "harga_sewa": "25000000",
      "label_harga_sewa": "Rp25jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_78608",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Spesifikasi:\n4 kamar tidur\n1 kamar mandi\nRuang tamu\nDapur\nGarasi + Pagar\nListrik Token 1300\nAir PDAM \nFull prabot tinggal menempati\n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 42,
      "kota": "Malang",
      "latitude": -7.940976273262134,
      "longitude": 112.60609167230201,
      "harga_sewa": "14000000",
      "label_harga_sewa": "Rp14jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_41106",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "2 kamar tidur\n1 kamar mandi\nruang tamu\ndapur\n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 43,
      "kota": "Malang",
      "latitude": -7.9320097108607035,
      "longitude": 112.59819102258967,
      "harga_sewa": "28000000",
      "label_harga_sewa": "Rp28jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_15005",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "5 kamar tidur\n1 kamar mandi\n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 44,
      "kota": "Malang",
      "latitude": -7.931651405254431,
      "longitude": 112.59834093504524,
      "harga_sewa": "23000000",
      "label_harga_sewa": "Rp23jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_6450",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "🏡 Dikontrakan rumah di perumahan Landungsari daerah UMM 3\n\n✅️ Cat baru. Tembok bersih mulus\n✅️ 3 kamar tidur\n✅️ 1 kamar mandi\n✅ ️dapur\n✅️ ada parkiran mobil / carport\n✅️ akses jalan lebar untuk 2 mobil\n✅️ air sumur jernih + toren air\n✅️ listrik 1300 watt\n✅️ akses mobil\n✅️ dekat pasar dan masjid\n\nPertahun 22 juta nego\n\nhttps://wa.me/6282231320160?text=mau%20tanya%20kontrakan%203%20kamar%20di%20perumahan%20Landungsari\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 45,
      "kota": "Malang",
      "latitude": -7.944618788546056,
      "longitude": 112.60788885799703,
      "harga_sewa": "23000000",
      "label_harga_sewa": "Rp23jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_9687",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "2 lantai\n4 kamar tidur\n2 kamar mandi\ndapur\nGazebo luas di lantai 2\n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 46,
      "kota": "Malang",
      "latitude": -7.944822476446303,
      "longitude": 112.60814004391086,
      "harga_sewa": "32000000",
      "label_harga_sewa": "Rp32jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_76958",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Disewakan rumah kost\nAkses mobil\ntotal 6 kamar\n Lt 1 ada 4 kamar. \nLt 2. Ada 2 kamar .\nKamar mandi luar ada 2 dan 1 WC\nListrik 3600 Watt\nAir sumur + air PDAM\nAlamat ; jl. Gajayana gang 1 / 736 Dinoyo\n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 47,
      "kota": "Malang",
      "latitude": -7.947588214892898,
      "longitude": 112.61041504840215,
      "harga_sewa": "17000000",
      "label_harga_sewa": "Rp17jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_19606.jpg",
      "deskripsi_visual_kontrakan": "**Deskripsi Kontrakan**\n\n**Bentuk dan Gaya:**\nKontrakan ini tampaknya merupakan bangunan sederhana dengan satu lantai, khas rumah tinggal di Indonesia. Fasad depannya memiliki pintu dan jendela dengan bingkai putih, serta sedikit sentuhan ubin berwarna krem di bagian bawah dinding luar. Interiornya menunjukkan ruangan-ruangan dengan dinding polos berwarna krem atau putih tulang, dan lantai yang menggunakan ubin. Ada kamar mandi dengan bak mandi bergaya tradisional (bak penampungan air) yang dilapisi ubin putih, dan lantai kamar mandi bermotif merah bata. Ruangan lain memiliki lantai ubin berwarna abu-abu gelap. Ada juga area yang tampak seperti ruang penyimpanan dengan lemari kayu dan rak terbuka di dinding. Secara keseluruhan, gaya kontrakan ini fungsional dan minimalis, tanpa ornamen yang menonjol.\n\n**Suasana dan Lingkungan:**\nSuasana di dalam kontrakan terlihat cukup dasar dan mungkin sedikit suram karena pencahayaan yang kurang di beberapa area (seperti terlihat dari bercak gelap di dinding yang mungkin disebabkan oleh kelembaban atau kotoran). Dinding yang ada bercak juga menunjukkan bahwa pemeliharaan mungkin tidak optimal. Lingkungan di luar kontrakan tampak padat namun asri dengan tanaman hijau di depan. Jalan di depannya adalah jalan setapak berubin, menunjukkan area pemukiman yang mungkin tidak dilalui kendaraan roda empat besar secara langsung di depan pintu. Ada gerobak jualan di depan, mengindikasikan adanya aktivitas komersial kecil atau hunian yang juga berfungsi sebagai tempat usaha.\n\n**Kesesuaian Penggunaan:**\n\n* **Hunian:** Kontrakan ini **cukup cocok untuk hunian dasar**, terutama bagi individu atau pasangan yang mencari tempat tinggal sederhana dan terjangkau.\n    * **Alasan Cocok:** Ada kamar mandi fungsional dan beberapa ruangan yang bisa difungsikan sebagai kamar tidur dan area umum. Lingkungan yang asri dengan tanaman hijau di luar juga menambah kenyamanan.\n    * **Alasan Kurang Optimal:** Kondisi interior yang terlihat kurang terawat (dinding kotor/bercak) mungkin memerlukan perbaikan atau pembersihan sebelum nyaman dihuni. Ruangan terlihat agak sempit, cocok untuk hunian minimalis.\n\n* **Gudang:** Kontrakan ini **cukup cocok untuk gudang kecil atau penyimpanan barang**, terutama di area ruangan yang kosong dengan lantai ubin abu-abu.\n    * **Alasan Cocok:** Ukuran ruangan yang tidak terlalu besar dan keberadaan lemari serta rak di salah satu area sangat mendukung fungsi penyimpanan. Lokasi yang tidak langsung di jalan utama mungkin aman untuk penyimpanan.\n    * **Alasan Kurang Optimal:** Kelembaban (jika bercak di dinding adalah tanda kelembaban) bisa menjadi masalah untuk penyimpanan barang tertentu yang sensitif terhadap kelembaban.\n\n* **Tempat Jualan (Usaha Kecil):** Kontrakan ini **sangat cocok untuk tempat jualan atau usaha kecil**, terutama yang tidak memerlukan ruang pameran besar. Adanya gerobak di depan rumah memperkuat indikasi ini.\n    * **Alasan Cocok:** Lokasinya di pinggir jalan setapak yang dilalui orang (mengacu pada lingkungan perumahan), dan fasad yang cukup terbuka dengan jendela besar, memungkinkan interaksi dengan pembeli. Area depan rumah yang cukup luas bisa menampung gerobak jualan atau etalase kecil.\n    * **Alasan Kurang Optimal:** Ukuran ruangan di dalam mungkin membatasi jenis usaha yang membutuhkan banyak ruang.\n\n**Kesimpulan:**\n\nKontrakan ini adalah properti serbaguna yang paling cocok untuk hunian sederhana atau usaha kecil, dengan potensi penggunaan sebagai gudang pendukung. Kondisi interior yang kurang terawat adalah poin utama yang perlu dipertimbangkan untuk perbaikan atau pembersihan, terutama jika akan digunakan sebagai hunian atau tempat usaha yang memerlukan citra bersih. Lingkungan yang cukup padat dan asri memberikan nilai tambah untuk aksesibilitas dan suasana.",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah lokasi di Jl. Kerto Rahayu\n\nInformasi Kontrakan:\n3 kamar tidur = 17 juta pertahun.\n4 kamar tidur = 18 juta pertahun.\n- Kondisi: Bersih dan terawat.\n- Kelengkapan: Kasur.\n\nInformasi Tambahan:\n- Listrik: Token 900 watt\n- Air: PDAM\n- Parkir: Bisa 4 sepeda motor\n- Akses Jalan: Motor\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?\n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 48,
      "kota": "Malang",
      "latitude": -7.946829692751235,
      "longitude": 112.61076185121824,
      "harga_sewa": "18000000",
      "label_harga_sewa": "Rp18jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_28679.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**Rumah Kontrakan Termurah di Dinoyo Dekat UB dan UMM 3**  \n\n**Lokasi Strategis:**  \n- Sangat dekat dengan Kampus UB  \n- Sangat dekat dengan Kampus UIN  \n- Dekat dengan Polinema  \n- Dekat dengan Kampus UM  \n\n**Spesifikasi Rumah:**  \n- 4 Kamar Tidur (sudah tersedia kasur, bantal, lemari, kipas angin)  \n- 1 Kamar Mandi  \n- Dapur sudah dilengkapi kompor dan gas LPG 3kg  \n- Rumah 2 lantai  \n- Lingkungan bebas dan sopan  \n\n**Harga:** Rp 18 Juta/Tahun  \n\nWhatsApp: wa.me/6282231320160?text=Permisi%20apakah%20rumah%204%20kamar%20full%20perabotan%2018%20juta%20di%20Dinoyo%20masih%20ada?  \n\nWebsite: kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 49,
      "kota": "Malang",
      "latitude": -7.9630125700143415,
      "longitude": 112.60670938705647,
      "harga_sewa": "20000000",
      "label_harga_sewa": "Rp20jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_8672",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "rumah 2 lantai\n4 kamar tidur\n2 kamar mandi\n2 kamar ada kasur dan lemari\n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 50,
      "kota": "Malang",
      "latitude": -7.8887654416057815,
      "longitude": 112.66862881582018,
      "harga_sewa": "12000000",
      "label_harga_sewa": "Rp12jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_74427",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Rumah 4 kamar tidur murah\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 51,
      "kota": "Malang",
      "latitude": -7.9500561584374365,
      "longitude": 112.61051296363158,
      "harga_sewa": "26000000",
      "label_harga_sewa": "Rp26jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_85253",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "🏡 Kontrakan 6 kamar tidur.. Harga 26jt..  Bisa bayar 2x.. Lokasi di Dinoyo malang dekat dengan kampus UIN, UB, UM, Polinema, dan McD Dinoyo..\n\n✅️ Akses mobil mudah  \n✅️ 6 Kamar tidur luas  \n✅️ 2 Kamar mandi nyaman  \n✅️ Bonus kasur & bantal baru  \n✅️ Siap Huni\n✅️ Lingkungan bebas sopan\n\nHarga 26 juta..\n\n https://wa.me/6282231320160?text=mau%20tanya%20kontrakan%206%20kamar%20di%20dekat%20UB\n\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 52,
      "kota": "Malang",
      "latitude": -7.910894104085218,
      "longitude": 112.6299807768842,
      "harga_sewa": "15000000",
      "label_harga_sewa": "Rp15jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_58405",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "🏡 DIKONTRAKKAN RUMAH MURAH di PINGGIR JALAN TASIKMADU🏡\n\n✅ Garasi Mobil\n✅ 2 Kamar Tidur\n✅ 1 Kamar Mandi\n✅ Dapur dengan Wastafel\n✅ Air Sumur\n✅️ Akses jalan lebar bisa mobil\n✅️ Rumah berada di pinggir jalan\n\n💰 Harga Sewaan: Hanya 15 Juta/Tahun\n\nhttps://wa.me/6282231320160?text=mau%20tanya,%20rumah%202%20kamar%20di%20Tasikmadu\n\nhttps://t.me/kontrakyuk?text=mau%20tanya,%20rumah%202%20kamar%20di%20Tasikmadu\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 53,
      "kota": "Malang",
      "latitude": -7.912594921428515,
      "longitude": 112.66425878223534,
      "harga_sewa": "14000000",
      "label_harga_sewa": "Rp14jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_21572",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Kamar 2\n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 54,
      "kota": "Malang",
      "latitude": -7.938326459115499,
      "longitude": 112.60650829338555,
      "harga_sewa": "19000000",
      "label_harga_sewa": "Rp19jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_24991",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "3 kamar tidur\n1 kamar mandi \n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 55,
      "kota": "Malang",
      "latitude": -7.913492713378674,
      "longitude": 112.66706850458415,
      "harga_sewa": "14000000",
      "label_harga_sewa": "Rp14jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_59297",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "🏡 Dikontrakan 1 rumah di perumahan Mondoroko Singosari.. lingkungan dan tetangga nyaman seperti di kampung.. \n\n✅ Ada parkiran mobil\n✅️️ 2 Kamar tidur (dapat 2 kasur)\n✅️ Ruang tamu (ada meja dan kursi)\n✅️ 1 Kamar mandi\n✅️ Dapur (dapat kompor)\n✅️ Akses jalan muat mobil\n✅️ Halaman rumah luas rindang\n✅️ Suasana kampung yang sejuk, sederhana dan rukun\n\n✨️ Harga pertahun 15 juta saja \n\nhttps://wa.me/6282231320160?text=mau%20tanya,%20rumah%202%20kamar%20di%20perumahan%20Mondoroko%20Singosari\n\nhttps://t.me/kontrakyuk?text=mau%20tanya,%20rumah%202%20kamar%20di%20perumahan%20Mondoroko%20Singosari\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 56,
      "kota": "Malang",
      "latitude": -7.913706434902089,
      "longitude": 112.66452374192737,
      "harga_sewa": "13500000",
      "label_harga_sewa": "Rp13,5jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_43583",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Rumah 2 lantai\n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 57,
      "kota": "Malang",
      "latitude": -7.908962793443866,
      "longitude": 112.66696483058881,
      "harga_sewa": "13000000",
      "label_harga_sewa": "Rp13jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_2586",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Rumah 2 lantai\n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 58,
      "kota": "Malang",
      "latitude": -7.920488249017227,
      "longitude": 112.6305905798866,
      "harga_sewa": "19000000",
      "label_harga_sewa": "Rp19jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_77659",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Ada 3 kamar tidur dan satu kamar mandi\n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 59,
      "kota": "Malang",
      "latitude": -7.922187250265562,
      "longitude": 112.63093844355859,
      "harga_sewa": "19000000",
      "label_harga_sewa": "Rp19jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_17701",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "2 kamar tidur\nruang keluarga\njemuran di lantai 2\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 60,
      "kota": "Malang",
      "latitude": -7.956186404896619,
      "longitude": 112.5998351780372,
      "harga_sewa": "18000000",
      "label_harga_sewa": "Rp18jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_34891",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "4 kamar tidur\n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 61,
      "kota": "Malang",
      "latitude": -7.945198784093057,
      "longitude": 112.61017481549355,
      "harga_sewa": "36000000",
      "label_harga_sewa": "Rp36jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_77935",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Saya ada 1 rumah kontrakkan termurahh lokasinya di samping kampus UB. Jalan kaki ke UB juga bisa.\n\nSpesifikasi:\n✅️ GRATISS iuran RT setahun\n✅️ GRATISS kasur, bantal dan cover baru\n✅ GRATISS ️Lemari\n✅️ GRATISS Dapur lengkap + kulkas\n✅️ Akses mobil\n✅️ 6 Kamar tidur ( kapasitas 7-8org)\n✅️ 2 Kamar mandi \n✅️ Balkon dan ruang tamu luas\n✅️ Bangunan tingkat 3\n✅️ Pdam\n✅️ Listrik token 1300 watt\n\nhttps://wa.me/6282231320160?text=mau%20tanya%20kontrakan%206%20kamar%20di%20samping%20UB\n\nhttps://t.me/kontrakyuk?text=mau%20tanya%20kontrakan%206%20kamar%20di%20samping%20UB\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 62,
      "kota": "Malang",
      "latitude": -7.946203708963452,
      "longitude": 112.608328561896,
      "harga_sewa": "15000000",
      "label_harga_sewa": "Rp15jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_35599",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan hanya toko saja\n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 63,
      "kota": "Malang",
      "latitude": -7.963813996862936,
      "longitude": 112.60677894784232,
      "harga_sewa": "24000000",
      "label_harga_sewa": "Rp24jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_60398",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Ruko rumah 2 lantai\n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 64,
      "kota": "Malang",
      "latitude": -7.920677087012973,
      "longitude": 112.63283098534879,
      "harga_sewa": "22000000",
      "label_harga_sewa": "Rp22jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_91383",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Rumah di Perumahan dekat Jl. ikan Tombro Barat\n\n3 kamar tidur\nkamar mandi\ndapur\nruang makan\nGarasi mobil dan motor\nDekat masjid\nAkses jalan mobil\n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 65,
      "kota": "Malang",
      "latitude": -7.931870728753931,
      "longitude": 112.63715799594495,
      "harga_sewa": "16000000",
      "label_harga_sewa": "Rp16jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_13983",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Di kontrakan rumah malang kota Jl.Piranha Atas kamar 2 besar\"akses mobil ada garasi buat usaha jualan juga bisa\n\nhttps://wa.me/6282231320160\n\nhttps://t.me/kontrakyuk\n\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 66,
      "kota": "Malang",
      "latitude": -7.887828016224912,
      "longitude": 112.66653549317931,
      "harga_sewa": "12000000",
      "label_harga_sewa": "Rp12jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_67267",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "2 kamar tidur\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 67,
      "kota": "Malang",
      "latitude": -7.937708882053289,
      "longitude": 112.6216649011865,
      "harga_sewa": "55000000",
      "label_harga_sewa": "Rp55jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_5354",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**🏠 Dikontrakan Rumah – Fasilitas Lengkap & Siap Huni!**  \n\n✨ *Pilihan ideal untuk keluarga besar atau komunitas!*  \n✅ Gratis kasur baru di setiap kamar  \n✅ Gratis lemari baru di setiap kamar  \n✅ Gratis meja belajar baru  \n✅ 5 Kamar Tidur Standard  \n✅ 1 Kamar Tidur Sharing (3 kasur tersedia)  \n✅ 1 Kamar Mandi  \n✅ Halaman parkir luas  \n✅ Tempat jemur baju nyaman  \n✅ Pendopo di lantai 2 untuk bersantai  \n\n📍 Lokasi strategis dan akses mudah.  \n💼 Langsung huni, fasilitas lengkap siap pakai!  \n\n55 juta / tahun\n\nhttps://wa.me/6282231320160?text=mau%20tanya%20kontrakan/kos%206%20kamar%20di%20Griya%20Shanta\n\nhttps://t.me/kontrakyuk?text=mau%20tanya%20kontrakan/kos%206%20kamar%20di%20Griya%20Shanta\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 68,
      "kota": "Malang",
      "latitude": -7.9390333779993965,
      "longitude": 112.62255142226171,
      "harga_sewa": "24000000",
      "label_harga_sewa": "Rp24jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_60823",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "🏠 Dikontrakan Rumah Minimalis Termurahhh di Perumahan Suhat\n\n✅️ 3 kamar tidur\n✅️ 1 Kamar mandi\n✅️ Ruang tamu\n✅️ Dapur\n✅️ Carport\n✅️ Akses jalan lebar muat 2 mobil\n✅️ Dekat masjid\n✅️ Keamanan satpam dan cctv\n✅️ Lingkungan bebas sopan\n✅️ Lokasi perumahan di tengah jalan Suhat, Malang\n✅️ Dekat rumah sakit UB, kampus Polinema, UB\n✅️ Sebelum ditempati Rumah akan direnovasi total dan di cat\n\n✨Pertahun harga 24 juta\n\nhttps://wa.me/6282231320160?text=mau%20tanya%20kontrakan%203%20kamar%20di%20perumahan%20Griya%20Shanta\n\nhttps://t.me/kontrakyuk?text=mau%20tanya%20kontrakan%203%20kamar%20di%20perumahan%20Griya%20Shanta\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 69,
      "kota": "Malang",
      "latitude": -7.937278819042854,
      "longitude": 112.61763662669317,
      "harga_sewa": "27000000",
      "label_harga_sewa": "Rp27jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_61111",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Rumah di perumahan Griya Shanta\n\n✅ Akses Mobil\n✅ 2 kamar tidur\n✅1 kamar mandi\n\nhttps://wa.me/6282231320160?text=mau%20tanya%20kontrakan%202%20kamar%20di%20Griya%20Shanta\n\nhttps://t.me/kontrakyuk?text=mau%20tanya%20kontrakan%202%20kamar%20di%20Griya%20Shanta\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 70,
      "kota": "Malang",
      "latitude": -7.951996956789082,
      "longitude": 112.60278439585966,
      "harga_sewa": "40000000",
      "label_harga_sewa": "Rp40jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_51126.jpg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**Dikontrakkan Rumah Eksklusif Full Furnished – 3 Kamar Tidur, 2 Garasi Mobil di Perumahan Sigura-Gura**  \n\n**Lokasi Strategis:**  \n- Dekat dengan kampus UB, UIN, UM, Polinema, dan Unmer  \n- Dekat dengan pusat pendidikan di Jl. Veteran Malang  \n- Akses mudah, lingkungan nyaman dan aman  \n- Dekat dengan masjid\n\n**Fasilitas Rumah:**  \n- 3 Kamar Tidur sudah dilengkapi kasur dan lemari  \n- 1 Kamar Mandi  \n- 2 Carport, garasi mobil bisa untuk 2 mobil  \n- Kulkas  \n- Kompor  \n- Full Furnished  \n- Listrik 1300 KWh  \n- Air PDAM  \n- WiFi sudah terpasang  \n\n**Harga:** Rp 40.000.000/Tahun  \n\nWhatsApp: wa.me/6282231320160?text=permisi%20apakah%20rumah%203%20kamar%20full%20furnish%20di%20Jl.%20Sigura-gura%20masih%20ada?  \n\nTelegram: t.me/kontrakyuk?text=permisi%20apakah%20rumah%203%20kamar%20full%20furnish%20di%20Jl.%20Sigura-gura%20masih%20ada?  \n\nWebsite: kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 71,
      "kota": "Malang",
      "latitude": -7.952211566332536,
      "longitude": 112.60495018981797,
      "harga_sewa": "50000000",
      "label_harga_sewa": "Rp50jt",
      "ketersediaan": "Laku 😍️",
      "foto_kontrakan": "20250301202648_96080.jpg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**Disewakan Rumah Eksklusif Seperti Villa – Lokasi Strategis di Perumahan Malang**  \n\n**Keunggulan Lokasi:**  \n- Keamanan terjamin dengan satpam 24 jam  \n- Dekat masjid besar (hanya 30 meter, selisih 2 rumah)  \n- Dekat pusat kuliner dan swalayan (Alfamart, Indomart, Family Mart)  \n- Lokasi strategis di tengah kota, dekat kampus:  \n  - UB, UIN, Polinema, UM, UMM 3 (ke UIN bisa jalan kaki)  \n\n**Spesifikasi Rumah:**  \n- 5 Kamar Tidur lengkap dengan springbed dan lemari pakaian di setiap kamar  \n- 3 Kamar Mandi (1 kamar mandi dalam luas di lantai bawah)  \n- Perabotan dapur lengkap:  \n  - Kompor  \n  - Alat masak  \n  - Alat makan & minum  \n  - Meja makan  \n  - Kulkas  \n- Ruang tamu sudah dilengkapi:  \n  - Meja & kursi  \n  - Tikar busa untuk lesehan  \n- Parkiran luas, bisa muat hingga 1-2 mobil  \n\n**Keunggulan Lain:**  \n- Rumah baru direnovasi dan dicat total, tampak seperti baru  \n- Lingkungan aman, nyaman, dan asri, cocok untuk keluarga atau mahasiswa  \n\n**Harga:** Rp 50.000.000/Tahun  \n\nWhatsApp: wa.me/6282231320160?text=Permisi,%20apakah%20kontrakan%205%20kamar%20di%20perumahan%20Sunan%20Muria%20masih%20ada?\n\nTelegram: t.me/kontrakyuk?text=Permisi,%20apakah%20kontrakan%205%20kamar%20di%20perumahan%20Sunan%20Muria%20masih%20ada?\n  \nWebsite: kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 72,
      "kota": "Malang",
      "latitude": -7.940034692809371,
      "longitude": 112.62068859833725,
      "harga_sewa": "25000000",
      "label_harga_sewa": "Rp25jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_12447",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "🏠 Dikontrakan Rumah Termurah di Perumahan – Rp 25 Juta/Tahun  \n\n✅️ 6km tidur\n✅️ 1km mandi \n✅️ listrik 1300kwh\n✅️ air PDAM\n\nhttps://wa.me/6282231320160?text=mau%20tanya%20kontrakan%206%20kamar%20di%20perumahan%20Griya%20Shanta\n\nhttps://t.me/kontrakyuk?text=mau%20tanya%20kontrakan%206%20kamar%20di%20perumahan%20Griya%20Shanta\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 73,
      "kota": "Malang",
      "latitude": -7.932033709737285,
      "longitude": 112.64614475700594,
      "harga_sewa": "24000000",
      "label_harga_sewa": "Rp24jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_52230",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "🏠 Dikontrakan Rumah di Arjosari – Rp 24 Juta/Tahun  \n\n✨ *Fasilitas lengkap dan siap huni!*  \n✅ 3 Kamar Tidur sudah dapat kasur dan lemari\n✅ 1 Kamar Mandi  \n✅ Dapur luas ada meja makan  \n✅ Ada carport parkiran garasi mobil \n✅ Akses jalan bisa mobil  \n✅ Air sumur jernih  \n✅ Listrik 900 watt  \n\n\nhttps://wa.me/6282231320160?text=mau%20tanya%20,kontrakan%203%20kamar%20di%20Jl.Sumpil%203%20Arjosari\n\nhttps://t.me/kontrakyuk?text=mau%20tanya%20,kontrakan%203%20kamar%20di%20Jl.Sumpil%203%20Arjosari\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 74,
      "kota": "Malang",
      "latitude": -7.925834254980819,
      "longitude": 112.62049249420001,
      "harga_sewa": "16000000",
      "label_harga_sewa": "Rp16jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_73720",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "🏡 Dikontrakan Rumah di Jl. Ikan Gurami dekat Sudimoro dengan view seperti di kota Batu.\n\n✨ Siap huni..!! \n✅ 3 Kamar Tidur sudah ada kasur perkamar\n✅ 1 Kamar Mandi  \n✅ Ruang tamu\n✅ Dapur\n✅ Teras depan + pagar besi\n✅ Akses jalan bisa mobil. Ada parkiran mobil\n✅ Air sumur jernih  \n✅ Listrik 900 watt \n✅️ Pemandangan depan rumah seperti di kota Batu\n✅️ Sangat dekat dengan sudimoro dan suhat\n✅️ Lebih dingin dan lebih sejuk dari pada di Suhat\n✅️ Rumah terawat dan cat sangat bagus \n✅️ Sangat cocok untuk keluarga atau mahasiswa\n\n✨Pertahun harga 16 juta\n\nhttps://wa.me/6282231320160?text=mau%20tanya%20,kontrakan%203%20kamar%20view%20kota%20Batu%20di%20Jl.Ikan%20Gurami\n\nhttps://t.me/kontrakyuk?text=mau%20tanya%20,kontrakan%203%20kamar%20view%20kota%20Batu%20di%20Jl.Ikan%20Gurami\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 75,
      "kota": "Malang",
      "latitude": -7.942471981228746,
      "longitude": 112.61181971127773,
      "harga_sewa": "20000000",
      "label_harga_sewa": "Rp20jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_69223",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "🏠 Dikontrakan Rumah Dinoyo  – Rp 20 juta/tahun  \n\n✅ 3 Kamar Tidur sudah dapat kasur dan lemari\n✅ 1 Kamar Mandi  \n✅ Bisa untuk usaha\n✅ Teras depan  \n✅ Akses mobil\n✅ Jalanan ramai\n\n✨ pertahunnya 20 juta\n\nhttps://wa.me/6282231320160?text=mau%20tanya%20,kontrakan%203%20kamar%20di%20Dinoyo\n\nhttps://t.me/kontrakyuk?text=mau%20tanya%20,kontrakan%203%20kamar%20di%20Dinoyo\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 76,
      "kota": "Malang",
      "latitude": -7.914847555890329,
      "longitude": 112.62237965616232,
      "harga_sewa": "22000000",
      "label_harga_sewa": "Rp22jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_79902",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "🏠 Dikontrakan Rumah di Perumahan Tasikmadu sudah termasuk isi rumahnya ada Pemanas Air  \n\n✨ *Fasilitas lengkap dan siap huni!\n✅ 2 Kamar Tidur sudah ada kasur dan lemari\n✅ 1 Kamar Mandi  \n✅ Ada pemanas air dan shower\n✅ Wc / Closet duduk\n✅ Ada carport \n✅ Akses jalan bisa mobil\n✅ Lokasi di dalam perumahan\n\n✨Pertahun 22 juta rupiah\n\nhttps://wa.me/6282231320160?text=mau%20tanya%20,kontrakan%202%20kamar%20di%20Green%20View%20Tasikmadu\n\nhttps://t.me/kontrakyuk?text=mau%20tanya%20,kontrakan%202%20kamar%20di%20Green%20View%20Tasikmadu\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 77,
      "kota": "Malang",
      "latitude": -7.9548129997556725,
      "longitude": 112.60400141501374,
      "harga_sewa": "40000000",
      "label_harga_sewa": "Rp40jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_81761",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "🏠 Dikontrakan Rumah Ekslusif di Perumahan Sigura-Gura Dekat kampus UB\n\n✅ 4 Kamar Tidur \n✅ 2 Kamar Mandi\n✅️ Ruang tamu\n✅️ Dapur\n✅️ Ruang makan\n✅️ Ruang kumpul\n✅️ Ada taman dan teras luas\n✅️ Ada tempat jemur pakaian\n✅ Ada carport \n✅ Akses jalan bisa 2 mobil \n\n📍 Lokasi Jl. Sigura-gura, dekat kampus UM, UIN, Polinema dan UB.\n\n🕌 Dekat Masjid, Matos, tempat makan, dll.\n\n✨️ HARGA 40Juta / tahun\n\nhttps://wa.me/6282231320160?text=mau%20tanya%20,kontrakan%204%20kamar%20di%20Jl.%20Sigura%20gura\n\nhttps://t.me/kontrakyuk?text=mau%20tanya%20,kontrakan%204%20kamar%20di%20Jl.%20Sigura%20gura\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 78,
      "kota": "Malang",
      "latitude": -7.9286488053492015,
      "longitude": 112.61557052665144,
      "harga_sewa": "30000000",
      "label_harga_sewa": "Rp30jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_25219",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "🏠 Dikontrakan Rumah Full Furnish Ada AC di Perumahan dekat suhat Malang\n\n✨ *Fasilitas lengkap dan siap huni!*  \n✅ 2 Kamar Tidur  (1 kamar ada AC nya)\n✅ 1 Kamar Mandi  \n✅ Dapur\n✅ Tempat jemur baju\n✅ Ada pemanas air\n✅ Ada carport \n✅ Akses mobil\n✅ Rumah di perumahan paling depan\n\n📍 Lokasi dekat dengan Suhat Malang\n💼 Siap langsung huni, tanpa repot!  \n\nhttps://wa.me/6282231320160?text=mau%20tanya%20,kontrakan%202%20kamar%20ada%20ACdi%20Jl.%20Arumba\n\nhttps://t.me/kontrakyuk?text=mau%20tanya%20,kontrakan%202%20kamar%20ada%20ACdi%20Jl.%20Arumba\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 79,
      "kota": "Malang",
      "latitude": -7.92647087345306,
      "longitude": 112.61328011858315,
      "harga_sewa": "23000000",
      "label_harga_sewa": "Rp23jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_24797",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "🏠 Dikontrakan Rumah Murah di Perumahan dekat RRI – Rp 23 juta/tahun  \n\n✨ *Rumah Luas*  \n✅ 2 Kamar Tidur  \n✅ 1 Kamar Mandi  \n✅ Ruang depan\n✅ Dapur\n✅ Tempat jemur baju\n✅ Ada carport \n✅ Akses mobil\n✅ Perumahan\n\n📍 Lokasi dekat Jl. Arumba\n\nhttps://wa.me/6282231320160?text=mau%20tanya%20,kontrakan%2022%20juta,%202%20kamar%20di%20Jl.%20Arumba\n\nhttps://t.me/kontrakyuk?text=mau%20tanya%20,kontrakan%2022%20juta,%202%20kamar%20di%20Jl.%20Arumba\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 80,
      "kota": "Malang",
      "latitude": -7.933057640275426,
      "longitude": 112.64075630752664,
      "harga_sewa": "22000000",
      "label_harga_sewa": "Rp22jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_62093",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**🏠 Dikontrakan Rumah Muraaahh – Rp 22 juta/tahun**  \n\n✨ *Fasilitas lengkap dan siap huni!*  \n✅ 4 Kamar Tidur  \n✅ 1 Kamar Mandi  \n✅ Dapur\n✅ 🚗 Akses Mobil 🚗\n✅ Parkiran muat 4 sepeda motor\n✅ Alat dapur lengkap\n✅ Kasur busa\n\n📍 Lokasi dekat Jl. Ikan Piranha Atas \n💼 Siap langsung huni, tanpa repot!  \n\nhttps://wa.me/6282231320160?text=mau%20tanya%20,kontrakan%2022%20juta,%204%20kamar%20di%20Jl.%20Ikan%20Piranha%20Atas\n\nhttps://t.me/kontrakyuk?text=mau%20tanya%20,kontrakan%2022%20juta,%204%20kamar%20di%20Jl.%20Ikan%20Piranha%20Atas\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 81,
      "kota": "Malang",
      "latitude": -7.9411450602512375,
      "longitude": 112.62280661605203,
      "harga_sewa": "27000000",
      "label_harga_sewa": "Rp27jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_23823",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "🏠 Jarang ada!! Dikontrakan 1 rumah Murahh di perumahan suhat – Rp 27 juta/tahun  \n\n✨ *Full prabot, Fasilitas lengkap dan siap huni!*  \n✅ 3 Kamar Tidur  \n- Kamar tidur utama ada kamar mandi dalam, tempat tidur, lemari dan meja belajar\n- Selain kamar tidur utama juga dapat tempat tidur\n✅ 1 Kamar Mandi  \n✅ Tempat cuci baju\n✅ Jemuran\n✅ Ruang tamu\n✅ Area depan luas\n✅ Dekat gerbang masuk perumahan\n✅ Akses jalan besar muat 2 mobil \n✅ Ada parkiran mobil\n✅ Keamanan 24 jam\n✅ Dekat Masjid, Rumah sakit UB, Polinema, UB, UM, UIN.\n✅ Tetangga ramah dan lingkungan tenang \n\n📍 Lokasi perumahan griya shanta - SUHAT\n\nhttps://wa.me/6282231320160?text=mau%20tanya%20,%20Rumah%20kontrakan%20full%20perabot%203%20kamar%20di%20Jl.%20Griya%20Shanta\n\nhttps://t.me/kontrakyuk?text=mau%20tanya%20,%20Rumah%20kontrakan%20full%20perabot%203%20kamar%20di%20Jl.%20Griya%20Shanta\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 82,
      "kota": "Malang",
      "latitude": -7.913284618823922,
      "longitude": 112.579550661139,
      "harga_sewa": "26000000",
      "label_harga_sewa": "Rp26jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_45419",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "🏠 Dikontrakan Rumah beserta isinya lokasi di Perumahan Sengkaling, Dau  \n\n✨ *Fasilitas lengkap dan siap huni!*  \n✅ 4 Kamar Tidur  \n✅ 1 Kamar Mandi  \n✅ Dapur\n✅ 🚗 Akses Mobil 🚗\n✅ Carport\n✅ Lokasi di perumahan\n\n💰 Pertahun hanya 26 juta sudah tinggal menempati saja  \n\nhttps://wa.me/6282231320160?text=mau%20tanya%20,kontrakan%204%20kamar%20di%20Perumahan%20Bumi%20Asri%20Sengkaling\n\nhttps://t.me/kontrakyuk?text=mau%20tanya%20,kontrakan%204%20kamar%20di%20Perumahan%20Bumi%20Asri%20Sengkaling\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 83,
      "kota": "Malang",
      "latitude": -7.9469271310287075,
      "longitude": 112.63568224708843,
      "harga_sewa": "24000000",
      "label_harga_sewa": "Rp24jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_11771",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "🏡 Dikontrakan rumah Nyaman, Strategis, dan Cocok untuk Keluarga! \n \n✅ 5 kamar tidur\n✅ Listrik pascabayar 900 watt (meteran, bukan token prabayar)  \n✅ Air PDAM + Water heater (gas LPG) untuk mandi nyaman setiap saat  \n✅ Keamanan & kebersihan terjamin   \n✅ Lingkungan ramah, nyaman, dan rukun bertetangga  \n✅ Dekat dengan masjid & musholla, cocok untuk keluarga yang mengutamakan ibadah   \n✅ *hanya untuk keluarga*  \n\n💰 Harga spesial hanya 24 juta per tahun!  \n\nhttps://wa.me/6282231320160?text=mau%20tanya%20,kontrakan%20keluarga%205%20kamar%20di%20Jl%20Bantaran%20Indah%20Blok%20B\n\nhttps://t.me/kontrakyuk?text=mau%20tanya%20,kontrakan%20keluarga%205%20kamar%20di%20Jl%20Bantaran%20Indah%20Blok%20B\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 84,
      "kota": "Malang",
      "latitude": -7.91806913947517,
      "longitude": 112.59631829519054,
      "harga_sewa": "27000000",
      "label_harga_sewa": "Rp27jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_67339",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "✨ SEWA RUMAH – LOKASI STRATEGIS DI BELAKANG KAMPUS UMM 3 ✨  \n\nSpesifikasi Rumah  \n✅ 5 Kamar Tidur, cocok untuk keluarga besar atau berbagi tempat tinggal  \n✅ 1 Kamar Mandi, bersih dan fungsional  \n✅ Kosongan, siap untuk diisi dengan furnitur sesuai kebutuhan   \n✅ Air Sanyo, tersedia tandon untuk menampung air  \n✅ Listrik 1300 Watt, sistem token  \n\nKeuntungan Tambahan  \n✅ Lokasi strategis di belakang Kampus UMM 3, dekat dengan pusat aktivitas  \n✅ Lingkungan nyaman dan ramah, akan dimasukkan ke dalam grup warga jika menjadi penghuni  \n✅ Iuran sampah hanya Rp 75.000/bulan  \n\n💰 Harga sewa pertahunnya  Rp 27.000.000 \n\nhttps://wa.me/6282231320160?text=mau%20tanya%20,kontrakan%20%205%20kamar%20di%20belakang%20UMM%203\n\nhttps://t.me/kontrakyuk?text=mau%20tanya%20,kontrakan%20%205%20kamar%20di%20belakang%20UMM%203\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 85,
      "kota": "Malang",
      "latitude": -7.92894002507825,
      "longitude": 112.60451127034423,
      "harga_sewa": "27000000",
      "label_harga_sewa": "Rp27jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_83175",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "🏡 SEWA RUMAH DI DINOYO – STRATEGIS & COCOK UNTUK USAHA! 📍  \n\n💡 Keunggulan Lokasi:  \n✅ Pinggir Jalan Besar, sangat strategis untuk berjualan  \n✅ Dekat dengan UMM 3 dan pusat aktivitas di Dinoyo-Tologomas  \n✅ Akses Mobil Mudah, cocok untuk kebutuhan usaha dan tempat tinggal  \n\n🏠 Spesifikasi Rumah:  \n✅ 2 Lantai: Ruang lebih luas untuk hunian dan usaha  \n✅ Ruang Tamu, cocok untuk toko atau tempat usaha  \n✅ Ruang Makan, nyaman untuk keluarga  \n✅ Dapur, siap untuk kebutuhan memasak dan usaha makanan  \n✅ Kamar Tidur: 3 kamar tidur\n✅ 1 Kamar Mandi: Bersih dan fungsional  \n✅ Area Jemuran, di lantai atas untuk kenyamanan tambahan\n  \nhttps://wa.me/6282231320160?text=mau%20tanya%20,kontrakan%20untuk%20usaha.%203%20kamar%20dekat%20kampus%20UMM%203\n\nhttps://t.me/kontrakyuk?text=mau%20tanya%20,kontrakan%20untuk%20usaha.%203%20kamar%20dekat%20kampus%20UMM%203\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 86,
      "kota": "Malang",
      "latitude": -7.962027056287749,
      "longitude": 112.60540212464524,
      "harga_sewa": "10000000",
      "label_harga_sewa": "Rp10jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_84689",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "🏡 DIKONTRAKAN RUMAH MURAH – HANYA 10 JUTA/Tahun! \n\n💰 Harga Super murahh: Rp 10.000.000/tahun  \n📌 Lokasi Strategis: Jalan Raya Candi 3. Hanya 5 menit ke Kampus\n\n🏠 Fasilitas Rumah:  \n✅ 2 Kamar Tidur lengkap dengan kasur\n✅ Free Air\n✅ Rumah nyaman, siap huni, cocok untuk keluarga atau mahasiswa  \n✅️ Lokasi pinggir jalan. Akses jalan muat 2 mobil\n\nhttps://wa.me/6282231320160?text=mau%20tanya,%20kontrakan%20murahh%202%20kamar%20di%20Jl.%20Candi\n\nhttps://t.me/kontrakyuk?text=mau%20tanya,%20kontrakan%20murahh%202%20kamar%20di%20Jl.%20Candi\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 87,
      "kota": "Malang",
      "latitude": -7.92461489979925,
      "longitude": 112.6115283379199,
      "harga_sewa": "30000000",
      "label_harga_sewa": "Rp30jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_67760",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "🏡 SEWA RUMAH PREMIUM MEWAH– COCOK UNTUK KANTOR ATAU TEMPAT TINGGAL ✨ \n\n📍 Lokasi Strategis:  \n✅ Berada di Perumahan Arumba, lingkungan eksklusif dan nyaman  \n✅ Akses mudah, ideal untuk hunian keluarga atau kantor  \n\n🏠 Spesifikasi Rumah:  \n✅ 2 Lantai, desain modern dan fungsional  \n✅ 2 Kamar Tidur, cocok untuk keluarga kecil atau ruang kerja tambahan  \n✅ 1 Kamar Mandi, bersih dan nyaman  \n✅ Dapur, siap untuk kebutuhan memasak  \n✅ Carport, untuk parkir kendaraan dengan aman  \n✅ Kosongan, bebas diisi perabotan sesuai kebutuhan Anda  \n\n💰 Harga Sewa: Rp 30.000.000/tahun  \n\n✨ Keunggulan:  \n- Lingkungan aman, tenang, dan prestisius  \n- Cocok untuk kantor kecil, tempat usaha, atau tempat tinggal keluarga  \n\nhttps://wa.me/6282231320160?text=mau%20tanya,%20rumah%20mewah%202%20kamar%20di%20perumahan%20Arumba\n\nhttps://t.me/kontrakyuk?text=mau%20tanya,%20rumah%20mewah%202%20kamar%20di%20perumahan%20Arumba\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 88,
      "kota": "Malang",
      "latitude": -7.926700530736099,
      "longitude": 112.61003983098911,
      "harga_sewa": "38000000",
      "label_harga_sewa": "Rp38jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_60327",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "🏡 DIKONTRAKAN RUMAH ESKLUSIF – IDEAL UNTUK KANTOR ATAU TEMPAT TINGGAL ✨  \n\n📍 Lokasi:  \nPerumahan Arumba, Malang Kota  \nLingkungan nyaman dan strategis!  \n\n🏠 Spesifikasi Rumah:  \n✅️ 3 Lantai, luas dan modern  \n✅️ 4 Kamar Tidur, cocok untuk keluarga besar atau ruang kerja  \n✅️ 3 Kamar Mandi, bersih dan fungsional  \n✅️ Meja Kerja & Meja TV, siap pakai untuk kebutuhan kantor atau tempat tinggal  \n✅ Cocok untuk kantor atau tempat tinggal keluarga  \n✅ Lingkungan aman, tenang, dan prestisius  \n✅ Lokasi strategis dengan akses mudah ke pusat kota  \n\n💰 Harga Sewa: Rp 38.000.000/tahun  \n\nhttps://wa.me/6282231320160?text=mau%20tanya,%20rumah%203%20lantai,%204%20kamar%20di%20perumahan%20Arumba\n\nhttps://t.me/kontrakyuk?text=mau%20tanya,%20rumah%203%20lantai,%204%20kamar%20di%20perumahan%20Arumba\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 89,
      "kota": "Malang",
      "latitude": -7.926239847722516,
      "longitude": 112.61170438535473,
      "harga_sewa": "32000000",
      "label_harga_sewa": "Rp32jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_2610.jpg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "🏡 DISEWAKAN RUMAH PERUMAHAN – LOKASI STRATEGIS DI MALANG KOTA ✨\n\n✅️ Dekat dengan universitas ternama:  UB, Unisma, Unmu, Polinema (hanya 10 menit)  \n✅️ 2 Lantai  \n✅️ 3 Kamar Tidur \n✅️ 2 Kamar Mandi\n✅️ Carport dan Kanopi  \n✅️ Pagar  \n✅️ Akses Jalan Luas, bisa simpangan mobil  \n✅️ Keamanan terjamin dengan security 24 jam  \n✅️ Lokasi strategis, cocok untuk keluarga atau mahasiswa  \n\n💰 Harga Sewa: Rp 32.000.000/tahun \n\n📍 Lokasi:   Perumahan Arumba, Malang Kota  \n\nhttps://wa.me/6282231320160?text=mau%20tanya,%20rumah%202%20lantai,%203%20kamar%20di%20perumahan%20Arumba\n\nhttps://t.me/kontrakyuk?text=mau%20tanya,%20rumah%202%20lantai,%203%20kamar%20di%20perumahan%20Arumba\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 90,
      "kota": "Malang",
      "latitude": -7.925585674540055,
      "longitude": 112.6169246242322,
      "harga_sewa": "40000000",
      "label_harga_sewa": "Rp40jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_15001",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "🏡 DIKONTRAKAN RUMAH EKSKLUSIF DI ARUMBA MALANG \n\n📍 Lokasi:  \n✅️ Dekat dengan Kampus UB, Unmuh, Unisma, Polinema  \n✅️ Dekat dengan Sentra Cafe Sudimoro, Masjid, Apotik, Indomaret, dan Tempat Wisata  \n\n🏠 Fasilitas Rumah:  \n✅️ 2 Lantai dengan Balkon  \n✅️ 2 Kamar Tidur Besar + 2 Bed \n✅️ 2 Kamar Mandi Pribadi \n✅️ 2 Pasang AC Daikin untuk kenyamanan maksimal  \n✅️ 1 Pasang Water Heater untuk mandi hangat  \n✅️ Listrik 2200 Watt  \n✅️ Kitchen Set Full lengkap dengan Kompor  \n✅️ Ruang Tamu luas dan nyaman  \n✅️ Gordyn modern untuk kenyamanan dan privasi  \n✅️ Garasi Lebar untuk parkir lebih dari 1 mobil  \n✅️ Canopy dan Pagar Rumah untuk privasi dan keamanan  \n✅️ Small Garden untuk suasana asri  \n\n✨ Keunggulan Lokasi & Keamanan:  \n✅️ Security 24 Jam dengan sistem One Gate  \n✅️ Lokasi sangat strategis, cocok untuk keluarga dan profesional  \n✅️ Akses mudah ke pusat kota dan fasilitas umum  \n\n✨️ Harga: Rp 40.000.000/tahun  \n\nhttps://wa.me/6282231320160?text=mau%20tanya,%20rumah%20Mewah%202%20lantai,%202%20kamar%20di%20perumahan%20Permata%20Tanggul%20Wulung\n\nhttps://t.me/kontrakyuk?text=mau%20tanya,%20rumah%20Mewah%202%20lantai,%202%20kamar%20di%20perumahan%20Permata%20Tanggul%20Wulung\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 91,
      "kota": "Malang",
      "latitude": -7.942173049027208,
      "longitude": 112.6162862761197,
      "harga_sewa": "30000000",
      "label_harga_sewa": "Rp30jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_43163.jpg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "🏡 JARANG ADA!! RUMAH KONTRAKAN 6 KAMAR TERMURAH SE-MALANG!! SEMUA KAMAR MANDI DALAM – DEKAT KAMPUS POLINEMA, UB, UIN, UMM dan UM! 📍  \n\n💰 Harga Super Kebangetan Murah: HANYA Rp 30.000.000/Tahun\n\n🏠 Spesifikasi Rumah:  \n- 6 Kamar Tidur \n  ✅ Semua kamar memiliki kamar mandi dalam \n  ✅ Sudah dilengkapi dengan kasur & lemari pakaian  \n- Akses Jalan Mobil, sangat mudah diakses  \n- Parkiran Sepeda Motor luas, bisa menampung lebih dari 7 motor \n\n📍 Lokasi Strategis:  \n- Berada di belakang Kampus Polinema, super dekat dengan:  \n  ✅ Polinema  \n  ✅ Universitas Brawijaya (UB)  \n  ✅ Universitas Islam Negeri Maulana Malik Ibrahim Malang (UIN)  \n  ✅ Universitas Muhammadiyah Malang (UMM III)  \n  ✅ Universitas Negeri Malang (UM)  \n\n✨ Keunggulan:  \n- Lokasi ideal untuk mahasiswa atau keluarga  \n- Lingkungan nyaman, aman, dan strategis  \n\nhttps://wa.me/6282231320160?text=mau%20tanya,%20rumah%20kontrakan,%206%20kamar%20tidur,%20kamar%20mandi%20dalam%20di%20Jl.%20Pisang%20Kipas\n\nhttps://t.me/kontrakyuk?text=mau%20tanya,%20rumah%20kontrakan,%206%20kamar%20tidur,%20kamar%20mandi%20dalam%20di%20Jl.%20Pisang%20Kipas\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 92,
      "kota": "Malang",
      "latitude": -7.9306498678508435,
      "longitude": 112.59769413061937,
      "harga_sewa": "26000000",
      "label_harga_sewa": "Rp26jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_94889",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "🏡 DIKONTRAKAN RUMAH MURAH HARGA MAHASISWA  \n\n📍 Lokasi: Tirto Rahayu, Depan Kampus UMM 3\n✅ Dekat dengan Universitas Muhammadiyah Malang (UMM 3) dan Universitas Brawijaya (UB)  \n\n💰 Harga Super Terjangkau: Rp 26.000.000/Tahun \n\n🏠 Spesifikasi Rumah:  \n- 6 Kamar Tidur luas  \n- 2 Kamar Mandi nyaman  \n- Akses Jalan Mobil, lokasi mudah dijangkau  \n- Halaman depan luas dan nyaman  \n\n✨ Keunggulan:  \n- Lokasi strategis, cocok untuk mahasiswa atau keluarga  \n- Dekat kampus \n- Rumah modern, nyaman, dan terawat  \n\nhttps://wa.me/6282231320160?text=mau%20tanya,%20rumah%20kontrakan,%204%20kamar%20tidur,%202%20kamar%20mandi%20di%20Jl.%20Tirto%20Rahayu%20UMM%203\n\nhttps://t.me/kontrakyuk?text=mau%20tanya,%20rumah%20kontrakan,%204%20kamar%20tidur,%202%20kamar%20mandi%20di%20Jl.%20Tirto%20Rahayu%20UMM%203\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 93,
      "kota": "Malang",
      "latitude": -7.955061371401428,
      "longitude": 112.60760900906084,
      "harga_sewa": "28000000",
      "label_harga_sewa": "Rp28jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_68382",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "🏡 DIKONTRAKAN RUMAH DENGAN PERABOTAN LENGKAP & STRATEGIS DI SIGURA-GURA, MALANG\n\n📍 Lokasi: Perumahan Sigura-Gura, Malang\n\n🎓 Dekat dengan Sekolah dan Kampus.\n\n🕌 Dekat dengan masjid Al-Firdaus Sigura-gura.\n\n🛒 Dekat pusat belanja: Indomaret, Alfamart, MATOS, dan pusat belanja lainnya.\n\n🏠 Spesifikasi Rumah:\n✅️ 2 Kamar Tidur include Springbed, Bantal, Lemari.\n✅️ Ruang makan include meja dan kursi\n✅️ 1 Kamar Mandi\n✅️ Dapur siap pakai\n✅️ Carport luas, bisa parkir mobil\n✅️ Sudah Include Perabotan Lengkap – tinggal masuk dan pakai\n✅️ Akses Mobil, lokasi mudah dijangkau\n\n✨ Keunggulan:\nBerada di dalam perumahan di kota Malang yang aman dan nyaman\n\n✨️ Harga 28 juta pertahun \n\nhttps://wa.me/6282231320160?text=mau%20tanya%20kontrakan%202%20kamar,%20full%20prabot%20di%20perumahan%20Sigura-Gura%20Malang\n\nhttps://t.me/kontrakyuk?text=mau%20tanya%20kontrakan%202%20kamar,%20full%20prabot%20di%20perumahan%20Sigura-Gura%20Malang\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 94,
      "kota": "Malang",
      "latitude": -7.922475434954641,
      "longitude": 112.64773044092078,
      "harga_sewa": "12000000",
      "label_harga_sewa": "Rp12jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_65911",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "🏡 DIKONTRAKAN RUMAH DENGAN PERABOTAN LENGKAP & STRATEGIS DI BLIMBING\n\n📍 Lokasi: Balearjosari, Blimbing, Malang\n\n🏠 Spesifikasi Rumah:\n✅️ Rumah luas dan ada pagar\n✅️ 2 Kamar Tidur sudah ada kasurnya\n✅️ Ruang makan\n✅️ 1 Kamar Mandi\n✅️ Dapur siap pakai\n✅️ Parkiran luas, bisa parkir mobil\n✅️ Akses Mobil, lokasi mudah dijangkau\n\n✨ Keunggulan:\nHarga murah lingkungan aman dan nyaman\n\nLingkungan tenang, cocok untuk keluarga atau mahasiswa\n\n✨️ Harga pertahun 12 juta saja ✨️\n\nhttps://wa.me/6282231320160?text=mau%20tanya%20kontrakan%202%20kamar%20tidur%20ada%20prabotan%20di%20Blimbing\n\nhttps://t.me/kontrakyuk?text=mau%20tanya%20kontrakan%202%20kamar%20tidur%20ada%20prabotan%20di%20Blimbing\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 95,
      "kota": "Malang",
      "latitude": -7.880526338629824,
      "longitude": 112.66020685246318,
      "harga_sewa": "11000000",
      "label_harga_sewa": "Rp11jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_68883",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "🏡 Dikontrakan rumah BULANAN di dekat kendedes Singosari\n\n✅️ 3 kamar tidur\n✅️ Ruang tamu\n✅ Ruang keluarga️\n✅️ Dapur\n✅️ Kamar mandi\n✅️ sudah ada meja, kursi, dipan, lemari\n\n✨️ Harga perbulan 1 juta\n\n✨️ Harga pertahun 11 juta\n\nhttps://wa.me/6282231320160?text=mau%20tanya,%20rumah3%20kamar%20di%20kendedes\n\nhttps://t.me/kontrakyuk?text=mau%20tanya,%20rumah3%20kamar%20di%20kendedes\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 96,
      "kota": "Malang",
      "latitude": -7.906283256903361,
      "longitude": 112.59804854063788,
      "harga_sewa": "14000000",
      "label_harga_sewa": "Rp14jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_39509",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "🏡 Dikontrakan 1 rumah di belakang UMM 3.. Sudah ada perabotan.. \n\n✅️ 3 Kamar tidur sudah ada kasur dan bantalnya semua \n✅️ Ruang tamu\n✅️ 1 Kamar mandi\n✅️ Dapur\n✅️ Akses jalan muat mobil\n✅️ Rumah luas dan besar\n✅️ Halaman rumah luas rindang\n✅️ Suasana kampung yang sejuk, sederhana dan rukun\n\n✨️ Harga pertahun 14 juta saja \n\nhttps://wa.me/6282231320160?text=mau%20tanya,%20rumah%203%20kamar%20ada%20perabotan%20di%20belakang%20UMM%203\n\nhttps://t.me/kontrakyuk?text=mau%20tanya,%20rumah%203%20kamar%20ada%20perabotan%20di%20belakang%20UMM%203\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 97,
      "kota": "Malang",
      "latitude": -7.907001171217079,
      "longitude": 112.59570831457198,
      "harga_sewa": "12000000",
      "label_harga_sewa": "Rp12jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_51340",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "🏡 Dikontrakan 1 rumah super murah di belakang UMM 3.. \n\n✅️ 3 Kamar tidur \n✅️ Ruang tamu\n✅️ 1 Kamar mandi\n✅️ Dapur\n✅️ Akses jalan sepeda motor\n\n✨️ Harga pertahun 12 juta saja \n\nhttps://wa.me/6282231320160?text=mau%20tanya,%20rumah%203%20kamar%20di%20belakang%20UMM%20\n\nhttps://t.me/kontrakyuk?text=mau%20tanya,%20rumah%203%20kamar%20di%20belakang%20UMM%20\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 98,
      "kota": "Malang",
      "latitude": -7.91952082967068,
      "longitude": 112.59113458686221,
      "harga_sewa": "26000000",
      "label_harga_sewa": "Rp26jt",
      "ketersediaan": "Laku 😍️",
      "foto_kontrakan": "20250301202648_37753",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "🏡 Kontrakkan 8 Kamar tidur dekat kampus UB dan UMM 3.. Harga TERMURAHH se-kota Malang\n\n✅️ Akses jalan mobil\n✅️ Garasi besar muat 17 sepeda kotor\n✅️ 8 Kamar tidur sudah dapat kasur dan bantal\n✅️ 2 Kamar mandi\n✅️ Dapur sudah ada peralatan lengkap\n✅️ Tempat jemur baju\n✅️ GRATISS! Bebas pilih warna cat rumah. Rumah dicat ulang sebelum ditempati\n\n✨️Pertahun harga cuman 26 juta aja sudah full fasilitas\n\nhttps://wa.me/6282231320160?text=mau%20tanya,%20rumah%208%20kamar,%20full%20prabotan%20di%20dekat%20UMM3\n\nhttps://t.me/kontrakyuk?text=mau%20tanya,%20rumah%208%20kamar,%20full%20prabotan%20di%20dekat%20UMM3\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 99,
      "kota": "Malang",
      "latitude": -7.9223117605804285,
      "longitude": 112.64528999151166,
      "harga_sewa": "16000000",
      "label_harga_sewa": "Rp16jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_38602",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "🏡 DIKONTRAKAN RUMAH PINGGIR JALAN TERMURAHH DI BALEARJOSARI, BLIMBING\n\n📍 Lokasi: Balearjosari, Blimbing, Malang\n\n🏠 Spesifikasi Rumah:\n✅️ Rumah luas dan ada pagar\n✅️ 2 Kamar Tidur\n✅️ 1 Kamar Mandi\n✅️ Dapur\n✅️ Parkiran luas untuk sepeda motor\n✅️ Akses Mobil, lokasi mudah dijangkau\n\n✨ Keunggulan:\nHarga murah lingkungan aman dan nyaman\nLingkungan tenang, cocok untuk keluarga atau mahasiswa\n\n✨️ Harga 16 juta untuk 2 tahun ✨️\n\nhttps://wa.me/6282231320160?text=mau%20tanya%20kontrakan%202%20kamar%20tidur%20termurah%20di%20Balearjosari%20Blimbing\n\nhttps://t.me/kontrakyuk?text=mau%20tanya%20kontrakan%202%20kamar%20tidur%20termurah%20di%20Balearjosari%20Blimbing\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 100,
      "kota": "Malang",
      "latitude": -7.9469548861153045,
      "longitude": 112.6105836217329,
      "harga_sewa": "24000000",
      "label_harga_sewa": "Rp24jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_48985",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "📢 RUMAH DIKONTRAKKAN! 🏠\n‼️ Cocok untuk Mahasiswa UB Tanpa Motor! 🚶‍♂️👩‍🎓\n\n🏡 Fasilitas:\n✅ 5 kamar tidur (kasur & lemari gantung) 🛏️\n✅ 3 kamar mandi 🚿\n✅ 2 lantai (akses motor) 🛵\n✅ Ruang tamu & ruang bersama luas 🛋️\n✅ Dapur bersama (kompor, gas, rak piring dll) 🍳\n✅ Jemuran lantai 2 👕\n\n📍 Lokasi Strategis:\n✨ 1 menit dari UB (jalan kaki!)\n✨ 4 menit ke POLINEMA, ITN, UM 🚴‍♂️\n✨ 7-10 menit ke UNISMA & UMM 🚗\n\n💸 Harga: 24 Juta (Nego!)\n📌 Lokasi: Ketawanggede (sebelah UB)\n\nhttps://wa.me/6282231320160?text=mau%20tanya%20kontrakan%205%20kamar%20tidur%20full%20fasilitas%20di%20Ketawanggede\n\nhttps://t.me/kontrakyuk?text=mau%20tanya%20kontrakan%205%20kamar%20tidur%20full%20fasilitas%20di%20Ketawanggede\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 101,
      "kota": "Malang",
      "latitude": -7.944744532055645,
      "longitude": 112.63457384780082,
      "harga_sewa": "9000000",
      "label_harga_sewa": "Rp9jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_60376",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "🏡 Kontrakan rumah 2 kamar murah harga hemat di Blimbing dekat sabilillah malang!\n\n✅ 2 kamar tidur\n✅ Ruang tamu\n✅ Ruang tengah\n✅ 1 kamar mandi\n\n✨️ Harga 9 juta pertahun\n\n📌 Bisa lihat dulu rumahnya untuk melihat lebih detail.\n\nhttps://wa.me/6282231320160?text=mau%20tanya,%20kontrakan%20murahh%202%20kamar%209%20juta%20di%20dekat%20masjid%20sabilillah\n\nhttps://t.me/kontrakyuk?text=mau%20tanya,%20kontrakan%20murahh%202%20kamar%209%20juta%20di%20dekat%20masjid%20sabilillah\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 102,
      "kota": "Malang",
      "latitude": -7.9631058610004475,
      "longitude": 112.60672287275833,
      "harga_sewa": "21000000",
      "label_harga_sewa": "Rp21jt",
      "ketersediaan": "Laku 😍️",
      "foto_kontrakan": "20250301202648_56199.jpg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "🏡 Kontrakan rumah 5 kamar strategis dan nyaman!\n\n✅ 4 kamar tidur luas (dilengkapi kasur, meja, kursi, dll)\n✅ Kondisi terkini lebih rapi, dengan pintu & jendela berwarna coklat\n✅ Lokasi strategis, hanya 1 rumah dari jalan raya!\n✅ Parkir mobil di dekat jalan & motor parkir di rumah\n\n✨️ Harga 21 juta pertahun\n\n📌 Bisa lihat dulu rumahnya untuk melihat lebih detail.\n\nhttps://wa.me/6282231320160?text=mau%20tanya,%20kontrakan%20murahh%205%20kamar%2021%20juta%20di%20Jl.%20Candi\n\nhttps://t.me/kontrakyuk?text=mau%20tanya,%20kontrakan%20murahh%205%20kamar%2021%20juta%20di%20Jl.%20Candi\n\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/\nhttps://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 103,
      "kota": "Malang",
      "latitude": -7.925114727281191,
      "longitude": 112.61804029451476,
      "harga_sewa": "43000000",
      "label_harga_sewa": "Rp43jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250626233151_45343.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**KONTRAKAN 3 KAMAR EKSKLUSIF, FULL PERABOTAN & NYAMAN**  \n\n**Spesifikasi Rumah:**  \n- 3 Kamar Tidur luas dengan springbed  \n- Kamar mandi  \n- Dapur lengkap dengan kitchen set  \n- Ruang tamu lengkap dengan meja & sofa  \n- Perabotan tambahan (lemari, partisi, dll.)  \n\nHarga: Rp 43 Juta/Tahun  \n\nWhatsApp: wa.me/6282231320160?text=mau%20tanya,%20kontrakan%20Eksklusif \nTelegram: t.me/kontrakyuk?text=mau%20tanya,%20kontrakan%20Eksklusif  \n\nWebsite: kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 104,
      "kota": "Malang",
      "latitude": -7.92512459311951,
      "longitude": 112.61501682076052,
      "harga_sewa": "25000000",
      "label_harga_sewa": "Rp25jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_31802",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**RUMAH KONTRAKAN FULL PERABOTAN DEKAT SUHAT & POLINEMA**  \n\n**Dekat ke kampus-kampus ternama:**  \n- ITN Kampus 2  \n- UMM  \n- Polinema & UB  \n\n**Spesifikasi Rumah:**  \n- 3 Kamar Tidur (1 Springbed 160x200 & 2 Bed Busa 90x200)  \n- 1 Kamar Mandi  \n- Ruang tamu + sofa  \n- Ruang makan & dapur lengkap  \n- Ruang cuci & jemuran  \n- Garasi mobil  \n\n**Fasilitas Perabotan:**  \n- Kulkas  \n- Meja belajar  \n- Lemari jati  \n\nHarga: Rp 25 Juta/Tahun  \n\nWhatsApp: wa.me/6282231320160?text=mau%20tanya,%20kontrakan%20Premium%203%20kamar%2025%20juta%20di%20Perumahan%20Dekat%20Suhat  \nTelegram: t.me/kontrakyuk?text=mau%20tanya,%20kontrakan%20Premium%203%20kamar%2025%20juta%20di%20Perumahan%20Dekat%20Suhat  \n\nWebsite: kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 105,
      "kota": "Malang",
      "latitude": -7.929802291600327,
      "longitude": 112.61573809832208,
      "harga_sewa": "23000000",
      "label_harga_sewa": "Rp23jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_78106.jpg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**RUMAH DIKONTRAKKAN DEKAT SUHAT, 3 KAMAR TIDUR & 2 KAMAR MANDI**  \n\n**Lokasi:** Perumahan dekat Suhat, Malang  \n\n**Spesifikasi Rumah:**  \n- 3 Kamar Tidur  \n- 2 Kamar Mandi (WC duduk & jongkok)  \n- Dapur luas dan nyaman  \n- Ruang tamu luas  \n- Parkir motor dan area jemuran  \n- Listrik token 1300 watt & air PDAM  \n\n**Keunggulan:**  \n- Lingkungan bebas, sopan, dan keamanan 24 jam  \n- Cocok untuk keluarga kecil atau 5 mahasiswa  \n\nHarga: Rp 23 Juta/Tahun (Bayar di muka)  \n\nWhatsApp: wa.me/6282231320160?text=mau%20tanya,%20Rumah%20Kontrakan%203%20kamar%20tidur%202%20kamar%20mandi  \nTelegram: t.me/kontrakyuk?text=mau%20tanya,%20Rumah%20Kontrakan%203%20kamar%20tidur%202%20kamar%20mandi  \n\nWebsite: kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 106,
      "kota": "Malang",
      "latitude": -7.926599353646618,
      "longitude": 112.61972133046152,
      "harga_sewa": "16000000",
      "label_harga_sewa": "Rp16jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_62934.jpg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**KONTRAKAN RUMAH & TEMPAT USAHA TOKO DI PINGGIR JALAN RAMAI**  \n\nCocok untuk hunian sekaligus usaha/toko!  \n\n**Lokasi Strategis:**  \n- Dekat SMP Sabilillah  \n- Dekat SDIT Insan Permata  \n- Dekat SDN Tanggulwulung 3  \n- Pinggir jalan besar, akses 2 mobil, ramai 24 jam  \n\n**Spesifikasi Rumah:**  \n- 2 Kamar Tidur  \n- Ruang usaha/toko di bagian depan  \n- Lingkungan nyaman  \n\nHarga: Rp 16 Juta/Tahun (Nego Langsung)  \n\nWhatsApp: wa.me/6282231320160?text=mau%20tanya,%20Rumah%20Kontrakan%20dan%20Toko%20di%20JL.%20Ikan%20Gurami  \nTelegram: t.me/kontrakyuk?text=mau%20tanya,%20Rumah%20Kontrakan%20dan%20Toko%20di%20JL.%20Ikan%20Gurami  \n\nWebsite: kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 107,
      "kota": "Malang",
      "latitude": -7.920966583150241,
      "longitude": 112.60662097500425,
      "harga_sewa": "18000000",
      "label_harga_sewa": "Rp18jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_59842.jpg",
      "deskripsi_visual_kontrakan": "Berdasarkan foto-foto yang Anda berikan, berikut adalah deskripsi visual detail dari kontrakan ini:\n\n---\n\n### Deskripsi Visual Kontrakan\n\nKontrakan ini tampaknya merupakan bangunan berlantai dua dengan tata letak yang memanjang. Dari foto tangga dan lorong, terlihat ada beberapa unit kamar berjejer. Bangunan ini memiliki gaya arsitektur yang sederhana dan fungsional, dengan dinding berwarna krem cerah dan keramik lantai putih polos, menciptakan kesan bersih dan lapang.\n\n### Ruang Tidur\n\nAda beberapa kamar tidur yang berbeda, masing-masing dengan gaya dan perabot yang unik. Satu kamar memiliki kasur dengan motif kupu-kupu yang cerah dan lemari plastik berwarna cokelat. Kamar lain menggunakan sprei pelangi dan lemari besi bertingkat yang dilengkapi kunci, memberikan privasi lebih untuk barang-barang pribadi. Ada juga kamar dengan sprei bermotif Chanel dan lemari plastik biru. Desain ini menunjukkan bahwa setiap kamar memiliki sentuhan personal, membuatnya terasa lebih seperti hunian pribadi.\n\n### Dapur dan Kamar Mandi\n\nDapur terlihat fungsional dengan meja konter keramik berwarna abu-abu yang membentuk sudut, lengkap dengan wastafel stainless steel. Area ini cukup untuk kegiatan memasak dan mencuci piring sederhana. Kamar mandi menggunakan kloset jongkok dan dilengkapi bak mandi, ember, serta gayung, khas gaya kamar mandi di Indonesia. Dindingnya dilapisi keramik vertikal berwarna krem dan cokelat, memberikan sentuhan modern pada ruangan.\n\n### Suasana dan Lingkungan\n\nSecara keseluruhan, kontrakan ini memiliki suasana yang **nyaman, praktis, dan terawat**. Cahaya alami masuk melalui jendela, membuat ruangan tidak terasa pengap. Lingkungannya tampaknya tenang, seperti yang terlihat dari pemandangan luar jendela yang tidak terlalu padat. Lorong yang bersih dan teratur serta pintu-pintu kayu yang kokoh menambah kesan keamanan dan kenyamanan.\n\n---\n\n### Rekomendasi Penggunaan dan Alasan\n\nBerdasarkan deskripsi visual di atas, kontrakan ini **sangat cocok untuk hunian pribadi, terutama bagi mahasiswa atau pekerja lajang**.\n\nBerikut adalah alasan kuat yang mendukung rekomendasi ini:\n\n* **Fungsionalitas dan Kelengkapan:** Setiap kamar sudah dilengkapi dengan perabot dasar seperti kasur dan lemari. Ditambah dengan dapur dan kamar mandi yang fungsional, kontrakan ini sudah siap huni. Anda tidak perlu repot-repot membeli perabot besar, sehingga bisa langsung menempati dan beraktivitas dengan nyaman.\n* **Privasi dan Keamanan:** Adanya lemari yang bisa dikunci memberikan jaminan keamanan untuk barang-barang berharga Anda. Desain setiap kamar yang terpisah di sepanjang lorong juga menjamin privasi bagi setiap penghuni.\n* **Suasana yang Mendukung:** Bangunan yang terawat, bersih, dan terang menciptakan lingkungan yang positif untuk istirahat setelah seharian beraktivitas, atau bahkan untuk belajar dan bekerja dari rumah.\n\nMeskipun ukurannya mungkin tidak besar, tata letak yang efisien membuat setiap ruangan terasa lapang dan tidak sumpek. Karena perabot dasar sudah tersedia, Anda bisa dengan mudah mendekorasi dan menambahkan sentuhan personal agar kontrakan ini benar-benar terasa seperti rumah.\n\nApakah ada hal lain yang ingin Anda ketahui tentang kontrakan ini?",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah termurah.!! lokasi di Jl. Raya Ketangi belakang kampus UMM 3\n\nInformasi Kontrakan:\n- Harga Sewa: Rp 18 Juta per tahun.\n- Fasilitasnya: 5 kamar tidur luas, 2 kamar mandi, ruang tamu, dapur, parkiran sepeda motor.\n- Kondisi: Bersih dan terawat.\n- Kelengkapan: dapat kasur, lemari, dan kompor.\n\nInformasi Tambahan:\n- Listrik: Token 900 watt.\n- Air: PDAM\n- Parkir: 6 sepeda motor\n- Akses Jalan: Mobil\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?\n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 108,
      "kota": "Malang",
      "latitude": -7.931360908477807,
      "longitude": 112.61251147333905,
      "harga_sewa": "22000000",
      "label_harga_sewa": "Rp22jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_41391.jpg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**Dikontrakkan Rumah di Jalan Utama Akordion**  \n\nAlamat: Pinggir Jalan Utama Akordion  \nDekat dengan masjid dan Jalan Soekarno-Hatta (Suhat)  \n\n**Spesifikasi Rumah:**  \n- 1 Kamar Besar  \n- 2 Ruangan kecil yang bisa dijadikan kamar tambahan  \n- Dapur nyaman  \n- Kamar mandi bersih  \n- Lantai 2 khusus untuk jemuran  \n- Garasi mobil  \n- Pagar depan untuk privasi dan keamanan  \n\n**Fasilitas:**  \n- Listrik 900 watt (Token)  \n- Air PDAM  \n\n**Keunggulan:**  \n- Lingkungan bebas dengan aturan sopan  \n- Rumah terawat, bersih, dan cat cerah  \n\nHarga Sewa: Rp 22 Juta/Tahun (Nego)  \n\nWhatsapp: https://wa.me/6282231320160?text=mau%20tanya%20kontrakan%203%20kamar%20di%20pinggir%20jalan%20Akordion%20harga%2022%20juta  \nTelegram: https://t.me/kontrakyuk?text=mau%20tanya%20kontrakan%203%20kamar%20di%20pinggir%20jalan%20Akordion%20harga%2022%20juta  \n\nWebsite: https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 109,
      "kota": "Malang",
      "latitude": -7.936259965177463,
      "longitude": 112.61918229317861,
      "harga_sewa": "27000000",
      "label_harga_sewa": "Rp27jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_38172.jpg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**Dikontrakkan Rumah 4 Kamar di Suhat Malang**  \n\n**Lokasi Strategis:**  \n- Dekat Kampus UIN  \n- Dekat Kampus UB  \n- Dekat Kampus UMM  \n- Dekat Kampus Polinema  \n- Terletak di perumahan dengan akses jalan lebar, bisa untuk 2 mobil  \n\n**Spesifikasi Rumah:**  \n- Rumah baru, cat ulang dengan warna abu-abu modern  \n- 4 Kamar Tidur  \n- 2 Kamar Mandi  \n- Dapur bersih dan fungsional  \n- Tempat jemuran luas dan aman  \n- Teras depan luas untuk bersantai  \n- Garasi carport untuk mobil  \n- Parkir motor luas di dalam rumah  \n\n**Fasilitas:**  \n- Listrik 900 watt (Token)  \n- Air PDAM  \n\n**Keunggulan:**  \n- Rumah sudah direnovasi dan siap huni  \n- Lokasi strategis, cocok untuk mahasiswa dan keluarga  \n\nHarga Sewa: Rp 27 Juta/Tahun (Nego)  \n\nWhatsapp: https://wa.me/6282231320160?text=mau%20tanya%20kontrakan%204%20kamar%20ada%20garasi%20mobil%20di%20perumahan%20dekat%20suhat  \nTelegram: https://t.me/kontrakyuk?text=mau%20tanya%20kontrakan%204%20kamar%20ada%20garasi%20mobil%20di%20perumahan%20dekat%20suhat  \n\nWebsite: https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 110,
      "kota": "Malang",
      "latitude": -7.950552279934685,
      "longitude": 112.61977679099128,
      "harga_sewa": "23000000",
      "label_harga_sewa": "Rp23jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_56938.png",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**Dikontrakkan Rumah di Suhat Dekat Kampus UB**  \n\nAlamat: Belakang Apartemen UB  \nAkses Mudah: Pinggir jalan besar, mobil bisa masuk  \n\n**Keunggulan Lokasi:**  \n- Dekat tempat makan dan pusat perbelanjaan di Suhat  \n- Lingkungan bebas dan sopan tanpa jam malam  \n\n**Spesifikasi Rumah:**  \n- 3 Kamar Tidur  \n- 1 Kamar Mandi  \n- Dapur bersih  \n- Ruang tamu luas, cocok untuk berkumpul atau rapat  \n- Garasi untuk parkir motor  \n- Ada pagar depan untuk privasi dan keamanan  \n\nHarga Sewa: Rp 23 Juta/Tahun (Nego)  \n\nWhatsapp: https://wa.me/6282231320160?text=mau%20tanya%20kontrakan%203%20kamar%2023%20juta%20di%20bunga%20kumis%20kucing%20suhat  \nTelegram: https://t.me/kontrakyuk?text=mau%20tanya%20kontrakan%203%20kamar%2023%20juta%20di%20bunga%20kumis%20kucing%20suhat  \n\nWebsite: https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 111,
      "kota": "Malang",
      "latitude": -7.936735185187317,
      "longitude": 112.63002432622517,
      "harga_sewa": "13000000",
      "label_harga_sewa": "Rp13jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_96278.jpg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**Dikontrakkan Rumah Full Perabotan 2 Kamar Tidur di Dekat Patung Pesawat Suhat, Kota Malang**  \n\n**Lokasi Strategis:**  \n- Dekat Soekarno-Hatta (Suhat), pusat kota Malang  \n- Harga sangat terjangkau  \n- Full perabotan, langsung siap huni  \n\n**Spesifikasi Rumah:**  \n- 2 Kamar Tidur (kasur siap pakai, 1 lemari)  \n- Ruang tamu lengkap dengan kursi dan meja  \n- Dapur nyaman  \n- Tempat jemur baju di lantai 2  \n- Kamar mandi bersih  \n- Mushola di dalam rumah  \n- Lingkungan nyaman, kondusif, dan aman  \n\nRumah bersih, terawat, dan siap huni.  \n\nHarga Sewa: Rp 13 Juta/Tahun  \n\nWhatsapp: https://wa.me/6282231320160?text=mau%20tanya%20kontrakan%202%20kamar%2013%20juta%20di%20dekat%20pesawat%20suhat  \nTelegram: https://t.me/kontrakyuk?text=mau%20tanya%20kontrakan%202%20kamar%2013%20juta%20di%20dekat%20pesawat%20suhat  \n\nWebsite: https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 2
    },
    {
      "nomer": 112,
      "kota": "Malang",
      "latitude": -7.86667653612299,
      "longitude": 112.66078022337055,
      "harga_sewa": "13000000",
      "label_harga_sewa": "Rp13jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_94454",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**Dikontrakkan Rumah Nyaman di Griya Singosari Inside**  \n\n**Lokasi Strategis:**  \n- Perumahan Griya Singosari Inside, Blok E No. 11  \n- Dekat SDN Candirenggo 5, hanya 10 menit dari Candi Singosari  \n- Jalan perumahan lebar 8 meter, akses mobil mudah  \n\n**Spesifikasi Rumah:**  \n- 2 Kamar Tidur  \n- 1 Kamar Mandi  \n- Dapur nyaman  \n- Tempat jemuran  \n- Carport untuk parkir kendaraan  \n- Listrik token 1300 Watt  \n- Air sumur bor perumahan  \n\nLingkungan nyaman, cocok untuk keluarga dengan pernikahan resmi.  \n\nHarga Sewa:  \nRp 13 Juta/Tahun  \nRp 1.500.000/Bulan  \n\nWhatsapp: https://wa.me/6282231320160?text=mau%20tanya%20kontrakan%202%20kamar%2013%20juta%20di%20Griya%20Inside%20Singosari  \nTelegram: https://t.me/kontrakyuk?text=mau%20tanya%20kontrakan%202%20kamar%2013%20juta%20di%20Griya%20Inside%20Singosari  \n\nWebsite: https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 113,
      "kota": "Malang",
      "latitude": -7.933267479649464,
      "longitude": 112.63832864685486,
      "harga_sewa": "17000000",
      "label_harga_sewa": "Rp17jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_15912.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**Dikontrakkan Rumah Akses Mobil di Jl. Ikan Piranha**  \n\n- 3 Kamar Tidur  \n- 2 Kamar Mandi  \n- Akses mobil\n- Rumah pinggir jalan  \n- Ada parkiran motor dan pagar  \n- Dekat dengan toko sembako  \n- Dekat dengan masjid\n\nHarga Sewa: Rp 17 Juta/Tahun  \n\nLingkungan nyaman dan strategis, cocok untuk keluarga atau pekerja yang membutuhkan akses mudah dan tempat tinggal yang nyaman.  \n\nWhatsapp: https://wa.me/6282231320160?text=mau%20tanya%20kontrakan%203%20kamar%2017%20juta%20di%20Jl.%20Ikan%20Lodan  \nTelegram: https://t.me/kontrakyuk?text=mau%20tanya%20kontrakan%203%20kamar%2017%20juta%20di%20Jl.%20Ikan%20Lodan  \n\nWebsite: https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 114,
      "kota": "Malang",
      "latitude": -7.936500235655557,
      "longitude": 112.64011932659422,
      "harga_sewa": "14500000",
      "label_harga_sewa": "Rp14,5jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_11857.jpg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**Dikontrakkan Rumah Nyaman di Jalan Ikan Hiu**  \n\n**Spesifikasi Rumah:**  \n- 2 Kamar Tidur  \n- 1 Kamar Mandi  \n- Ruang sholat  \n- Dapur dan ruang makan  \n- Tempat jemuran di lantai atas  \n\n**Lingkungan Nyaman dan Strategis**  \nCocok untuk keluarga atau pasangan yang mencari hunian tenang dan aman.  \n\nHarga Sewa: Rp 14,5 Juta/Tahun  \n\nWhatsapp: https://wa.me/6282231320160?text=mau%20tanya%20kontrakan%202%20kamar%2014,5%20juta%20di%20Jl.%20Ikan%20Hiu  \nTelegram: https://t.me/kontrakyuk?text=mau%20tanya%20kontrakan%202%20kamar%2014,5%20juta%20di%20Jl.%20Ikan%20Hiu  \n\nWebsite: https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 115,
      "kota": "Malang",
      "latitude": -7.92729053868963,
      "longitude": 112.61061337082063,
      "harga_sewa": "35000000",
      "label_harga_sewa": "Rp35jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_79713.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**Dikontrakkan Rumah Nyaman di Perumahan Arumba**  \n\n**Spesifikasi Rumah:**  \n- 3 Kamar Tidur  \n- 1 Mushola  \n- 2 Kamar Mandi  \n- Garasi mobil dengan pagar besi  \n- Akses jalan dapat dilalui dua mobil  \n- Dinding tinggi dengan roster, rumah lebih sejuk dan privasi terjaga  \n- Teras depan luas, cocok untuk bersantai  \n\n**Keunggulan Lingkungan:**  \n- Keamanan 24 jam dengan sistem satu gerbang  \n- Dekat dengan Suhat, akses mudah ke pusat kota  \n\nHarga Sewa: Rp 35 Juta/Tahun (Kondisi kosongan – bisa atur interior sesuai kebutuhan)  \n\nWhatsapp: https://wa.me/6282231320160?text=mau%20tanya%20kontrakan%203%20kamar%2035%20juta%20di%20Perumahan%20Arumba  \nTelegram: https://t.me/kontrakyuk?text=mau%20tanya%20kontrakan%203%20kamar%2035%20juta%20di%20Perumahan%20Arumba  \n\nWebsite: https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 116,
      "kota": "Malang",
      "latitude": -7.928781130703494,
      "longitude": 112.6166433824624,
      "harga_sewa": "32000000",
      "label_harga_sewa": "Rp32jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_5124.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**Dikontrakkan Rumah untuk Kantor, Mess Karyawan, dan Penyimpanan Lemari Pendingin**  \n\n**Spesifikasi Rumah:**  \n- 3 Kamar Tidur  \n- 1 Kamar Mandi  \n- Ruang tengah luas  \n- Halaman belakang luas  \n- Parkiran mobil  \n- Parkiran sepeda motor dengan pagar besi  \n- Akses jalan dapat dilalui dua mobil  \n- Teras depan luas dan terbuka  \n- Air PDAM  \n- Listrik 1300 Watt  \n\n**Keunggulan Lingkungan:**  \n- Keamanan 24 jam dengan sistem satu gerbang  \n- Dekat dengan Suhat, akses mudah ke pusat kota  \n\nHarga Sewa: Rp 35 Juta/Tahun (Kondisi kosongan – bisa atur interior sesuai kebutuhan)  \n\nWhatsapp: https://wa.me/6282231320160?text=mau%20tanya%20sewa%20rumah%20luas%203%20kamar%2035%20juta%20di%20Perumahan%20Bumi%20Tunggulwulung  \nTelegram: https://t.me/kontrakyuk?text=mau%20tanya%20sewa%20rumah%20luas%203%20kamar%2035%20juta%20di%20Perumahan%20Bumi%20Tunggulwulung  \n\nWebsite: https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 117,
      "kota": "Malang",
      "latitude": -7.949939383396491,
      "longitude": 112.62613332537748,
      "harga_sewa": "57000000",
      "label_harga_sewa": "Rp57jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_59093.png",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**Dikontrakkan! Rumah Mewah Full Furnish**  \n\nFasilitas super lengkap dan smart home ready!  \n\n**Lokasi Strategis** – Akses mudah, lingkungan nyaman.  \n\n**Spesifikasi Rumah 2 Lantai:**  \n- 3 Kamar Tidur – Semua ber-AC dan full furnish  \n- 2 Ruang Keluarga – Atas dan bawah, luas dan nyaman  \n- 3 Kamar Mandi – (2 di bawah, 1 di atas) dilengkapi water heater  \n- Dapur modern – Kitchen set, kulkas, dan dispenser  \n- 2 Balkon – View menarik, cocok untuk bersantai  \n- 2 Carport – Parkir luas, muat 2 mobil  \n- Gudang dan taman BBQ – Area belakang nyaman untuk berkumpul  \n- Smart Home Security – Alarm, kamera CCTV, dan modem 4G  \n\n**Fasilitas Pendukung:**  \n- Listrik PLN 3500 Watt – Bisa menggunakan alat elektronik tanpa khawatir daya turun  \n- Air PDAM – Bersih dan lancar  \n\nHarga Sewa: Rp 57 Juta/Tahun  \n\nWhatsapp: https://wa.me/6282231320160?text=permisi%20mau%20tanya%20sewa%20rumah%20Full%20Furnish%2057%20juta%20di%20Perumahan%20Malang  \nTelegram: https://t.me/kontrakyuk?text=permisi%20mau%20tanya%20sewa%20rumah%20Full%20Furnish%2057%20juta%20di%20Perumahan%20Malang  \n\nWebsite: https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 118,
      "kota": "Malang",
      "latitude": -7.919256170704388,
      "longitude": 112.62973030084676,
      "harga_sewa": "20000000",
      "label_harga_sewa": "Rp20jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_17298.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**Disewakan Rumah Nyaman di Perumahan Tasikmadu, Kota Malang**  \n\nLokasi Strategis: Jl. Bulu Tangkis, Tasikmadu, Kota Malang  \n\nSpesifikasi Rumah:  \n- 3 Kamar Tidur  \n- 1 Kamar Mandi  \n- Ruang Tamu luas\n- Dapur  \n- Taman  \n- Carport mobil bisa untuk mobil dan sepeda motor\n\nBonus:\n- Kasur baru per kamar\n- Lemari baru per kamar\n- Kompor baru\n\nHarga Sewa: Rp 20 Juta/Tahun (Nego)  \n\nWhatsapp: https://wa.me/6282231320160?text=permisi%20mau%20tanya%20sewa%20rumah%20Tasikmadu%203%20kamar%2020%19juta  \nTelegram: https://t.me/kontrakyuk?text=permisi%20mau%20tanya%20sewa%20rumah%20Tasikmadu%203%20kamar%2020%19juta  \n\nWebsite: https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 119,
      "kota": "Malang",
      "latitude": -7.926533621406158,
      "longitude": 112.6070363204278,
      "harga_sewa": "26000000",
      "label_harga_sewa": "Rp26jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_94161.jpg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**Disewakan Rumah Luas & Strategis di Pinggir Jalan Raya Dekat Jl. Saxophone**  \n\nLokasi premium dengan akses langsung ke jalan raya, cocok untuk keluarga atau usaha.  \n\nSpesifikasi Rumah:  \n- 4 Kamar Tidur – Luas dan nyaman  \n- 1 Kamar Mandi – Bersih & siap pakai  \n- Ruang Tamu & Ruang Keluarga – Lega untuk berkumpul  \n- Dapur – Nyaman untuk memasak  \n- Garasi Mobil – Aman & luas  \n- Gudang – Ruang penyimpanan ekstra  \n- Air sumur bersih – Lancar & hemat biaya  \n\nRumah sudah dibersihkan dan dicat ulang, siap huni tanpa ribet.  \n\nHarga Sewa: Rp 26 Juta/Tahun  \nBisa tambah kasur, lemari, dan kompor dengan harga menyesuaikan.  \n\nWhatsapp: https://wa.me/6282231320160?text=permisi%20mau%20tanya%20sewa%20rumah%204%20kamar%20di%20dekat20%JL.Saxophone%2026%20juta  \nTelegram: https://t.me/kontrakyuk?text=permisi%20mau%20tanya%20sewa%20rumah%204%20kamar%20di%20dekat20%JL.Saxophone%2026%20juta  \n\nWebsite: https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 120,
      "kota": "Malang",
      "latitude": -7.953891239733353,
      "longitude": 112.62363206908128,
      "harga_sewa": "26000000",
      "label_harga_sewa": "Rp26jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_72111.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**Disewakan Rumah untuk Usaha & Hunian di Perumahan Jl. Bunga Dekat Suhat**  \n\nBisa digunakan untuk:  \n- Kedai kopi – Desain minimalis, menarik pelanggan  \n- Barbershop – Ruang nyaman & stylish  \n- Kantor/usaha – Lingkungan mendukung bisnis berkembang  \n- Hunian – Nyaman & bersih setelah renovasi  \n\nSpesifikasi:  \n- 2 Kamar Tidur – Bisa difungsikan untuk kantor atau tempat tinggal  \n- Sudah renovasi – Lebih bersih dan tampilan lebih menarik  \n- Eksterior & interior mendukung untuk usaha  \n\nHarga Sewa: Rp 26 Juta/Tahun (Nego)  \n\nWhatsapp: https://wa.me/6282231320160?text=permisi%20mau%20tanya%20sewa%20rumah%20untuk%20usaha%20di%20deerah20%JL.Bunga%20dekat%20Suhat  \n\nTelegram: https://t.me/kontrakyuk?text=permisi%20mau%20tanya%20sewa%20rumah%20untuk%20usaha%20di%20deerah20%JL.Bunga%20dekat%20Suhat  \n\nWebsite: https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 121,
      "kota": "Malang",
      "latitude": -7.951499236454165,
      "longitude": 112.62324121609112,
      "harga_sewa": "47000000",
      "label_harga_sewa": "Rp47jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_46155.jpg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**Disewakan Rumah Full Furnitur – Siap Huni!**  \n\nLokasi Strategis:  \n- Perumahan Jl. Simpang Dewandaru, dekat Suhat, Kota Malang  \n- Akses mobil mudah, rumah di pinggir jalan  \n\nSpesifikasi Rumah:  \n- 3 Kamar Tidur – Lengkap dengan springbed & lemari pakaian  \n- 1 Ruang Tamu – Dilengkapi sofa  \n- 1 Ruang Keluarga – Sofa panjang, nyaman untuk bersantai  \n- 1 Dapur – Termasuk kompor  \n- 2 Kamar Mandi – Salah satu dengan water heater  \n- 1 Gudang – Untuk penyimpanan barang \n- Carport atau garasi mobil dan sepeda motor dan pagar tinggi \n\nBisa request AC di kamar tidur, harga menyesuaikan.  \n\nHarga Sewa: Rp 47 Juta/Tahun (Nego)  \n\nWhatsapp: https://wa.me/6282231320160?text=permisi%20mau%20tanya%20sewa%20rumah%203%20kamar%20Full%20Furniture%20di%20%JL.Simpang%20Dewandaru%20dekat%20Suhat  \n\nTelegram: https://t.me/kontrakyuk?text=permisi%20mau%20tanya%20sewa%20rumah%203%20kamar%20Full%20Furniture%20di%20%JL.Simpang%20Dewandaru%20dekat%20Suhat  \n\nWebsite: https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 122,
      "kota": "Malang",
      "latitude": -7.938303731371884,
      "longitude": 112.6262514859098,
      "harga_sewa": "40000000",
      "label_harga_sewa": "Rp40jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_76503.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**Disewakan Rumah di Perumahan – Dekat Masjid**  \n\nLokasi: Perumahan di Jl. Candi, daerah Suhat  \nAkses mobil mudah, lingkungan aman dan nyaman  \nCocok untuk keluarga atau kos  \n\n**Spesifikasi Rumah**  \n- 4 kamar tidur, ruang luas dan nyaman  \n- 2 kamar mandi, praktis untuk keluarga atau penghuni kos  \n- Carport atau garasi luas, bisa untuk mobil dan banyak sepeda motor  \n- Ada pagar besi, keamanan lebih terjaga  \n- Dapur dan ruang tamu, nyaman untuk berkumpul  \n- Ruang jemur baju, fasilitas lengkap  \n\n**Harga Sewa**  \n- Rp 40 Juta/Tahun – Kosongan  \n- Rp 45 Juta/Tahun – Full Perabotan  \n\nWhatsApp: https://wa.me/6282231320160?text=permisi%20mau%20tanya%20sewa%20rumah%204%20kamar%20Full%20Furniture%20di%20JL.Candi%20dekat%20Suhat  \n\nTelegram: https://t.me/kontrakyuk?text=permisi%20mau%20tanya%20sewa%20rumah%204%20kamar%20Full%20Furniture%20di%20JL.Candi%20dekat%20Suhat \n \nWebsite: https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 123,
      "kota": "Malang",
      "latitude": -7.9411304809414425,
      "longitude": 112.61801686704186,
      "harga_sewa": "50000000",
      "label_harga_sewa": "Rp50jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_21655.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**Disewakan Rumah Besar & Terawat di Perumahan Eksklusif Suhat**  \n\nLokasi strategis di perumahan eksklusif Suhat  \nLingkungan nyaman dan aman  \nHarga Sewa: Rp 50 Juta/Tahun  \n\n**Spesifikasi Rumah**  \n- 4 kamar tidur   \n- 2 kamar mandi dilengkapi water heater  \n- Ruang tamu luas\n- Ruang keluarga luas\n- Desain open space / ruangan minim sekat\n- Pompa air, air selalu tersedia  \n- Instalasi AC sudah tersedia, tinggal pasang sesuai kebutuhan  \n- Perabotan tersedia: kursi dan meja tamu, 1 lemari, 1 tempat tidur\n- Ada garasi atau carport mobil dan pagar tinggi  \n\nCocok untuk hunian keluarga yang nyaman dan eksklusif.  \n\nWhatsApp: https://wa.me/6282231320160?text=permisi%20mau%20tanya%20sewa%20rumah%203%20kamar%20eksklusif%20di%20Perumahan%20Suhat  \n\nTelegram: https://t.me/kontrakyuk?text=permisi%20mau%20tanya%20sewa%20rumah%203%20kamar%20eksklusif%20di%20Perumahan%20Suhat  \n\nWebsite: https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 124,
      "kota": "Malang",
      "latitude": -7.922698079202133,
      "longitude": 112.6329557919971,
      "harga_sewa": "50000000",
      "label_harga_sewa": "Rp50jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_41701.jpg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**Disewakan Rumah Besar & Terawat – Cocok untuk Keluarga**  \n\nLokasi strategis dengan akses mobil mudah  \nHarga Sewa: Rp 50 Juta/Tahun  \n\n**Spesifikasi Rumah**  \n- 5 kamar tidur di lantai bawah, ruang luas dan nyaman  \n- 2 kamar mandi (WC duduk), bersih dan terawat  \n- Dapur luas, siap pakai  \n- Garasi, aman untuk kendaraan  \n- Area jemuran di lantai 2, udara segar dan pencahayaan maksimal  \n\nRumah ideal untuk hunian keluarga yang nyaman dan tenang.  \n\nWhatsApp: https://wa.me/6282231320160?text=permisi%20mau%20tanya%20sewa%20rumah%205%20kamar%20di%20Jl.Ikan%20Arwana  \n\nTelegram: https://t.me/kontrakyuk?text=permisi%20mau%20tanya%20sewa%20rumah%205%20kamar%20di%20Jl.Ikan%20Arwana  \n\nWebsite: https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 125,
      "kota": "Malang",
      "latitude": -7.951796974789887,
      "longitude": 112.62457872142967,
      "harga_sewa": "32000000",
      "label_harga_sewa": "Rp32jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_43703",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**Disewakan Rumah Strategis Di Perumahan Dekat Suhat – Kota Malang**  \n\nLokasi: Jl. Bunga, dekat Suhat, Kota Malang  \nHarga Sewa: Rp 32 Juta/Tahun  \n\n**Spesifikasi Rumah**  \n- 2 kamar tidur, nyaman dan luas  \n- 1 kamar mandi  \n- Ruang tamu, cocok untuk keluarga  \n- Dapur dan tempat cuci  \n- Carport, bisa untuk mobil  \n- Akses mobil mudah  \n- Air PDAM dan listrik 1300 watt  \n\nWhatsApp: https://wa.me/6282231320160?text=permisi%20mau%20tanya%20sewa%20rumah%202%20kamar%20di%20Jl.Bunga%20dekat%20Suhat  \nTelegram: https://t.me/kontrakyuk?text=permisi%20mau%20tanya%20sewa%20rumah%202%20kamar%20di%20Jl.Bunga%20dekat%20Suhat \n \nWebsite: https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 126,
      "kota": "Malang",
      "latitude": -7.9427510854254315,
      "longitude": 112.63250978169438,
      "harga_sewa": "57000000",
      "label_harga_sewa": "Rp57jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_92311.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**Disewakan / Kontrak Rumah untuk Mahasiswa – Suhat, Malang**  \n\nLokasi strategis, dekat UB, ABM, Widyagama, dan Griyashanta.  \nCocok untuk patungan mahasiswa.  \nHarga sewa Rp 62 Juta/Tahun.  \n\n**Spesifikasi Rumah**  \n- 8 kamar tidur, 3 kamar mandi  \n- 1 kamar dengan kamar mandi dalam dan water heater  \n- 2 lantai  \n  - Lantai 1: 4 kamar, 2 kamar mandi  \n  - Lantai 2: 4 kamar, 1 kamar mandi  \n- Dapur cor luas  \n- Garasi dalam dan luar super luas  \n- Teras depan dan balkon luas, nyaman untuk bersantai  \n- Jalan mobil simpangan, akses mudah  \n\nCocok untuk mahasiswa yang ingin tinggal nyaman dan strategis.  \n\nWhatsApp: https://wa.me/6282231320160?text=permisi%20mau%20tanya%20sewa%20rumah%208%20kamar%20di%20Jl.Bunga%20dekat%20Suhat  \n\nTelegram: https://t.me/kontrakyuk?text=permisi%20mau%20tanya%20sewa%20rumah%208%20kamar%20di%20Jl.Bunga%20dekat%20Suhat  \n\nWebsite: https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 127,
      "kota": "Malang",
      "latitude": -7.922089059600878,
      "longitude": 112.6206501930944,
      "harga_sewa": "23000000",
      "label_harga_sewa": "Rp23jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_92963.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**Disewakan Rumah di Perumahan Mewah Tasikmadu – Harga Terjangkau, Sudah Full Perabotan**  \n\nLokasi premium di perumahan mewah Tasikmadu.  \nHarga hanya Rp 23 Juta/Tahun.  \n\n**Spesifikasi Rumah**  \n- 2 kamar tidur, 1 kamar mandi  \n- Ruang keluarga dan ruang tamu, nyaman untuk keluarga  \n- Dapur siap pakai  \n- Carport luas dengan pagar besi dan canopy, aman dan teduh untuk mobil  \n- Sudah tersedia perabotan seperti kasur, meja ruang tamu, kompor, dan meja makan  \n\nNyaman, aman, dan siap huni.  \n\nWhatsApp: https://wa.me/6282231320160?text=permisi%20mau%20tanya%20sewa%20rumah%202%20kamar%20di%20Tasikmadu%20Ada%20Perabotan%20Harga%2023%20Juta  \n\nTelegram: https://t.me/kontrakyuk?text=permisi%20mau%20tanya%20sewa%20rumah%202%20kamar%20di%20Tasikmadu%20Ada%20Perabotan%20Harga%2023%20Juta  \n\nWebsite: https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 128,
      "kota": "Malang",
      "latitude": -7.902989184307353,
      "longitude": 112.71017318935134,
      "harga_sewa": "13000000",
      "label_harga_sewa": "Rp13jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_17788.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**Dikontrakkan Rumah di Perumahan Area Singosari – Harga Terjangkau**  \n\nLokasi strategis di Singosari.  \nHarga hanya Rp 13 Juta/Tahun.  \n\n**Spesifikasi Rumah**  \n- 3 kamar tidur, nyaman dan luas  \n- 1 kamar mandi  \n- Ruang tamu dan ruang keluarga  \n- Dapur siap pakai  \n- Teras untuk bersantai  \n- Parkiran luas, bisa untuk mobil dan sepeda  \n- Listrik 1300 watt dan air PDAM lancar  \n- Bangunan kokoh, tidak bocor, dan siap huni  \n- Sudah tersedia kasur  \n\nAkses mobil mudah.  \nLingkungan nyaman dan tenang.  \n\nWhatsApp: https://wa.me/6282231320160?text=permisi%20mau%20tanya%20sewa%20rumah%203%20kamar%20di%20perumahan%20Singosari%20Harga%2013%20Juta  \n\nTelegram: https://t.me/kontrakyuk?text=permisi%20mau%20tanya%20sewa%20rumah%203%20kamar%20di%20perumahan%20Singosari%20Harga%2013%20Juta  \n\nWebsite: https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 129,
      "kota": "Malang",
      "latitude": -7.933920569737638,
      "longitude": 112.642879320693,
      "harga_sewa": "28000000",
      "label_harga_sewa": "Rp28jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_6390.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**Disewakan Rumah Strategis – Cocok untuk Usaha dan Hunian**  \n\nLokasi di pinggir jalan ramai, akses mudah.  \nHarga hanya Rp 28 Juta/Tahun.  \n\n**Cocok untuk**  \n- Rumah tempat tinggal  \n- Kantor  \n- Gudang  \n- Tempat usaha  \n\n**Spesifikasi Rumah**  \n- 3 kamar tidur  \n- 1 kamar mandi (WC jongkok)  \n- Garasi mobil dan pagar  \n- Listrik 1300 watt (Token)  \n- Air PDAM  \n- Dekat dengan masjid  \n- Akses bisa untuk mobil hingga truk  \n\nLokasi strategis, ramai, dan mudah dijangkau.  \n\nWhatsApp: https://wa.me/6282231320160?text=permisi%20mau%20tanya%20sewa%20rumah%20besar%203%20kamar%20di%20Jl.%20Ikan%20Piranha%20Harga%2028%20Juta  \n\nTelegram: https://t.me/kontrakyuk?text=permisi%20mau%20tanya%20sewa%20rumah%20besar%203%20kamar%20di%20Jl.%20Ikan%20Piranha%20Harga%2028%20Juta  \n\nWebsite: https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 130,
      "kota": "Malang",
      "latitude": -7.940506200070861,
      "longitude": 112.61453494031669,
      "harga_sewa": "17000000",
      "label_harga_sewa": "Rp17jt",
      "ketersediaan": "Laku 😍️",
      "foto_kontrakan": "20250301202648_90796.jpg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**Disewakan Rumah Murah – Lokasi Dekat Kampus**  \n\nLokasi strategis di pinggir jalan ramai, dekat Kampus Polinema, UB, dan UM.  \nHarga hanya Rp 17 Juta/Tahun.  \n\n**Spesifikasi Rumah**  \n- 3 kamar tidur  \n- 1 kamar mandi  \n- Dapur  \n- Tempat jemur baju  \n- Listrik 900 Watt (Token)  \n- Air PDAM  \n- Rumah berpagar, aman dan nyaman  \n- Akses mobil lancar  \n- Dekat dengan masjid  \n\nCocok untuk hunian mahasiswa atau keluarga.  \n\nWhatsApp: https://wa.me/6282231320160?text=permisi%20mau%20tanya%20sewa%20rumah%203%20kamar%20di%20dekat%20polinema%20Harga%2017%20Juta  \n\nTelegram: https://t.me/kontrakyuk?text=permisi%20mau%20tanya%20sewa%20rumah%203%20kamar%20di%20dekat%20polinema%20Harga%2017%20Juta  \n\nWebsite: https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 131,
      "kota": "Malang",
      "latitude": -7.9297771841259905,
      "longitude": 112.62046179160718,
      "harga_sewa": "45000000",
      "label_harga_sewa": "Rp45jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_48783.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**Disewakan Rumah Mewah – Perumahan Eksklusif Permata Jingga, Malang**  \n\nLingkungan nyaman dan perumahan elit.\n\n**Spesifikasi Rumah**  \n- Rumah besar dan terawat dengan desain modern minimalis  \n- 2 kamar tidur  \n- 1 kamar mandi dengan WC duduk dan water heater  \n- Dapur luas dan nyaman  \n- Carport  \n- Ada AC  \n- Lahan depan rumah luas  \n- Rumah berpagar, aman dan eksklusif  \n- Listrik 2200 Watt (Token) dan Air PDAM  \n- Akses jalan besar, bisa parkir mobil di bahu jalan  \n\nCocok untuk keluarga yang mencari hunian nyaman.  \n\nHarga Rp 45 Juta/Tahun.  \n\nWhatsApp: https://wa.me/6282231320160?text=permisi%20mau%20tanya%20sewa%20rumah%20di%20Perumahan%20Elit%20Kota%20Malang%202%20kamar%20tidur  \n\nTelegram: https://t.me/kontrakyuk?text=permisi%20mau%20tanya%20sewa%20rumah%20di%20Perumahan%20Elit%20Kota%20Malang%202%20kamar%20tidur  \n\nWebsite: https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 132,
      "kota": "Malang",
      "latitude": -7.930559147332776,
      "longitude": 112.61663811387488,
      "harga_sewa": "45000000",
      "label_harga_sewa": "Rp45jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_43941.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**Disewakan Rumah Mewah – Perumahan Eksklusif Permata Jingga, Malang**  \n\nLingkungan nyaman dan perumahan elit. Tidak semua orang bisa tinggal di sini.  \nHarga hanya Rp 45 Juta/Tahun.  \n\n**Spesifikasi Rumah**  \n- Rumah besar, terawat, dengan desain modern dan minimalis  \n- 2 kamar tidur luas  \n- 1 kamar mandi dengan WC duduk  \n- Ruang tengah luas, konsep open space  \n- Ruang tamu luas\n- Dapur luas dan nyaman  \n- Carport, parkir mobil leluasa  \n- Lahan depan dan belakang luas, cocok untuk taman atau area santai  \n- Rumah berpagar, keamanan lebih terjaga  \n- Listrik 2200 Watt dan air PDAM  \n- Akses jalan besar, bisa parkir mobil di bahu jalan  \n\nCocok untuk hunian keluarga yang nyaman dan eksklusif.  \n\nWhatsApp: https://wa.me/6282231320160?text=permisi%20mau%20tanya%20sewa%20rumah%20di%20Perumahan%20Elit%20Kota%20Malang%202%20kamar%20tidur  \n\nTelegram: https://t.me/kontrakyuk?text=permisi%20mau%20tanya%20sewa%20rumah%20di%20Perumahan%20Elit%20Kota%20Malang%202%20kamar%20tidur  \n\nWebsite: https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 133,
      "kota": "Malang",
      "latitude": -7.940798009488877,
      "longitude": 112.65479118227935,
      "harga_sewa": "35000000",
      "label_harga_sewa": "Rp35jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_46868.png",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**Disewakan Rumah Minimalis di Perumahan Megah Araya – Malang**  \n\nHarga terbaik untuk hunian nyaman.  \n\n**Lokasi Strategis**  \n- Terletak di perumahan elit Megah Araya, Malang  \n- Akses jalan luas, bisa parkir mobil di pinggir jalan  \n\n**Spesifikasi Rumah**  \n- 2 lantai, luas dan nyaman  \n- 4 kamar tidur (2 di bawah, 2 di atas)  \n- Ruang tamu dan ruang tengah luas  \n- Parkiran mobil dengan atap dan pagar besi  \n- Halaman depan luas, cocok untuk bersantai  \n- 2 kamar mandi (1 WC duduk, 1 WC jongkok)  \n- Dapur letter L besar dan lega, bisa diisi meja makan  \n- Gudang di lantai 2 untuk penyimpanan tambahan  \n\nHunian nyaman dengan lingkungan asri dan akses mudah.  \n\nWhatsApp: https://wa.me/6282231320160?text=permisi%20mau%20tanya%20sewa%20rumah%20di%20Perumahan%20Araya%20Kota%20Malang%204%20kamar%20tidur  \n\nTelegram: https://t.me/kontrakyuk?text=permisi%20mau%20tanya%20sewa%20rumah%20di%20Perumahan%20Araya%20Kota%20Malang%204%20kamar%20tidur  \n\nWebsite: https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 134,
      "kota": "Malang",
      "latitude": -7.93877955848191,
      "longitude": 112.65562819392052,
      "harga_sewa": "37000000",
      "label_harga_sewa": "Rp37jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_92177.jpg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**Disewakan Rumah Besar 3 Lantai di Perumahan Megah Araya – Malang**  \n\nCocok untuk kantor, gudang ekspedisi, atau hunian keluarga besar.  \n\n**Lokasi Strategis**  \n- Terletak di Perumahan Megah Araya, Malang  \n- Akses jalan luas, bisa parkir mobil di pinggir jalan  \n\n**Spesifikasi Rumah**  \n- 3 lantai, luas dan multifungsi  \n- 3 kamar tidur, nyaman untuk keluarga atau staf  \n- Mushola di lantai 2  \n- Lantai 3 khusus untuk jemuran baju  \n- Parkiran mobil luas di lantai 1  \n- Ruang tengah luas menyatu dengan dapur bawah  \n- Garasi carport untuk 2 mobil dengan atap dan pagar besi tinggi  \n- Halaman depan luas, bisa untuk area bersantai  \n- 2 kamar mandi (1 WC duduk, 1 WC jongkok)  \n- Dapur letter L besar dan lega, bisa diisi meja makan  \n- Gudang luas di lantai 2 untuk penyimpanan barang  \n\n**Hunian eksklusif dengan akses mudah dan lingkungan premium.**  \n\n**Harga Sewa**  \nRp 37 Juta/Tahun (bisa nego)  \n\n**Minat? Hubungi segera untuk info dan survei lokasi**  \n\nWhatsApp: https://wa.me/6282231320160?text=permisi%20mau%20tanya%20sewa%20rumah%20besar%20di%20Perumahan%20Araya%20Kota%20Malang%203%20kamar%20tidur  \n\nTelegram: https://t.me/kontrakyuk?text=permisi%20mau%20tanya%20sewa%20rumah%20besar%20di%20Perumahan%20Araya%20Kota%20Malang%203%20kamar%20tidur  \n\nWebsite: https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 135,
      "kota": "Malang",
      "latitude": -7.913250397187504,
      "longitude": 112.60477321689314,
      "harga_sewa": "16000000",
      "label_harga_sewa": "Rp16jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_87213.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**Disewakan Rumah di Pinggir Jalan Besar – Lokasi Strategis**  \n\n**Dekat NK Cafe, UMM 3, UB, Polinema – Cocok untuk mahasiswa aktif**  \n\n**Spesifikasi Rumah**  \n- 3 kamar tidur, nyaman untuk tempat tinggal bersama  \n- 1 kamar mandi  \n- Ruang tamu luas, cocok untuk bersantai atau diskusi kelompok  \n- Halaman depan luas, bisa digunakan untuk area bersantai atau parkir tambahan  \n- Parkiran motor luas dengan pagar, aman dan nyaman  \n- Lingkungan bebas 24 jam, cocok untuk mahasiswa yang aktif berorganisasi  \n- Akses mudah ke kampus dan pusat kuliner  \n\n**Cocok untuk mahasiswa atau komunitas yang butuh tempat nyaman dan strategis**  \n\n**Harga Sewa**  \nRp 16 Juta/Tahun (bisa nego)  \n\n**Minat? Hubungi segera untuk info dan survei lokasi**  \n\nWhatsApp: https://wa.me/6282231320160?text=permisi%20mau%20tanya%20kontrakan%20rumah%203%20kamar%20tidur%20di%20dekat%20NK%20cafe  \n\nTelegram: https://t.me/kontrakyuk?text=permisi%20mau%20tanya%20kontrakan%20rumah%203%20kamar%20tidur%20di%20dekat%20NK%20cafe  \n\nWebsite: https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 136,
      "kota": "Malang",
      "latitude": -7.928573738412124,
      "longitude": 112.65318376152024,
      "harga_sewa": "20000000",
      "label_harga_sewa": "Rp20jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_26305.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**Disewakan Rumah Kontrakan Strategis di Arjosari, Malang**  \n\n**Lokasi Super Strategis**  \nDekat dengan Hawai Waterpark, Tol Singosari, McDonald's, Richeese, Plaza Araya, hotel, rumah sakit, dan terminal.  \n\n**Spesifikasi Rumah**  \n- 2 lantai, luas dan nyaman  \n- Akses mobil dengan 1 garasi dan pagar  \n- 3 kamar tidur ukuran besar dan nyaman  \n- 2 kamar mandi  \n- Dapur  \n- Ruang tamu luas\n- Teras depan rumah  \n- Dekat mushola dan masjid, lingkungan tenang dan ramah  \n\n**Harga Sewa**  \nRp 20 Juta/Tahun (bisa nego)  \nBisa bayar per 6 bulan  \n\n**Minat? Hubungi segera untuk info dan survei lokasi**  \n\nWhatsApp: https://wa.me/6282231320160?text=permisi%20mau%20tanya%20kontrakan%20rumah%203%20kamar%20tidur,%202%20lantai%20akses%20mobil%20di%20Arjosari  \n\nTelegram: https://t.me/kontrakyuk?text=permisi%20mau%20tanya%20kontrakan%20rumah%203%20kamar%20tidur,%202%20lantai%20akses%20mobil%20di%20Arjosari  \n\nWebsite: https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 137,
      "kota": "Malang",
      "latitude": -7.925849064068601,
      "longitude": 112.60878179501603,
      "harga_sewa": "28000000",
      "label_harga_sewa": "Rp28jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_69121",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**Disewakan Rumah 2 Lantai di Lokasi Premium Tunggul Wulung, Malang**  \n\n**Lokasi Strategis & Premium**  \nDekat dengan Suhat, UB, UMM, UNISMA, Dinoyo  \nKeamanan one gate  \nLingkungan nyaman dan bebas  \n\n**Spesifikasi Rumah**  \n- 2 lantai luas dan nyaman  \n- 3 kamar tidur  \n- 2 kamar mandi (closet duduk)  \n- Dapur  \n- Carport dengan pagar  \n- PLN token 1300W  \n- Air depthwell  \n- Akses mobil mudah  \n\n**Harga Sewa**  \nRp 28 Juta/Tahun  \nBisa bayar 2x @ Rp 14 Juta  \n\n**Minat? Hubungi segera untuk info dan survei lokasi**  \n\nWhatsApp: https://wa.me/6282231320160?text=permisi%20mau%20tanya%20kontrakan%20rumah%202%20kamar%20tidur,%202%20lantai%20akses%20mobil%20di%20perumahan%20Tunggul%20Wulung  \n\nTelegram: https://t.me/kontrakyuk?text=permisi%20mau%20tanya%20kontrakan%20rumah%202%20kamar%20tidur,%202%20lantai%20akses%20mobil%20di%20perumahan%20Tunggul%20Wulung  \n\nWebsite: https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 138,
      "kota": "Malang",
      "latitude": -7.916717124141261,
      "longitude": 112.6212559404869,
      "harga_sewa": "24000000",
      "label_harga_sewa": "Rp24jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_61411",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**DISEWAKAN – RUMAH NYAMAN & MURAH DI PERUMAHAN TASIKMADU, MALANG**  \n\n**Lokasi strategis di perumahan dengan akses mobil mudah**  \n\n**Spesifikasi Rumah:**  \n- 2 Kamar Tidur  \n- 1 Kamar Mandi  \n- Carport luas dengan kanopi & pagar  \n- Halaman depan luas dengan taman kering dan rumput sintetis  \n- Dapur nyaman  \n- Ada perabot seperti di foto  \n\n**Harga Super Murah!**  \n💰 **Rp 24 Juta/Tahun** (Masih bisa nego!)  \n\n📞 **Minat? Hubungi segera untuk info & survei lokasi!**  \n\nWhatsApp: https://wa.me/6282231320160?text=permisi%20mau%20tanya%20kontrakan%20rumah%202%20kamar%20tidur,%20akses%20mobil%20ada%20carport%20di%20perumahan%20Tasikmadu  \n\nTelegram: https://t.me/kontrakyuk?text=permisi%20mau%20tanya%20kontrakan%20rumah%202%20kamar%20tidur,%20akses%20mobil%20ada%20carport%20di%20perumahan%20Tasikmadu  \n\n🌐 **Website:** https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 139,
      "kota": "Malang",
      "latitude": -7.95017005683015,
      "longitude": 112.60349323706393,
      "harga_sewa": "50000000",
      "label_harga_sewa": "Rp50jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250301202648_62848.jpg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**DIKONTRAKKAN – RUMAH MEWAH 5 KAMAR TIDUR DI SIGURA-GURA, MALANG KOTA**  \n\n**Kamar luas, bersih, dan lokasi super strategis!**  \n\n**Lokasi Premium di Tengah Kota:**  \n- 2 menit ke UIN | 3 menit ke ITN | 4 menit ke UB & Gajayana  \n- 5 menit ke Matos | 7 menit ke UM & Unisma | 10 menit ke Kampus Merdeka  \n- 12 menit ke MOG | 13 menit ke Kayu Tangan  \n\n**Fasilitas Rumah:**  \n- WiFi kencang  \n- Listrik 1300W  \n- Air PDAM  \n- Dapur lengkap (kompor gas, kulkas, lemari, dispenser)  \n- Ruang tamu modern + wastafel  \n- Pagar rumah + parkir motor & mobil  \n- Akses mobil bisa papasan  \n- Area perumahan aman dengan Satpam 24 jam  \n\n**Fasilitas Kamar Utama:**  \n- Kasur 120 x 200  \n- Lemari kaca  \n- Kursi  \n- Kipas angin  \n- Kamar mandi dalam (closet duduk)  \n\n**Fasilitas 4 Kamar Lainnya:**  \n- Kasur 100 x 200  \n- Lemari plastik  \n- Kursi  \n- 2 Kamar mandi luar (closet duduk & closet jongkok)  \n\n**Harga Terbaik untuk Lokasi Premium!**  \n\n📞 **Harga Sewa: Rp 50.000.000 per tahun**   \n\nWhatsApp: https://wa.me/6282231320160?text=permisi%20mau%20tanya%20sewa%20rumah%20mewah%205%20kamar%20tidur,%20akses%20mobil%20di%20perumahan%20Sigura-gura  \n\nTelegram: https://t.me/kontrakyuk?text=permisi%20mau%20tanya%20sewa%20rumah%20mewah%205%20kamar%20tidur,%20akses%20mobil%20di%20perumahan%20Sigura-gura  \n\n🌐 **Website:** https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 140,
      "kota": "Malang",
      "latitude": -7.954484179375492,
      "longitude": 112.58894651207814,
      "harga_sewa": "23000000",
      "label_harga_sewa": "Rp23jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_68160",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**DIKONTRAKKAN – RUMAH NYAMAN DI PERUMAHAN CITRA MAS RAYA, MALANG**  \n\n**Lokasi Strategis, Fasilitas Lengkap, Lingkungan Aman & Nyaman**  \n\n**Keunggulan Lokasi:**  \n- 10 menit ke UB & Matos  \n- 5 menit ke Kampus Ma Chung  \n- Akses mudah ke Batu via jalan alternatif  \n- Keamanan 24 jam, lingkungan perumahan aman & nyaman  \n\n**Fasilitas Rumah:**  \n- 2 Kamar Tidur (1 spring bed besar)  \n- 1 Kamar Mandi (dilengkapi water heater)  \n- Dapur lengkap (kompor + peralatan dapur)  \n- Garasi luas (muat 2 mobil)  \n- Teras luas  \n- Ruang tamu nyaman + sofa  \n- Tempat jemuran di lantai 2  \n- Listrik token 1300 watt  \n- PDAM + tandon air  \n\n**Harga Sewa: Rp 23.000.000 per tahun**  \n\nMinat? Hubungi segera untuk info & survei lokasi!  \n\n📞 **Kontak:**  \nWhatsApp: https://wa.me/6282231320160?text=permisi%20mau%20tanya%20sewa%20rumah%20di%20perumahan%20Citra%20Mas%20Raya,%202%20kamar%20tidur,%20akses%20mobil  \n\nTelegram: https://t.me/kontrakyuk?text=permisi%20mau%20tanya%20sewa%20rumah%20di%20perumahan%20Citra%20Mas%20Raya,%202%20kamar%20tidur,%20akses%20mobil  \n\n🌐 **Website:** https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 141,
      "kota": "Malang",
      "latitude": -7.9723370872960215,
      "longitude": 112.66217822819375,
      "harga_sewa": "18000000",
      "label_harga_sewa": "Rp18jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_28995.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**DIKONTRAKKAN – RUMAH DI PERUMAHAN SAWOJAJAR 1, MALANG**  \n\n**Lokasi Strategis & Nyaman**  \n- Limboto Utara VIII Blok A5/L16  \n- Dekat SPBU Sulfat  \n- Bebas banjir, lingkungan aman & nyaman  \n- Akses jalan lebar, mobil bisa simpangan  \n\n**Spesifikasi Rumah:**  \n- 2 Kamar Tidur  \n- 1 Kamar Mandi  \n- Dapur & Ruang Makan  \n- Parkir mobil kecil  \n- Parkir motor luas  \n- Berpagar, aman & nyaman  \n- Ukuran rumah: 7m x 12m  \n- Listrik PLN 1300W  \n- Air PDAM  \n\n**Harga Sewa: Rp 18.000.000 per tahun**  \n\nMinat? Hubungi segera untuk info & survei lokasi!  \n\n📞 **Kontak:**  \nWhatsApp: https://wa.me/6282231320160?text=permisi%20mau%20tanya%20sewa%20rumah%20di%20perumahan%20Sawojajar%201%202%20kamar%20tidur,%20akses%20mobil  \n\nTelegram: https://t.me/kontrakyuk?text=permisi%20mau%20tanya%20sewa%20rumah%20di%20perumahan%20Sawojajar%201%202%20kamar%20tidur,%20akses%20mobil  \n\n🌐 **Website:** https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 142,
      "kota": "Malang",
      "latitude": -7.932875523428085,
      "longitude": 112.62717085875828,
      "harga_sewa": "30000000",
      "label_harga_sewa": "Rp30jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202648_12640.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**DIKONTRAKKAN – RUMAH DI JL. SUDIMORO, MALANG KOTA, DEKAT SUHAT**  \n\n**Lokasi Strategis & Fasilitas Lengkap!**  \n\n**Keunggulan Lokasi:**  \n- Dekat kampus besar di Malang: UB, UM, UIN, Polinema – cocok untuk mahasiswa & pekerja  \n- Lingkungan nyaman dan aman  \n- Akses mudah untuk motor  \n\n**Fasilitas Rumah:**  \n- 5 Kamar Tidur – luas & nyaman  \n- 2 Kamar Mandi  \n- 1 Dapur Bersama  \n- Fasilitas dalam rumah:  \n  - Kasur  \n  - Almari  \n  - Kompor  \n\n**Harga Sewa: Rp 30.000.000 per tahun**  \n\nSiap huni! Hubungi segera untuk info dan survei lokasi!  \n\n📞 **Kontak:**  \nWhatsApp: https://wa.me/6282231320160?text=permisi%20mau%20tanya%20sewa%20rumah%205%20kamar%20fullperabotan%20di%20sudimoro%20dekat%20suhat  \n\nTelegram: https://t.me/kontrakyuk?text=permisi%20mau%20tanya%20sewa%20rumah%205%20kamar%20fullperabotan%20di%20sudimoro%20dekat%20suhat  \n\n🌐 **Website:** https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 143,
      "kota": "Malang",
      "latitude": -7.901853011691331,
      "longitude": 112.56661246498881,
      "harga_sewa": "16000000",
      "label_harga_sewa": "Rp16jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202539_27493.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**DIKONTRAKKAN – RUMAH 2 LANTAI DI MOJOREJO, DEKAT UMM & SENGKALING**  \n\n**Rumah terawat, bersih, dan lokasi strategis!**  \n\n**Keunggulan Lokasi:**  \n- Dekat Kampus UMM  \n- Dekat Taman Rekreasi Sengkaling & Jatim Park 3  \n- Akses mobil mudah & parkiran luas  \n\n**Spesifikasi Rumah:**  \n- 4 Kamar Tidur  \n- 2 Lantai, luas & nyaman  \n- Carport + pagar, parkir mobil aman  \n- Lingkungan nyaman & bersih  \n\n**Harga Sewa: Rp 16.000.000 per tahun**  \n\nMinat? Hubungi segera untuk info dan survei lokasi!  \n\n📞 **Kontak:**  \nWhatsApp: https://wa.me/6282231320160?text=permisi%20mau%20tanya%20sewa%20rumah%204%20kamar%20bisa%20full%20perabotan%20di%20Mojorejo%20dekat%20UMM3\n  \nTelegram: https://t.me/kontrakyuk?text=permisi%20mau%20tanya%20sewa%20rumah%204%20kamar%20bisa%20full%20perabotan%20di%20Mojorejo%20dekat%20UMM3  \n\n🌐 **Website:** https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 144,
      "kota": "Malang",
      "latitude": -7.930237817656811,
      "longitude": 112.63581519722315,
      "harga_sewa": "23000000",
      "label_harga_sewa": "Rp23jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250301202233_52470.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**DIKONTRAKKAN – RUMAH FULL PERABOTAN DI JL. IKAN PIRANHA ATAS, MALANG**  \n\n**Cocok untuk yang ingin ngontrak tanpa repot membawa banyak barang!**  \n\n**Lokasi Strategis:**  \n- 15 menit ke Kampus UB  \n- 10 menit ke Kampus Polinema  \n- 8 menit ke Kampus Widyagama  \n\n**Fasilitas Rumah:**  \n- 5 Kamar Tidur (dilengkapi kasur & lemari di setiap kamar)  \n- 2 Kamar Mandi  \n- Dapur bersih + satu set tempat penyimpanan  \n\n**Harga Sewa Terjangkau!**  \n\nMinat? Hubungi segera untuk info dan survei lokasi!  \n\n📞 **Kontak:**  \nWhatsApp: https://wa.me/6282231320160?text=permisi%20mau%20tanya%20sewa%20rumah%205%20kamar%20full%20perabotan%20di%20Jl.%20ikan%20piranha%20atas  \n\nTelegram: https://t.me/kontrakyuk?text=permisi%20mau%20tanya%20sewa%20rumah%205%20kamar%20full%20perabotan%20di%20Jl.%20ikan%20piranha%20atas  \n\n🌐 **Website:** https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 145,
      "kota": "Malang",
      "latitude": -7.917811031346129,
      "longitude": 112.59474506744061,
      "harga_sewa": "25000000",
      "label_harga_sewa": "Rp25jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250308212937_99377.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**DIKONTRAKKAN – RUMAH FULL PERABOTAN, LOKASI STRATEGIS & NYAMAN**  \n\n**Rumah luas, sejuk, dan siap huni!**  \n\n**Keunggulan Lokasi:**  \n- Akses belakang rumah langsung ke Perumahan IKIP  \n- Dekat dengan Kampus UMM (sebelumnya dikontrak mahasiswa UMM selama 4 tahun)  \n- Lingkungan aman dan nyaman  \n\n**Spesifikasi Rumah:**  \n- 5 Kamar Tidur – luas dan tidak panas  \n- 1 Kamar Mandi Besar  \n- Full Perabotan: Kasur & lemari di setiap kamar  \n- Dapur bersih dan nyaman  \n- Parkiran mobil tersedia  \n- Parkiran motor luas (bisa untuk 10 motor) + pagar aman  \n\n**Harga Sewa:**  \n**Rp 25.000.000 per tahun**  \n\n📞 **Kontak:**  \nWhatsApp:https://wa.me/6282231320160?text=permisi%20mau%20tanya%20sewa%20rumah%205%20kamar%20full%20perabotan%20di%20dekat%20UMM3\n\nTelegram: https://t.me/kontrakyuk?text=permisi%20mau%20tanya%20sewa%20rumah%205%20kamar%20full%20perabotan%20di%20dekat%20UMM3  \n\n🌐 **Website:** https://kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 146,
      "kota": "Malang",
      "latitude": -7.954897773713958,
      "longitude": 112.62221016785472,
      "harga_sewa": "25000000",
      "label_harga_sewa": "Rp25jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250825111545_73237",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**RUMAH DIKONTRAKKAN – DEKAT SUHAT, FULL PERABOTAN**  \n\n**Harga Sewa Setara Rumah Kosongan, tapi Sudah Lengkap dengan Fasilitas!**  \n\n**Lokasi Strategis:**  \n- Dekat dengan Universitas Brawijaya (UB), Universitas Negeri Malang (UM), Politeknik Negeri Malang (Polinema), UIN Malang, dan ASIA  \n- Akses kendaraan mudah, termasuk mobil  \n- Lingkungan aman dan nyaman  \n \n**Spesifikasi Rumah:**  \n- 4 Kamar Tidur (dilengkapi kasur di setiap kamar)  \n- 2 Kamar Mandi  \n- Rumah luas, terawat, dan nyaman untuk dihuni  \n\n**Harga Sewa:**  \n**Rp 25.000.000 per tahun** – Lokasi strategis di area Suhat, Malang  \n\n**Jangan sampai kehabisan! Hubungi segera untuk info dan survei lokasi.**  \n\n📞 **Kontak:**  \nWhatsApp: https://wa.me/6282231320160?text=permisi%20mau%20tanya%20rumah%204%20kamar%20full%20perabotan%20di%20dekat%20Suhat  \n\nTelegram: https://t.me/kontrakyuk?text=permisi%20mau%20tanya%20sewa%20rumah%204%20kamar%20full%20perabotan%20di%20dekat%20Suhat  \n\n🌐 **Website:** kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 147,
      "kota": "Malang",
      "latitude": -7.94814157766372,
      "longitude": 112.60574112097923,
      "harga_sewa": "45000000",
      "label_harga_sewa": "Rp45jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250302075420_64631.jpg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**DIKONTRAKAN RUMAH DI PERUMAHAN KEAMANAN 24 JAM DEKAT SIGURA-GURA**  \n\nCocok untuk hunian mahasiswa maupun keluarga.  \n\n**Lokasi Strategis:**  \n- Dekat Kampus UIN  \n- Dekat Kampus UB  \n- Dekat Kampus UMM  \n- Dekat Kampus Polinema  \n- Terletak di perumahan besar dengan akses jalan lebar, bisa untuk 2 mobil  \n\n**Spesifikasi Rumah:**  \n- 5 Kamar Tidur  \n- 2 Kamar Mandi (WC duduk)  \n- Dapur  \n- Ruang tamu luas  \n- Halaman depan rumah luas  \n- Garasi atau carport mobil  \n- Tempat parkir sepeda motor  \n- Dekat dengan masjid  \n\n**Fasilitas:**  \n- Kasur dan lemari di setiap kamar  \n- Water heater  \n- Kompor  \n- Kulkas  \n\n**Bonus:**\n- Free biaya listrik, iuran dan air (*maksimal 500ribu untuk 3 bulan pertama)\n\n**Harga:** Rp 45 Juta/Tahun (Nego di tempat)  \n***Boleh di DP dulu sebagai tanda jadi. Kalau mau ditempati baru dilunasi sisanya.**\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%205%20kamar%20full%20furnish%20di%20dekat%20kampus%20UIN%20masih%20ada?  \n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%205%20kamar%20full%20furnish%20di%20dekat%20kampus%20UIN%20masih%20ada?  \n\nWebsite: kontrakyuk.github.io/home/",
      "jumlah_peminat": 0
    },
    {
      "nomer": 148,
      "kota": "Malang",
      "latitude": -7.922344446484371,
      "longitude": 112.59272002212431,
      "harga_sewa": "25000000",
      "label_harga_sewa": "Rp25jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250306010607_52684.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "**DIKONTRAKKAN RUMAH DI PERUMAHAN DEPAN KAMPUS UMM 3**  \n\n**Lokasi Strategis:**  \n- Dekat dengan Kampus UMM 3  \n- Dekat dengan Apartemen Begawan  \n\n**Spesifikasi Rumah:**  \n- 6 Kamar Tidur Luas  \n- 2 Kamar Mandi  \n- Ruang Tamu Luas  \n- Balkon  \n- Rumah Berpagar  \n- Tempat Parkir Sepeda Motor  \n\n**Fasilitas & Keunggulan:**  \n- Akses jalan bisa untuk mobil  \n- Keamanan terjaga dengan satpam  \n- Dekat dengan masjid  \n- Listrik token 900 watt  \n- Air PDAM  \n\nRumah dengan ruangan luas, cocok untuk kegiatan rapat, sekretariat mahasiswa, atau tempat tinggal bersama.  \n\n**Harga:** Rp 25 Juta/Tahun (Bisa Nego)  \n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%206%20kamar%20luas%20di%20perumahan%20depan%20kampus%20UMM%203%20masih%20ada?  \n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%206%20kamar%20luas%20di%20perumahan%20depan%20kampus%20UMM%203%20masih%20ada?  \n\nWebsite: kontrakyuk.github.io/home/  \n\nSilakan hubungi untuk informasi lebih lanjut atau jadwal survei lokasi.",
      "jumlah_peminat": 0
    },
    {
      "nomer": 149,
      "kota": "Malang",
      "latitude": -7.890007165855059,
      "longitude": 112.61236472987942,
      "harga_sewa": "16000000",
      "label_harga_sewa": "Rp16jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250424231148_82574.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah luas murah di perumahan bumi perkasa, karangploso\n\n2 kamar tidur\n1 kamar mandi (WC jongkok)\nrumah 2 lantai\n\nakses mobil\nada portal dan satpam\n\nada garasi mobil dan sepeda motor\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?  \n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 150,
      "kota": "Malang",
      "latitude": -7.889168640393389,
      "longitude": 112.60959681545104,
      "harga_sewa": "12000000",
      "label_harga_sewa": "Rp12jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250424232706_57547.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah murah di perumahan bumi perkasa, karangploso\n\n2 kamar tidur\n1 kamar mandi\n\nada garasi mobil dan sepeda motor\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?  \n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 151,
      "kota": "Malang",
      "latitude": -7.888680031068721,
      "longitude": 112.60768520342295,
      "harga_sewa": "10500000",
      "label_harga_sewa": "Rp10,5jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250425234028_64420.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan lokasih karangploso perumahan bumi perkasa\n\n2 Kamar tidur\n1 Kamar mandi\nFull bangunan\nAkses mobil\ngarasi parkiran mobil dan sepeda motor\npagar\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?  \n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 152,
      "kota": "Malang",
      "latitude": -7.954088313439969,
      "longitude": 112.60236123406324,
      "harga_sewa": "28000000",
      "label_harga_sewa": "Rp28jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250425234942_28296.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan di perumahan sigura-gura\n\n2 kamar tidur\n1 kamar mandi\nakses mobil\ngarasi mobil dan sepeda motor\n\nrumah luas\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?  \n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 153,
      "kota": "Malang",
      "latitude": -7.954613607088217,
      "longitude": 112.60685763926466,
      "harga_sewa": "50000000",
      "label_harga_sewa": "Rp50jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250426023023_28108.jpeg",
      "deskripsi_visual_kontrakan": "**Bentuk dan Gaya Rumah (Diperbarui):**\n\n* **Tipe:** Kontrakan ini adalah rumah tapak (landed house) satu lantai.\n* **Warna Dinding (Eksterior):** Bagian depan rumah memiliki kombinasi warna. Dinding pagar dan sebagian fasad rumah tampak berwarna krem atau coklat muda, dengan aksen biru pada beberapa detail, seperti lis atap, pilar, dan ornamen pada pagar atau dinding depan. Terdapat elemen kotak-kotak biru gelap pada dinding pagar, memberikan sentuhan dekoratif.\n* **Warna Dinding (Interior):** (Tetap seperti deskripsi sebelumnya) Sebagian besar dinding di dalam ruangan berwarna krem muda atau putih tulang, memberikan kesan bersih dan lapang. Di beberapa area, seperti di salah satu kamar tidur dan dapur, terdapat aksen warna biru muda pada dinding atau ubin.\n* **Atap:** Atap rumah terlihat memiliki struktur yang cukup curam dengan warna biru dan lis putih atau terang.\n* **Pagar:** Terdapat pagar besi berwarna hitam dengan gerbang masuk yang juga berwarna hitam. Pagar ini memiliki ornamen melengkung di bagian atasnya.\n* **Halaman Depan:** Ada sedikit halaman di depan pagar yang ditanami rumput dan beberapa tanaman, termasuk satu pohon berukuran sedang di sisi kiri. Tersedia juga sebuah pot kuning di dekat pagar. Area ini terlihat memiliki penerangan luar ruangan.\n* **Lantai:** (Tetap seperti deskripsi sebelumnya) Seluruh lantai di dalam rumah menggunakan ubin keramik berwarna putih atau krem, yang juga menambah kesan bersih dan terang. Di bagian depan rumah, terdapat teras dengan ubin biru dan area parkir atau halaman kecil berubin paving block.\n* **Pintu dan Jendela:** (Tetap seperti deskripsi sebelumnya) Pintu utama dan beberapa pintu kamar memiliki desain panel putih dengan kaca. Jendela di kamar tidur memiliki teralis.\n* **Tata Letak:** (Tetap seperti deskripsi sebelumnya) Tampak ada ruang tamu/keluarga di bagian depan setelah pintu masuk. Terdapat beberapa kamar tidur, setidaknya terlihat tiga kamar tidur dari video. Ada satu kamar mandi dengan desain ubin biru-putih dan bak mandi permanen (bukan bathtub). Area dapur terlihat di bagian belakang rumah, terpisah dari area utama, dengan bak cuci piring dan tempat untuk kompor.\n\n**Kondisi dan Kelengkapan (Tidak Berubah):**\n\n* **Furnitur:** Kontrakan ini disewakan dengan furnitur dasar, meliputi:\n    * Kasur (setidaknya di dua kamar tidur).\n    * Meja belajar/kerja dan kursi.\n    * Lemari pakaian dengan cermin.\n    * Di dapur terdapat rak penyimpanan dan wastafel.\n* **Kebersihan:** Secara keseluruhan, kontrakan terlihat dalam kondisi bersih dan terawat.\n* **Pencahayaan:** Rumah mendapatkan pencahayaan alami yang cukup dari jendela dan pintu kaca.\n\n**Cocok Diperuntukkan Untuk (Tidak Berubah):**\n\n* **Keluarga Kecil:** Dengan beberapa kamar tidur, kontrakan ini sangat cocok untuk keluarga kecil dengan 1-2 anak.\n* **Pasangan Muda:** Pasangan baru atau yang sedang memulai hidup berkeluarga akan menemukan rumah ini memadai.\n* **Karyawan/Mahasiswa Berbagi:** Jika diizinkan oleh pemilik, kontrakan ini bisa menjadi pilihan untuk 2-3 orang karyawan atau mahasiswa yang ingin berbagi tempat tinggal, dengan masing-masing memiliki kamar sendiri.\n* **Orang yang Mencari Kemudahan:** Adanya furnitur dasar (kasur, lemari, meja) akan sangat membantu bagi penyewa yang tidak ingin repot membeli atau memindahkan banyak perabotan.\n* **Penyewa Jangka Panjang:** Dengan fasilitas yang memadai dan ukuran yang cukup, kontrakan ini cocok untuk penyewaan jangka panjang.\n\n**Ringkasan Keunggulan (Diperbarui):**\n\n* Rumah tapak yang lebih leluasa dibandingkan apartemen, dengan tampilan depan yang menarik dan terawat.\n* Sudah dilengkapi furnitur dasar, mengurangi biaya awal penyewa.\n* Terlihat bersih dan terawat baik interior maupun eksterior.\n* Memiliki area teras dan parkir/halaman depan.\n* Dapur terpisah, cocok untuk yang sering memasak.\n\n**Pertimbangan Tambahan (Tidak Berubah):**\n\n* Ketersediaan air bersih dan listrik.\n* Akses transportasi umum atau fasilitas terdekat (warung, minimarket, sekolah, dll.).\n* Lingkungan sekitar (apakah tenang, ramai, aman).\n\nDengan tambahan detail eksterior, deskripsi ini kini lebih lengkap untuk membantu Anda dan tim dalam membandingkan kontrakan ini.",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah di perumahan sigura-gura\n\nFull perabotan (springbed, meja, lemari perkamar)\n\n6 kamar tidur\n2 kamar mandi\nada garasi parkiran mobil dan sepeda motor\n\nLingkungan bebas 24 jam\n\nPdam, Sumur, Listrik 1300 watt\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?  \n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 154,
      "kota": "Malang",
      "latitude": -7.952847854439744,
      "longitude": 112.60501065182689,
      "harga_sewa": "55000000",
      "label_harga_sewa": "Rp55jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250426024409_72237.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan di perumahan\n\nSudah ada perabotan (Springbed, Kulkas, Kompor, Sofa, Meja Makan, hingga dispenser)\n\n5 kamar tidur\n3 kamar mandi (WC Duduk dan Jongkok)\nakses mobil\ngarasi mobil dan sepeda motor\n\nRumah 2 lantai luas dan nyaman\nLingkungan bebas 24 jam\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?  \n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 155,
      "kota": "Malang",
      "latitude": -7.937122056973887,
      "longitude": 112.58054582303099,
      "harga_sewa": "28000000",
      "label_harga_sewa": "Rp28jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250426024929_11267.jpeg",
      "deskripsi_visual_kontrakan": "**Bentuk dan Gaya Rumah:**\n\n* **Tipe Rumah:** Rumah ini tampaknya merupakan rumah bertingkat dua (dua lantai) dengan fasad modern minimalis.\n* **Fasad Depan:**\n    * Kombinasi material: Terdapat kombinasi dinding plesteran berwarna putih/abu-abu muda dengan aksen batu alam berwarna coklat muda/krem pada bagian fasad atas.\n    * Jendela: Jendela-jendela besar di lantai atas dengan kusen berwarna gelap dan teralis bermotif. Terdapat juga gorden bermotif flamingo yang terlihat dari luar.\n    * Balkon: Terdapat balkon kecil di lantai atas dengan pagar besi berwarna gelap.\n    * Garasi/Carport: Bagian depan rumah memiliki area carport yang cukup luas, terlihat ada motor dan mobil yang ditutupi terpal biru.\n    * Pintu Pagar: Pintu pagar depan terbuat dari besi berwarna hitam.\n    * Area Teras/Depan: Terdapat sedikit area teras di depan pintu masuk utama, di samping carport.\n* **Interior:**\n    * **Ruang Tamu/Keluarga:** Ruangan terang dengan dinding putih. Terdapat gorden bermotif flamingo (ada dua warna, pink dan biru tua) yang dominan, memberikan kesan ceria. Ada meja kayu dengan ukiran dan sofa/kursi kayu. Jam dinding besar dan bingkai foto di dinding menambah sentuhan personal. Lantai keramik putih mengkilap.\n    * **Dapur:** Dapur berbentuk lorong (galley kitchen) yang memanjang. Dominan warna pink dengan gorden dan peralatan dapur berwarna senada. Meja dapur dilapisi keramik motif dan terdapat rak gantung untuk peralatan masak. Penataan terlihat rapi dan bersih.\n    * **Tangga:** Tangga dengan pegangan tangan (railing) besi berwarna hitam, memberikan kesan kokoh. Dinding putih polos di sepanjang tangga.\n    * **Area Lorong/Transisi:** Terdapat area lorong di lantai atas atau di dekat tangga dengan dinding putih. Ada rak dinding minimalis dengan tanaman hias pot kecil, serta bangku kayu di bawahnya, menciptakan sudut yang nyaman.\n    * **Pintu Interior:** Pintu-pintu interior (termasuk pintu kamar dan pintu kamar mandi jika terlihat) berwarna coklat gelap, memberikan kontras dengan dinding putih.\n\n**Kondisi Umum:**\n\n* Terlihat bersih, terawat, dan cukup terorganisir.\n* Pencahayaan alami cukup baik, terutama di ruang tamu dan area lorong karena adanya jendela besar.\n* Beberapa area terlihat kosong atau minim perabot, menunjukkan potensi untuk diisi sesuai selera penghuni.\n\n**Cocok Diperuntukkan Untuk:**\n\n* **Keluarga Kecil:** Dengan dua lantai dan beberapa ruangan, kontrakan ini ideal untuk keluarga kecil (misalnya, pasangan dengan 1-2 anak).\n* **Pasangan Muda:** Gaya interior yang ceria dan modern cocok untuk pasangan muda yang sedang memulai rumah tangga.\n* **Pekerja/Mahasiswa yang Menginginkan Privasi dan Ruang:** Meskipun tidak terlihat semua kamar, adanya dua lantai memberikan privasi lebih dibandingkan kontrakan satu lantai. Cocok untuk beberapa individu yang ingin berbagi tempat tinggal namun tetap memiliki ruang pribadi.\n* **Penyewa yang Menghargai Kebersihan dan Estetika:** Kontrakan ini terlihat terawat dan memiliki sentuhan dekorasi yang menarik (gorden, tanaman hias), sehingga cocok bagi penyewa yang mengutamakan hal tersebut.\n* **Penyewa dengan Kendaraan:** Adanya carport yang cukup luas sangat mengakomodasi penyewa yang memiliki mobil dan/atau motor.\n\n**Kelebihan Potensial (berdasarkan observasi):**\n\n* Desain modern dan menarik.\n* Tersedia carport.\n* Interior yang cerah dan bersih.\n* Dapur yang fungsional dan estetik.\n* Kemungkinan memiliki cukup ruang untuk tumbuh atau beraktivitas.\n* Lingkungan tampak tenang (berdasarkan pemandangan di luar jendela yang cenderung terbuka).\n\n**Kekurangan Potensial (perlu dikonfirmasi):**\n\n* Ukuran kamar tidur tidak terlihat, sehingga kapasitas tidur maksimal belum jelas.\n* Lokasi geografis tidak diketahui, yang bisa memengaruhi aksesibilitas ke fasilitas umum.\n* Tidak ada informasi mengenai fasilitas tambahan seperti AC, water heater, dll.",
      "deskripsi_spesifikasi_kontrakan": "DIKONTRAKKAN dI PERUMAHAN!!!\n\nRumah lantai 2\n3 Kamar tidur \n2 Kamar mandi\nGarasi mobil dan motor dilengkapi CCTV\nRuang keluarga\nDapur\nBalkon. \n\nHanya beberapa menit dari Pasar dinoyo, Unisma, UB, UIN, dan UM.\n\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?  \n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 156,
      "kota": "Malang",
      "latitude": -7.9562597942060584,
      "longitude": 112.60595999783042,
      "harga_sewa": "48000000",
      "label_harga_sewa": "Rp48jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250426025643_68588.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah di perumahan sigura-gura\n\n3 kamar tidur\n2 kamar mandi (WC Duduk dan Shower)\nDapur\nRuang Tamu Luas\nRuang jemur baju\nAda garasi parkiran mobil dan sepeda motor\n\nLingkungan bebas 24 jam\n\nPdam, Sumur, Listrik 1300 watt\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?  \n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 157,
      "kota": "Malang",
      "latitude": -7.952857924798133,
      "longitude": 112.60438847457401,
      "harga_sewa": "29000000",
      "label_harga_sewa": "Rp29jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250426031101_1224.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah di dekat Sigura-gura, Malang\n\n3 kamar tidur\n1 kamar mandi (WC Duduk)\nDapur\nRuang Tamu\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?  \n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 158,
      "kota": "Malang",
      "latitude": -7.94389341320942,
      "longitude": 112.61494457945956,
      "harga_sewa": "27000000",
      "label_harga_sewa": "Rp27jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250427003113_73148.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah luas 2 lantau termurah di Suhat, Malang\n\n5 Kamar tidur\n2 Kamar mandi\n2 Dapur\nRuang tamu\nTempat jemur baju\nParkir sepeda motor + pagar\n\nLokasi di pinggir jalan\nakses mobil\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?  \n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 159,
      "kota": "Malang",
      "latitude": -7.9513272884875095,
      "longitude": 112.60190389050788,
      "harga_sewa": "35000000",
      "label_harga_sewa": "Rp35jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250427014744_36092.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah 2 lantai di perumahan Sigura-gura, Malang\n\nSudah ada kasur, lemari dan kompor\n\n3 kamar tidur\n1 kamar mandi\nDapur\nTempat jemur baju\n\nAkses mobil\nAda parkir mobil\nAda security perumahan\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?  \n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 160,
      "kota": "Malang",
      "latitude": -7.933959860346131,
      "longitude": 112.61196713725808,
      "harga_sewa": "31000000",
      "label_harga_sewa": "Rp31jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250427020036_17558.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah di pinggir jalan\n\nRumah 2 lantai \n\n5 kamar tidur\n2 kamar mandi\n2 dapur\nTempat jemur baju\ntempat nongkrong di lantai 2\n\nAkses mobil. ada parkiran sepeda motor + pagar tinggi\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?  \n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 161,
      "kota": "Malang",
      "latitude": -7.898831282331716,
      "longitude": 112.60853663377605,
      "harga_sewa": "23000000",
      "label_harga_sewa": "Rp23jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250427021129_50994.jpeg",
      "deskripsi_visual_kontrakan": "**Bentuk dan Gaya Rumah:**\n\n* **Eksterior:** Rumah ini memiliki gaya minimalis modern dengan sentuhan warna cerah. Bagian depan didominasi oleh pagar besi berwarna putih yang tinggi. Terdapat pilar-pilar besar berwarna merah cerah di area teras depan, memberikan aksen yang mencolok. Dinding luar rumah memadukan material batu alam di bagian bawah jendela dan cat berwarna abu-abu di bagian atas. Jendela berbingkai putih cukup besar dan berbentuk persegi panjang.\n* **Interior:** Lantai dalam rumah menggunakan keramik berwarna terang (kemungkinan krem atau putih gading) yang memberikan kesan bersih dan luas. Dinding interior sebagian besar berwarna putih polos, kecuali beberapa ruangan yang dicat dengan warna berbeda (biru muda di salah satu kamar tidur dan merah cerah di kamar mandi/area cuci). Langit-langit tampak tinggi, menambah kesan lapang. Beberapa pintu di dalam rumah berwarna cokelat kayu.\n* **Tata Letak:** Kontrakan ini tampaknya memiliki tata letak memanjang. Dari ruang tamu, terlihat lorong yang mengarah ke bagian belakang rumah, dengan beberapa pintu menuju kamar-kamar dan area lainnya. Ada area dapur dengan meja beton dan wastafel, serta kamar mandi di dalam rumah dan satu lagi di area belakang (kemungkinan area cuci atau kamar mandi tambahan).\n\n**Kondisi Umum:**\n\n* Secara keseluruhan, rumah ini terlihat baru direnovasi atau dalam kondisi yang cukup terawat. Cat dinding tampak baru, dan lantai bersih.\n* Ada area parkir di depan rumah yang cukup luas, diperkirakan mampu menampung satu mobil.\n* Terdapat sedikit area hijau atau taman kecil di samping teras depan.\n\n**Cocok Diperuntukkan Untuk:**\n\n* **Keluarga Kecil:** Dengan beberapa kamar tidur (setidaknya terlihat dua kamar tidur selain ruang utama), kontrakan ini cocok untuk keluarga kecil.\n* **Pasangan Muda:** Ukuran yang tidak terlalu besar dan desain modern bisa menarik bagi pasangan muda.\n* **Karyawan atau Mahasiswa yang Berbagi:** Jika anggaran dibagi, beberapa individu bisa tinggal bersama di kontrakan ini.\n* **Penggunaan Usaha Kecil (dengan modifikasi):** Meskipun primarily perumahan, bagian depan yang luas dan akses langsung dari jalan bisa dipertimbangkan untuk usaha rumahan yang tidak membutuhkan banyak modifikasi struktural, seperti kantor kecil, butik online, atau tempat les privat (tergantung peraturan setempat).\n\n**Poin Kelebihan (berdasarkan observasi):**\n\n* Desain modern dan menarik.\n* Pencahayaan alami yang baik (terlihat dari jendela besar dan pantulan cahaya).\n* Area parkir yang memadai.\n* Terawat dan bersih.\n* Dapur dan kamar mandi yang fungsional.\n\n**Poin yang Perlu Diperhatikan (potensi kekurangan/pertanyaan lebih lanjut):**\n\n* Tidak terlihat adanya perabot utama (kecuali sofa di ruang tamu pada awal video, yang mungkin bukan bagian dari sewa). Perlu dikonfirmasi apakah disewakan unfurnished atau furnished.\n* Tidak ada informasi mengenai jumlah pasti kamar tidur dan kamar mandi.\n* Tidak ada informasi mengenai fasilitas tambahan seperti AC, water heater, atau jaringan internet.\n* Tidak ada informasi mengenai lokasi spesifik atau akses ke fasilitas umum (transaksi, toko, dll.).\n* Terdapat beberapa detail yang menunjukkan bahwa rumah ini mungkin baru selesai dibangun atau direnovasi (misalnya tangga putih tanpa pegangan di area samping rumah, atau bagian atap di area belakang yang belum sepenuhnya tertutup).\n\nDengan deskripsi ini, Anda dan tim dapat membandingkan kontrakan ini dengan properti lain berdasarkan gaya, kondisi, dan potensi penggunaannya.",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah di perumahan karangploso, Malang\n\n\nRumah blok depan dan luas di perumahan\n\n2 kamar tidur luas\n1 kamar mandi (WC Duduk)\nDapur depan\nRuang Tamu luas\nTempat cuci dan jemur baju di belakang\nCarport Garasi mobil\n\nAkses mobil. Ada security. Dekat dengan Indomart.\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?  \n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 162,
      "kota": "Malang",
      "latitude": -7.916896484310095,
      "longitude": 112.60171803993282,
      "harga_sewa": "25500000",
      "label_harga_sewa": "Rp25,5jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250427023833_17512.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah di perumahan Tegalgondo, Malang\n\n2 Kamar tidur\n2 Kamar mandi\nDapur\nTempat jemur baju ada atapnya\n\nAkses mobil. Ada carport parkiran mobil. Ada security\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?  \n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 163,
      "kota": "Malang",
      "latitude": -7.937227698412302,
      "longitude": 112.61720250490424,
      "harga_sewa": "13000000",
      "label_harga_sewa": "Rp13jt",
      "ketersediaan": "Laku 😍️",
      "foto_kontrakan": "20250427051214_32400.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah di dekat suhat, Malang\n\nGratiss Listrik dan Wifi.\n\n2 kamar tidur\n1 kamar mandi\nDapur\nRuang tamu\nTempat jemuran baju\n\nAkses mobil. Ada parkiran sepeda motor dan pagar.\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?  \n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 164,
      "kota": "Malang",
      "latitude": -7.91337519039932,
      "longitude": 112.60604940709814,
      "harga_sewa": "21500000",
      "label_harga_sewa": "Rp21,5jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250427052316_52705.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah 2 lantai di dekat NK Cafe, Malang\n\nSudah ada kasur, bantal, lemari dan kompor\n\n4 kamar tidur\n1 kamar mandi\nDapur\nRuang Tamu\nTempat jemur baju\nPagar depan\n\nAkses mobil. Rumah dipinggir jalan utama.\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?  \n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 165,
      "kota": "Malang",
      "latitude": -7.917065536209955,
      "longitude": 112.59189523162559,
      "harga_sewa": "26000000",
      "label_harga_sewa": "Rp26jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250427053442_34910.png",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah di belakang UMM 3, Malang\n\nProses renovasi dan cat ulang tembok menjadi warna putih.\n\nSudah ada kasur, bantal, lemari, meja, dan kompor.\n\n6 kamar tidur\n2 kamar mandi\nDapur\nRuang tamu\nParkir sepeda motor dan pagar besi\n\nAkses mobil. Rumah dipinggir jalan.\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?  \n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 166,
      "kota": "Malang",
      "latitude": -7.944752205586222,
      "longitude": 112.63573765550619,
      "harga_sewa": "22500000",
      "label_harga_sewa": "Rp22,5jt",
      "ketersediaan": "Laku 😍️",
      "foto_kontrakan": "20250427070520_55312.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah di Jl. Candi, Suhat, Malang\n\n3 kamar tidur\n1 kamar mandi\nDapur Luas\nRuang Tamu Luas\nTempat jemur baju di lantai 2\n\nAkses jalan mobil. Ada tempat parkir sepeda motor dan pagar besi\n\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?  \n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 167,
      "kota": "Malang",
      "latitude": -7.942045093709049,
      "longitude": 112.63503176554667,
      "harga_sewa": "35000000",
      "label_harga_sewa": "Rp35jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250427070727_59335.jpeg",
      "deskripsi_visual_kontrakan": "**Bentuk dan Gaya Rumah:**\n\n* **Fasad Depan:** Terdapat teras yang cukup luas dengan lantai keramik bermotif. Dinding teras berwarna kuning cerah. Ada pot-pot tanaman gantung di teras, memberikan kesan asri. Terdapat dua pintu depan, satu pintu utama yang terlihat lebih lebar dan satu pintu samping, keduanya berwarna putih. Ada nomor rumah \"19\" di atas pintu utama.\n* **Ruang Tamu:** Dinding interior berwarna kuning, senada dengan teras. Terdapat beberapa sofa berwarna krem/cokelat muda, satu di antaranya dilapisi sprei bermotif. Ada meja kopi dengan taplak meja biru di tengah ruangan, di atasnya terdapat beberapa wadah makanan.\n* **Dapur:** Dinding dapur juga berwarna kuning, dengan area keramik putih di sekitar wastafel. Terdapat dua wastafel dan kompor. Terlihat beberapa perabotan dapur seperti panci dan gelas. Ada jendela dengan gorden hijau di dapur.\n* **Kamar Tidur:** Dinding kamar tidur juga berwarna kuning. Lantai kamar tidur sebagian besar terbuat dari keramik putih. Di salah satu kamar, terlihat sebuah ranjang tanpa kasur dengan rangka kayu berwarna gelap dan headboard yang dilengkapi rak penyimpanan.\n* **Kamar Mandi:** Lantai kamar mandi memiliki motif keramik hijau-putih. Dindingnya sebagian besar berwarna putih dengan beberapa keramik motif di area atas. Terdapat bak mandi atau area shower yang dibatasi tembok rendah, serta kloset jongkok.\n* **Area Lain:** Terdapat area tangga dengan dinding bermotif batu, dan di bawah tangga terdapat mesin cuci serta beberapa tumpukan barang.\n\n**Cocok Diperuntukkan Untuk:**\n\nKontrakan ini tampaknya cocok untuk:\n\n* **Keluarga Kecil:** Dengan beberapa kamar tidur dan ruang tamu yang memadai, serta dapur dan kamar mandi, kontrakan ini bisa nyaman untuk keluarga kecil.\n* **Pasangan Suami Istri:** Ukuran dan tata letaknya cocok untuk pasangan yang mencari tempat tinggal.\n* **Penyewa Jangka Panjang:** Dengan fasilitas dasar yang lengkap (dapur, kamar mandi, beberapa kamar), kontrakan ini ideal untuk penyewaan jangka panjang.\n* **Pelajar/Mahasiswa (dengan batasan):** Meskipun bisa untuk pelajar/mahasiswa yang mencari tempat tinggal bersama, namun ada disebutkan \"kalau cewek, jangan dibawa masuk kamar\", mengindikasikan mungkin ada aturan tertentu terkait tamu lawan jenis, yang perlu dikonfirmasi lebih lanjut.\n* **Pegawai/Pekerja:** Individual atau beberapa orang pekerja yang mencari tempat tinggal yang nyaman dan terjangkau.\n* **Gudang atau tempat penyimpanan** \n\n**Perbandingan dengan Kontrakan Lain (berdasarkan deskripsi teks):**\n\nDibandingkan dengan kontrakan lain, kontrakan ini memiliki beberapa keunggulan atau karakteristik khas:\n\n* **Warna Cerah:** Penggunaan warna kuning yang dominan pada dinding (baik eksterior maupun interior) memberikan kesan cerah dan hangat, yang mungkin berbeda dari kontrakan lain yang menggunakan warna netral atau gelap.\n* **Teras Luas & Asri:** Teras yang lapang dengan tanaman gantung bisa menjadi nilai tambah bagi mereka yang suka bersantai di luar atau memiliki hobi berkebun kecil.\n* **Kamar Tidur dengan Headboard Berfungsi:** Adanya headboard dengan rak penyimpanan di salah satu kamar tidur menunjukkan adanya sedikit furnitur bawaan yang mungkin tidak selalu ada di kontrakan lain.\n* **Dapur Fungsional:** Dapur dengan dua wastafel dan area yang cukup luas untuk memasak adalah nilai plus.\n* **Kamar Mandi dengan Bak/Pembatas:** Kamar mandi yang memiliki bak atau pembatas area shower bisa lebih nyaman dibandingkan kamar mandi tanpa pembatas.\n* **Area Bawah Tangga yang Dimanfaatkan:** Pemanfaatan ruang di bawah tangga untuk mesin cuci menunjukkan optimalisasi ruang.\n* **Potensi Aturan Sosial/Keagamaan:** Adanya aturan \"kalau cewek, jangan dibawa masuk kamar\" menunjukkan bahwa kontrakan ini mungkin memiliki pemilik yang menerapkan nilai-nilai atau aturan sosial/keagamaan tertentu, yang bisa menjadi pertimbangan penting bagi calon penyewa. Ini membedakannya dari kontrakan yang mungkin lebih bebas tanpa aturan semacam itu.\n\nSecara keseluruhan, kontrakan ini terlihat terawat dan fungsional, dengan sentuhan warna cerah yang memberikan karakter unik.",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah di Jl. Candi, Suhat, Malang\n\n4 kamar tidur\n2 kamar mandi\nDapur Luas\nRuang Tamu Luas\nTempat jemur baju di lantai 2\n\nAkses jalan mobil. Ada tempat parkir carport mobil dan sepeda motor. Ada pagar besi\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?  \n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 168,
      "kota": "Malang",
      "latitude": -7.936614104168536,
      "longitude": 112.62288875544938,
      "harga_sewa": "15000000",
      "label_harga_sewa": "Rp15jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250619233936_50317.jpeg",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah di Sudimoro, Malang dekat lapangan SM Futsal\nDi Jl. Sudimoro belakang PDAM dekat cafe sawah. \n\n3 kamar tidur\n2 kamar mandi\nRuang tamu, \nRuang tengah\nDapur\nListrik\nAir sanyo\nWifi\nAkses jalan 2m. Mobil tidak bisa masuk\n\n[Bonus Kasur dan bantal baru untuk 3 kamar]\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?  \n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 169,
      "kota": "Malang",
      "latitude": -7.921598980622025,
      "longitude": 112.62563394289286,
      "harga_sewa": "18000000",
      "label_harga_sewa": "Rp18jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250619234251_65227.png",
      "deskripsi_visual_kontrakan": "**Bentuk dan Gaya Rumah:**\n\n* **Tipe:** Rumah ini tampak seperti rumah petak atau rumah toko (ruko) yang telah dimodifikasi, mengingat lorong samping yang panjang dan adanya pintu belakang menuju area terbuka.\n* **Arsitektur:** Sederhana dan fungsional. Tidak ada detail arsitektur yang mencolok atau ornamen mewah.\n* **Eksterior Depan:**\n    * Fasad dicat dengan perpaduan warna biru muda dan abu-abu.\n    * Terdapat teras kecil di bagian depan dengan pagar besi berwarna abu-abu, memberikan kesan minimalis dan keamanan.\n    * Pintu utama berwarna abu-abu dengan aksen putih/krem dan kaca di bagian atas. Ada jendela di sisi kanan dan kiri pintu.\n    * Terdapat kotak meteran listrik di dinding depan.\n* **Lorong Samping:** Ada lorong sempit di sisi kanan rumah yang mengarah ke bagian belakang. Dinding lorong berwarna putih polos, dengan beberapa jemuran atau barang gantung. Lantai lorong adalah paving block.\n* **Interior Lantai Bawah:**\n    * Warna dinding dominan biru muda dan putih/krem.\n    * Lantai keramik berwarna abu-abu terang (mungkin putih keabu-abuan).\n    * Terdapat tangga dengan pegangan tangan dari kayu dan alas tangga berwarna abu-abu.\n    * Ada satu set bangku kayu sederhana di bawah tangga.\n    * Lorong menuju bagian belakang rumah cukup panjang, dengan pintu dan jendela di sisi kanan dan kiri. Ada saklar lampu di dinding.\n    * Salah satu ruangan tampaknya berfungsi sebagai kamar tidur dengan dinding biru muda dan abu-abu gelap di bagian bawah, serta jendela.\n* **Area Belakang/Lantai Atas:**\n    * Teras belakang tampak terbuka dengan pagar rendah dan tirai bambu bermotif panda, memberikan nuansa santai. Terlihat selang air tergulung di lantai.\n    * Kamar mandi di bagian belakang memiliki dinding keramik bermotif kotak-kotak abu-abu dan putih, dengan kloset jongkok dan bak air.\n* **Lantai Atas:**\n    * Akses ke lantai atas melalui tangga dengan keramik berwarna cokelat dan abu-abu.\n    * Dinding di lantai atas juga didominasi warna biru muda dan putih.\n    * Ada lorong yang mengarah ke beberapa ruangan, kemungkinan kamar tidur, dengan pintu-pintu serupa dengan yang ada di lantai bawah.\n    * Salah satu kamar di lantai atas memiliki dinding biru muda dengan bagian bawah abu-abu gelap, dan jendela yang menghadap ke jalan atau bangunan lain di seberang.\n* **Pemandangan dari Lantai Atas:** Dari jendela lantai atas, terlihat bangunan lain di seberang jalan yang tampaknya merupakan deretan toko atau kios (\"KIOSUNGGAS\", \"Diplomat\"). Ada aktivitas kendaraan bermotor (sepeda motor dan sepeda) di jalan.\n\n**Cocok Diperuntukkan Untuk:**\n\n* **Hunian Pribadi:** Dengan beberapa kamar tidur, rumah ini cocok untuk keluarga kecil hingga menengah. Keberadaan lorong samping dan area belakang memberikan sedikit privasi dan ruang tambahan.\n* **Sewa (Kontrakan/Kos-kosan):** Mengingat tata letaknya yang memanjang dengan beberapa kamar, ini sangat cocok untuk disewakan sebagai kamar kos atau kontrakan, terutama jika lokasinya strategis dekat dengan area komersial atau kampus.\n* **Kombinasi Hunian dan Usaha Kecil (Home Office/Toko Online):** Teras depan dan posisi di pinggir jalan (terlihat dari lantai atas) memungkinkan untuk dijadikan tempat usaha kecil atau kantor rumah, meskipun tampak lebih dominan sebagai hunian.\n\n**Kondisi Umum:**\n\n* Rumah terlihat bersih dan terawat dengan baik.\n* Pengecatan dan keramik tampak relatif baru atau dalam kondisi baik.\n* Fungsionalitas lebih diutamakan daripada estetika mewah.\n\nSecara keseluruhan, rumah ini memiliki desain yang praktis dan efisien, cocok untuk kehidupan sehari-hari di daerah padat penduduk.",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah di Tasikmadu, Malang Full perabotan\n\nFull perabotan (Kasur dan Lemari baru)\n3 Kamar Tidur\nKamar mandi\nDapur\nTempat parkir motor di dalam rumah - cukup 3 sepeda motor\n \nAkses jalan sepeda motor 24 jam. tidak ada palang\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?\n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?\"",
      "jumlah_peminat": 0
    },
    {
      "nomer": 170,
      "kota": "Malang",
      "latitude": -7.933702837498994,
      "longitude": 112.634466884187,
      "harga_sewa": "45000000",
      "label_harga_sewa": "Rp45jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250626205231_45021.jpeg",
      "deskripsi_visual_kontrakan": "**Bentuk dan Gaya Rumah:**\n\n* **Eksterior:**\n    * Bagian depan rumah memiliki pagar berwarna hitam dengan desain minimalis.\n    * Terdapat area teras depan yang cukup luas dengan lantai keramik berwarna coklat dan krem yang tersusun membentuk pola kotak-kotak.\n    * Samping teras terdapat area tanah kosong yang belum diolah, kemungkinan bisa difungsikan sebagai taman kecil atau area serbaguna lainnya.\n    * Warna cat eksterior rumah didominasi oleh warna putih dan hijau muda pada pilar dan kusen jendela, memberikan kesan modern dan segar.\n    * Terdapat nomor rumah \"23\" di atas jendela depan.\n* **Interior:**\n    * Lantai interior rumah menggunakan keramik berwarna putih mengkilap, memberikan kesan bersih dan lapang.\n    * Dinding dicat putih polos, yang memberikan fleksibilitas untuk dekorasi.\n    * Jendela-jendela besar dengan kusen hitam memungkinkan banyak cahaya alami masuk.\n    * Terdapat beberapa ruangan yang terlihat, termasuk ruang tamu/keluarga, kamar tidur, dan dapur.\n    * Dapur dilengkapi dengan meja dapur dan wastafel, serta beberapa kabinet sederhana.\n    * Kamar mandi terlihat memiliki kloset duduk dan lantai bermotif batu kerikil.\n\n**Cocok Diperuntukkan Untuk:**\n\n* **Keluarga Kecil:** Dengan beberapa kamar tidur dan area umum, rumah ini cocok untuk keluarga kecil yang mencari tempat tinggal.\n* **Pasangan Muda:** Ukuran yang ringkas dan tata letak yang fungsional sangat ideal untuk pasangan yang baru menikah atau memulai hidup bersama.\n* **Penyewa:** Mengingat adanya tanda \"DISEWAKAN,\" rumah ini jelas ditujukan untuk disewakan.\n* **Mereka yang Menginginkan Rumah Siap Huni:** Kondisi rumah yang tampak terawat dan bersih menunjukkan bahwa rumah ini siap untuk dihuni tanpa perlu banyak renovasi.\n\n**Perbandingan dengan Rumah Lain:**\n\nDibandingkan dengan rumah lain, rumah ini memiliki karakteristik:\n\n* **Gaya Modern Minimalis:** Dengan dominasi warna netral, desain yang bersih, dan fungsionalitas, rumah ini mencerminkan gaya modern minimalis yang banyak diminati saat ini.\n* **Ukuran Menengah Kecil:** Ukurannya tidak terlalu besar, membuatnya lebih mudah dirawat dan ideal untuk mereka yang tidak membutuhkan ruang terlalu luas.\n* **Lingkungan Perumahan:** Adanya pagar dan tampilan rumah yang seragam menunjukkan kemungkinan rumah ini berada dalam area perumahan atau kompleks.\n* **Fokus pada Pencahayaan Alami:** Jendela-jendela yang cukup besar mengindikasikan prioritas pada pencahayaan alami, yang dapat mengurangi konsumsi listrik di siang hari.\n* **Potensi Pengembangan:** Area tanah kosong di depan rumah menawarkan potensi bagi penyewa atau pemilik untuk mengembangkan taman atau area tambahan sesuai kebutuhan.\n\nSecara keseluruhan, rumah ini adalah properti sewa yang fungsional, bersih, dan bergaya modern minimalis, cocok untuk individu atau keluarga kecil yang mencari tempat tinggal yang nyaman dan siap huni.",
      "deskripsi_spesifikasi_kontrakan": "DIKONTRAKAN: Rumah di Taman Borobudur Agung, Lowokwaru, Malang\n\nRumah siap huni dengan halaman luas, cocok untuk keluarga yang mencari kenyamanan di lokasi strategis.\n\nLokasi:\nJl. Taman Borobudur Agung, Tunjungsekar, Kec. Lowokwaru, Kota Malang, Jawa Timur 65142\n\nSpesifikasi:\n\n    Luas Tanah (LT): 168 m²\n\n    Luas Bangunan (LB): 100 m²\n\n    2 Kamar Tidur\n\n    2 Kamar Mandi (WC duduk)\n\n    Ruang Pelengkap: 1 Kamar Pembantu, 1 Gudang\n\n    Listrik: PLN 2200 watt\n\n    Air: PDAM\n\nFasilitas & Keunggulan:\n\n    Halaman Luas: Dilengkapi gerbang besi, area carport bisa menampung 1 mobil dan beberapa motor. Terdapat juga halaman samping yang bisa dimanfaatkan.\n\n    Interior Bersih: Lantai keramik putih mengkilap di seluruh ruangan utama.\n\n    Dapur: Sudah dilengkapi meja dapur dan wastafel.\n\n    Pencahayaan & Sirkulasi: Jendela besar di setiap kamar memastikan sirkulasi udara dan cahaya alami yang baik.\n\n    Lingkungan: Berada di lingkungan perumahan yang aman dan tenang.\n\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?\n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 171,
      "kota": "Malang",
      "latitude": -7.939778854505697,
      "longitude": 112.62230794856644,
      "harga_sewa": "50000000",
      "label_harga_sewa": "Rp50jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250626210630_59540.jpeg",
      "deskripsi_visual_kontrakan": "Gambar ini menampilkan deretan rumah dengan gaya yang berbeda namun terhubung, menyoroti dua properti utama di bagian depan.\n\nDi sisi kiri, terdapat rumah satu lantai dengan fasad berwarna cokelat kemerahan gelap. Bagian depannya memiliki kanopi yang menaungi area teras atau carport. Pintu masuk atau area garasi tertutup oleh tirai bambu atau penutup kayu. Atapnya adalah atap genteng berwarna gelap yang terlihat sudah tua dan berlumut di beberapa bagian.\n\nDi bagian tengah gambar, terdapat pagar besi berwarna cokelat kemerahan dengan desain yang memadukan jeruji vertikal dan aksen seperti paku di bagian atas. Pagar ini memiliki dua gerbang terpisah, mengindikasikan dua unit atau akses yang berbeda. Pilar-pilar pagar berwarna putih dengan bagian bawah yang lebih gelap.\n\nDi sisi kanan gambar, rumah berlantai satu ini memiliki fasad berwarna oranye bata yang cerah, dengan jendela berkusen gelap. Bagian depan juga ditutupi oleh kanopi berwarna gelap.\n\nDi atas kedua rumah satu lantai ini, terlihat bagian dari bangunan dua lantai yang lebih modern, dengan fasad putih dan balkon berpagar ornamen putih. Ini menunjukkan bahwa rumah-rumah di bagian bawah mungkin merupakan bagian depan dari properti yang lebih besar atau merupakan deretan rumah yang berbeda gaya.\n\nSecara keseluruhan, gambar ini menunjukkan kombinasi gaya arsitektur, dari yang lebih tua dan sederhana hingga yang lebih modern, dengan dominasi warna cokelat, oranye, dan putih, serta detail pagar yang menarik. Area depan rumah berlantai semen dengan sedikit perbedaan elevasi.",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan Rumah di perumahan Griya Shanta, Lowokwaru, Malang\n\nDekat kampus Polinema UB, UIN dan UM\n\nAda parkiran mobil dan motor\n\nFasilitas :\n\n5 kamar tidur ( dengan kasur, bantal, meja laptop lesehan, lemari pakaian)\n2 kamar mandi, closet duduk\nDapur\nRuang makan\nRuang tamu\nArea parkir motor\nArea cuci jemur\nListrik token\nAir PDAM\n\nAkses mobil. lingkungan aman.\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?\n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 172,
      "kota": "Malang",
      "latitude": -7.9460456061619835,
      "longitude": 112.60849427653733,
      "harga_sewa": "16000000",
      "label_harga_sewa": "Rp16jt",
      "ketersediaan": "Laku 😍️",
      "foto_kontrakan": "20250626234324_10541.jpeg",
      "deskripsi_visual_kontrakan": "Gambar ini menampilkan bagian depan sebuah rumah satu lantai yang memiliki desain modern dan rapi.\n\nFasad rumah didominasi oleh warna krem pada dindingnya. Lantai area teras depan dilapisi dengan ubin bermotif geometris berwarna cokelat dan putih, menambah sentuhan estetika.\n\nDi sisi kanan gambar, terdapat pintu gerbang besar berwarna hitam gelap dengan aksen keemasan. Bagian bawah gerbang memiliki panel horizontal solid, sementara bagian atasnya memiliki jeruji horizontal dengan ujung tombak keemasan, memberikan kesan mewah dan keamanan.\n\nDi balik gerbang, terlihat dua jendela vertikal tinggi dengan kusen berwarna cokelat kemerahan, yang menonjol di dinding krem. Sebuah pintu masuk utama dengan warna cokelat kemerahan juga terlihat di balik gerbang, serasi dengan kusen jendela.\n\nDi sisi kiri gambar, terdapat pintu garasi atau pintu masuk samping yang besar, berwarna hitam gelap dengan desain lipat atau geser. Sebuah sepeda motor berwarna hitam terparkir rapi di area teras/carport ini, menunjukkan fungsi praktis area depan rumah.\n\nSecara keseluruhan, rumah ini memancarkan kesan hunian yang modern, terawat, dan fungsional, dengan perpaduan warna netral, aksen cokelat kemerahan pada jendela/pintu, dan gerbang yang kokoh. Ini adalah rumah yang dirancang untuk kenyamanan dan keamanan.",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan di jl. Gajayana, Malang\n\ndekat UB, UM, UIN, Polinema\n\n2 kamar tidur luas (4x3 meter)\n1 kamar mandi duduk\nRuang jemuran di lantai 2\nRuang tengah\n\nAkses motor ada parkiran motor dan pagar besi tinggi.\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?\n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 173,
      "kota": "Malang",
      "latitude": -7.938719959884515,
      "longitude": 112.62086390814302,
      "harga_sewa": "27000000",
      "label_harga_sewa": "Rp27jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250626234632_81784.jpeg",
      "deskripsi_visual_kontrakan": "Gambar ini menampilkan sebuah rumah satu lantai yang memiliki tampilan tradisional dan terawat.\n\nFasad rumah didominasi oleh warna krem pada dindingnya. Atapnya berbentuk pelana dengan genteng berwarna gelap, dan terdapat kanopi yang menjorok ke depan menaungi area teras.\n\nDi bagian depan rumah, terdapat pagar besi yang cukup tinggi berwarna cokelat gelap dengan aksen lingkaran di bagian atasnya. Pagar ini berfungsi sebagai gerbang utama untuk akses ke halaman dan garasi. Di balik pagar, terlihat area teras atau halaman yang cukup luas, sebagian berlantai semen dan sebagian lagi berupa area taman dengan tanaman hijau dan bunga-bunga kecil berwarna oranye. Sebuah pohon dengan batang kurus juga tumbuh di area taman ini.\n\nJendela dan pintu utama rumah, yang terlihat di balik pagar, memiliki kusen berwarna gelap, kemungkinan cokelat tua, yang serasi dengan warna pagar. Beberapa pilar tiang menopang kanopi teras, menambah kesan kokoh pada bangunan.\n\nArea depan pagar adalah semen yang mengarah ke jalan. Di sisi kiri bawah gambar, terlihat sebuah tempat sampah berwarna putih. Secara keseluruhan, rumah ini memancarkan kesan hunian yang nyaman dan tradisional, dengan halaman depan yang ditanami tanaman, dan memberikan privasi melalui pagar yang solid.",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan di Perumaha Griya shanta, Malang\n\ndekat UB, UM, UIN, Polinema\n\nLT 84 , LB+/- 100\n2 Kamar Tidur\n1 Kamar Mandi (WC Duduk)\nPDAM\nListrik 1300\n1 ac split \n\nAkses mobil. lingkungan aman di perumahan\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?\n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 174,
      "kota": "Malang",
      "latitude": -7.94357784737122,
      "longitude": 112.60738475721071,
      "harga_sewa": "22500000",
      "label_harga_sewa": "Rp22,5jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250628201656_36263.jpeg",
      "deskripsi_visual_kontrakan": "Gambar ini menunjukkan bagian depan sebuah rumah satu lantai yang terletak di sebuah gang sempit berubin paving block.\n\nFasad rumah ini memiliki kombinasi warna yang menarik. Bagian bawah dinding dilapisi dengan ubin berwarna hijau gelap, memberikan tekstur dan kesan klasik. Bagian atas dinding dicat dengan warna putih krem. Jendela-jendela rumah cukup besar dengan kusen berwarna putih, memungkinkan cahaya masuk ke dalam. Sebuah nomor rumah \"721\" tertera di atas salah satu jendela.\n\nAtap rumah adalah kanopi datar berwarna cokelat gelap, yang menaungi area teras sempit di depan. Sebuah bangku kecil dari kayu terlihat diletakkan di teras, menunjukkan area duduk santai.\n\nDi sisi kanan gambar, terdapat sebuah tiang pipa besar berwarna abu-abu yang dilengkapi dengan beberapa pot tanaman gantung, menambah sentuhan hijau pada fasad. Berbagai tanaman pot lain juga terlihat berjajar di sepanjang dinding dan di depan rumah, mempercantik tampilan.\n\nDi sisi kiri gambar, terlihat sebuah sepeda motor diparkir di gang. Gang tersebut diapit oleh deretan rumah-rumah lain yang terlihat rapat, mencirikan area pemukiman padat. Secara keseluruhan, rumah ini memiliki tampilan yang sederhana namun terawat, dengan sentuhan personal melalui dekorasi tanaman dan penggunaan warna yang kontras.",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah di jl. Gajayana\ndekat UB, UM, Polinema, UIN\n\n4 kamar tidur\n1 kamar mandi (WC jongkok)\nDapur\nRuang Cuci baju\ntempat jemur baju\n\nAkses sepeda motor. lingkungan kampung bebas jam malam\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?\n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 175,
      "kota": "Malang",
      "latitude": -7.916245361416121,
      "longitude": 112.59319107280105,
      "harga_sewa": "16000000",
      "label_harga_sewa": "Rp16jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250628203746_92662.jpeg",
      "deskripsi_visual_kontrakan": "Gambar ini menampilkan sebuah rumah satu lantai yang memanjang, memiliki tampilan sederhana dan fungsional.\n\nFasad rumah didominasi oleh warna krem atau cokelat muda pada dindingnya. Atapnya adalah atap seng bergelombang berwarna gelap, yang membentang di sepanjang bagian depan rumah. Beberapa tiang penyangga berwarna krem terlihat menopang atap dan kanopi.\n\nDi bagian depan rumah, terdapat pagar tinggi berwarna abu-abu gelap dengan desain horizontal yang solid di bagian bawah dan jeruji vertikal di bagian atas. Pagar ini berfungsi sebagai gerbang utama untuk kendaraan dan pejalan kaki. Di sisi kiri pagar, terlihat sebuah pintu gerbang kecil yang juga berwarna abu-abu gelap. Sebuah ember biru dan kain biru tergantung di dekat pintu gerbang kecil tersebut.\n\nDi balik pagar, area halaman depan tampaknya berlantai semen atau paving. Bagian atas dinding di dekat atap memiliki beberapa ventilasi kecil berbentuk persegi. Jendela dan pintu masuk utama rumah tidak terlihat jelas karena terhalang oleh pagar.\n\nDi sisi kanan pagar, terdapat deretan pot tanaman dengan berbagai jenis tanaman hias, menambah sentuhan hijau pada eksterior rumah. Di ujung kanan, terlihat sebagian dari rumah tetangga dengan pagar serupa dan tiang bendera kecil dengan bendera merah putih. Jalan di depan rumah berubin paving block.\n\nSecara keseluruhan, rumah ini memiliki desain yang praktis dan terkesan kokoh, dengan dominasi warna netral dan fitur pagar yang menonjol.",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan di perumahan Ikip, babatan, tegalgondo\nBelakang kampus UMM 3\n\nBaru cat ulang\n2 kamar tidur\n1 kamar mandi\ndapur\ntempat parkir sepeda motor dan pagar besi tinggi\nparkir mobil boleh di depan rumah\nakses jalan lebar bisa mobil\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?\n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 176,
      "kota": "Malang",
      "latitude": -7.92427967077503,
      "longitude": 112.59629184024737,
      "harga_sewa": "17000000",
      "label_harga_sewa": "Rp17jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250628211541_79400.jpg",
      "deskripsi_visual_kontrakan": "Gambar ini menunjukkan sebuah rumah berlantai satu dengan potensi pengembangan di lantai atas, terletak di gang atau jalan kecil yang berubin paving block.\n\nFasad rumah didominasi warna krem atau pink pucat. Di bagian depan, terdapat area teras yang sedikit menjorok ke dalam, ditutupi oleh kanopi datar berwarna oranye kekuningan dengan lis oranye terang. Di bawah kanopi ini, terlihat pintu masuk utama berwarna gelap dan sebuah jendela berkusen cokelat di sampingnya. Bagian bawah dinding rumah di sekitar jendela memiliki tekstur batu berwarna abu-abu.\n\nDi sisi kiri gambar, terdapat pagar besi berwarna putih dengan desain sederhana yang membuka ke arah teras. Di sebelah pagar, terlihat sebagian dinding rumah tetangga yang berwarna krem dengan aksen biru muda dan kuning di bagian samping.\n\nBagian atas rumah, di atas kanopi, menunjukkan struktur yang belum selesai atau dalam tahap pembangunan, dengan kerangka bangunan terlihat jelas, mengindikasikan rumah ini berpotensi menjadi dua lantai. Di latar belakang, terlihat rumah-rumah lain dan kabel listrik yang membentang.\n\nSecara keseluruhan, rumah ini memiliki tampilan yang sederhana namun terawat, dengan fitur menonjol berupa kanopi berwarna cerah dan potensi penambahan lantai di masa depan. Lingkungan sekitarnya khas pemukiman padat di Indonesia.",
      "deskripsi_spesifikasi_kontrakan": "Rumah Dikontrakkan JL. Tirto utomo, landungsari, dau \n\n* 2 kamar tidur  \n* 1 Kamar mandi\n* ruang tamu \n* dapur \n* ruang tengah \n* garasi mobil \n* listrik token \n* air sumur \n\ndeket kampus UMM 3 harga terjangkau bisa jalan kaki  \n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?\n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 177,
      "kota": "Malang",
      "latitude": -7.9431889520969925,
      "longitude": 112.60985285868075,
      "harga_sewa": "18000000",
      "label_harga_sewa": "Rp18jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250629204853_18856.jpeg",
      "deskripsi_visual_kontrakan": "Gambar ini menunjukkan sebuah rumah satu lantai yang memiliki tampilan sederhana dan fungsional, dengan beberapa elemen yang memberikan kesan rumah lama atau telah direnovasi.\n\nFasad rumah didominasi oleh warna hijau muda atau tosca pucat pada dindingnya. Bagian depan rumah ditutupi oleh kanopi bergelombang berwarna gelap (kemungkinan seng) yang disangga oleh rangka berwarna hijau terang. Lis atau pinggiran kanopi juga berwarna hijau terang yang sama, memberikan aksen kontras.\n\nDi bawah kanopi, terdapat jendela besar dengan kusen kayu berwarna cokelat yang membentang di sebagian besar lebar rumah. Di samping jendela, terlihat pintu masuk utama yang juga berkusen cokelat, dan seseorang terlihat berdiri di ambang pintu.\n\nArea depan rumah dilengkapi dengan pagar pendek yang terdiri dari tiang-tiang vertikal berwarna hijau terang, dipadukan dengan pilar-pilar tembok berwarna putih keabu-abuan. Pagar ini memisahkan teras dari area jalan atau trotoar yang berubin paving block. Sebuah tanaman berdaun merah gelap tumbuh di luar pagar di sisi kiri.\n\nDi latar belakang, di atas rumah ini, terlihat bagian dari bangunan lain yang lebih tinggi, kemungkinan rumah bertingkat, dengan jemuran pakaian terlihat di balkonnya. Terdapat juga tiang listrik dengan beberapa stiker atau tempelan di dekat pagar. Secara keseluruhan, rumah ini memberikan kesan hunian yang praktis dan berwarna, khas rumah di lingkungan padat.",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah di Jl. Mt.haryono, Dinoyo, Malang.\nDekat kampus UB, UIN, Polinema, UM dan UMM\n\n3 kamar tidur\n1 kamar mandi (Toilet jongkok)\nruang tamu\ntempat jemuran luas\nada parkiran sepeda motor dan pagar\nAkses mobil\n\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?\n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 178,
      "kota": "Malang",
      "latitude": -7.949613779059647,
      "longitude": 112.67788346158281,
      "harga_sewa": "13000000",
      "label_harga_sewa": "Rp13jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250629210704_72372.jpg",
      "deskripsi_visual_kontrakan": "Gambar ini menampilkan sebuah rumah satu lantai yang memiliki desain modern dengan kombinasi warna netral dan aksen cerah.\n\nFasad rumah didominasi oleh warna putih krem dengan atap genteng berwarna gelap yang curam. Di bagian depan, terdapat dinding pembatas rendah berwarna krem dengan aksen abu-abu gelap di sudutnya. Bagian atas dinding ini dilengkapi dengan pagar horizontal berwarna oranye terang yang menjadi daya tarik visual utama.\n\nDi balik pagar oranye, terlihat area teras atau halaman depan kecil. Pintu masuk utama rumah tidak terlihat jelas, tetapi ada jendela yang terlindungi di balik pagar.\n\nDi sisi kanan rumah, terdapat pintu gerbang garasi atau carport berwarna hitam gelap dengan ornamen hijau di bagian bawahnya, memberikan sentuhan kontras. Di samping gerbang ini, terlihat sebagian dari dinding rumah tetangga dengan pintu merah.\n\nLangit biru cerah dengan awan tipis menjadi latar belakang. Beberapa kabel listrik membentang di atas rumah. Di depan pagar oranye, terdapat dua pot tanaman besar berwarna biru tua. Secara keseluruhan, rumah ini memadukan estetika modern dengan aksen warna cerah yang menarik, memberikan kesan segar dan terawat.",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakkan rumah di area Wendit, kec. pakis\ndekat araya dan bandara abdurahman saleh malang\n\n3 Kamar tidur\n1 Kamar mandi (Toilet jongkok)\nDapur\nListrik token 900 watt\nAir sumur ready pompa + tandon\nada parkiran mobil untuk mobil kecil\nAkses mobil\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?\n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 179,
      "kota": "Malang",
      "latitude": -7.912127107984199,
      "longitude": 112.66994321435598,
      "harga_sewa": "10500000",
      "label_harga_sewa": "Rp10,5jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250702003441_61541.jpeg",
      "deskripsi_visual_kontrakan": "Gambar ini menunjukkan sebuah rumah satu lantai yang didominasi oleh warna biru muda, terlihat pada malam hari dengan pencahayaan yang terang dari dalam dan luar rumah.\n\nFasad depan rumah memiliki bentuk atap pelana dengan lis merah marun di bagian tepinya. Di bagian tengah, terdapat area teras atau beranda yang luas dengan pilar-pilar melengkung berwarna biru muda yang menopang atap. Teras ini dikelilingi oleh pagar besi berwarna putih dengan desain silang-silang sederhana, dan di salah satu sudutnya berdiri sebuah tanaman palem dalam pot. Beberapa pot tanaman lain juga berjajar di depan pagar.\n\nJendela dan pintu utama di area teras nampak berwarna terang, kemungkinan putih atau krem, dengan kaca transparan yang memperlihatkan cahaya dari dalam rumah.\n\nDi sisi kanan rumah, terdapat carport atau area parkir yang ditutupi oleh kanopi bergelombang berwarna perak, ditopang oleh tiang-tiang berwarna putih atau terang. Area ini juga memiliki pagar besi putih yang serasi dengan pagar teras, dan terdapat pintu gerbang geser berwarna abu-abu terang.\n\nPencahayaan yang kuat dari lampu-lampu di teras dan area depan rumah menerangi sebagian besar fasad, menciptakan kontras dengan kegelapan malam di sekitarnya. Secara keseluruhan, rumah ini memiliki tampilan yang cerah dan rapi dengan nuansa warna biru yang menonjol.",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah di perumahan Mondoroko, Singosari, Malang\n\ncarport parkiran mobil\n2 kamar tidur\n1 kamar mandi\ndapur\nakses mobil\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?\n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 180,
      "kota": "Malang",
      "latitude": -7.939805164567656,
      "longitude": 112.61955230649149,
      "harga_sewa": "50000000",
      "label_harga_sewa": "Rp50jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250702003953_30966.jpeg",
      "deskripsi_visual_kontrakan": "**Deskripsi Kontrakan**\n\nKontrakan ini tampaknya merupakan sebuah rumah bergaya minimalis tropis, umum ditemukan di Indonesia, dengan dominasi warna netral pada dinding (krem/putih gading) dan sentuhan warna kayu pada pintu dan beberapa perabot. Lantai di sebagian besar area dalam rumah menggunakan keramik berwarna terang, memberikan kesan bersih dan lapang, sementara ada satu ruangan yang menggunakan lantai kayu parket, menambah nuansa hangat.\n\n**Bentuk dan Gaya Rumah:**\n\n* **Fasad:** Rumah memiliki pagar besi hitam di bagian depan, dengan area carport yang cukup luas, dilapisi paving block. Terdapat juga area taman kecil atau teras di samping carport dengan beberapa tanaman pot dan batu pijakan, menciptakan suasana asri. Atap carport sebagian menggunakan material transparan/tembus cahaya.\n* **Ruang Tamu/Keluarga:** Ruangan ini tampak luas dan terbuka, dengan dinding berwarna krem terang dan aksen putih pada lis plafon. Pencahayaan alami cukup baik berkat jendela-jendela tinggi dengan gorden gelap. Ada sebuah lemari/rak TV bergaya modern minimalis yang menjadi fokus utama ruangan. Plafon memiliki desain bertingkat dengan pencahayaan tanam dan lampu gantung.\n* **Kamar Tidur:** Setidaknya ada dua kamar tidur yang terlihat. Salah satu kamar memiliki dinding kombinasi krem dan cokelat muda, dengan ranjang berukuran sedang dan tumpukan kasur lipat. Kamar lainnya juga memiliki ranjang dengan headboard hitam, dan terlihat ada noda/kotoran pada dinding dan kasur yang mungkin perlu diperhatikan. Satu kamar memiliki lantai parket kayu, sementara yang lain menggunakan keramik. Gorden jendela di kamar tidur cenderung berwarna gelap atau netral.\n* **Dapur:** Dapur berdesain minimalis dengan kitchen set atas dan bawah berwarna krem muda, backsplash keramik motif mozaik hijau kecokelatan. Terdapat area konter/bar mini yang memisahkan dapur dengan ruang lain, cocok untuk sarapan atau makan santai.\n* **Kamar Mandi:** Kamar mandi memiliki dinding dan lantai keramik berwarna cokelat muda dengan aksen garis vertikal. Terlihat ada bak mandi atau area shower tanpa sekat, dan peralatan kebersihan dasar.\n* **Ventilasi dan Pencahayaan:** Rumah ini memiliki banyak jendela di berbagai ruangan, menunjukkan ventilasi dan pencahayaan alami yang baik.\n\n**Cocok Diperuntukkan Untuk:**\n\n* **Keluarga Kecil:** Dengan setidaknya dua kamar tidur dan area komunal yang cukup luas, kontrakan ini sangat cocok untuk keluarga kecil (3-4 orang).\n* **Pasangan Muda:** Ruangan yang nyaman dan fungsional dapat menjadi pilihan ideal bagi pasangan yang baru menikah atau memulai hidup bersama.\n* **Karyawan/Profesional:** Jika dekat dengan area perkantoran atau pusat bisnis, kontrakan ini bisa menjadi pilihan menarik bagi karyawan atau profesional yang mencari tempat tinggal yang nyaman dan terjangkau.\n* **Mahasiswa (berbagi):** Dengan adanya beberapa kamar, kontrakan ini juga bisa dipertimbangkan oleh beberapa mahasiswa yang ingin berbagi biaya sewa.\n* **Kontrakan Jangka Panjang:** Dengan fasilitas dasar yang lengkap (dapur, kamar mandi, area ruang tamu/keluarga), kontrakan ini cocok untuk sewa jangka panjang.\n\n**Kelebihan yang Dapat Dipertimbangkan (berdasarkan gambar):**\n\n* **Lokasi Carport:** Area carport yang luas cukup untuk satu mobil dan beberapa motor.\n* **Ruangan Terang dan Terbuka:** Pencahayaan alami yang baik membuat rumah terasa lapang dan hemat energi di siang hari.\n* **Dapur Fungsional:** Dapur sudah dilengkapi dengan kitchen set, memudahkan penghuni untuk memasak.\n* **Desain Minimalis:** Gaya rumah yang netral memudahkan penghuni untuk mendekorasi sesuai selera pribadi.\n* **Area Teras/Taman Kecil:** Memberikan sentuhan hijau dan area relaksasi di luar ruangan.\n\n**Aspek yang Mungkin Perlu Diperhatikan (berdasarkan gambar):**\n\n* **Kondisi Kebersihan/Perawatan:** Beberapa area, seperti dinding kamar tidur dan kasur, terlihat ada noda atau kotoran yang mungkin memerlukan pembersihan atau perbaikan sebelum dihuni.\n* **Furnitur:** Sebagian besar ruangan tampak kosong atau hanya memiliki furnitur dasar (ranjang, lemari TV), sehingga calon penyewa perlu membawa furnitur sendiri.\n* **Keamanan:** Meskipun ada pagar, penting untuk mempertimbangkan sistem keamanan tambahan jika diperlukan.\n\nSecara keseluruhan, kontrakan ini menawarkan hunian yang nyaman dan fungsional dengan desain yang umum dan diterima, menjadikannya pilihan yang solid untuk berbagai profil penyewa di Indonesia.",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah Eksklusif mewah di perumahan Suhat, Jatimulyo, Lowokwaru, Malang City\n\n5 kamar tidur (3 kamar besar dan 2 kamar kecil)\n2 kamar mandi\n2 lantai\nAda carport tempat parkir mobil\nAkses jalan lebar\nRumah modern,bersih, estetik dan nyaman\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?\n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 181,
      "kota": "Malang",
      "latitude": -7.94676983432844,
      "longitude": 112.60983273874544,
      "harga_sewa": "15000000",
      "label_harga_sewa": "Rp15jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250702010950_79226.png",
      "deskripsi_visual_kontrakan": "",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah di jl. Gajayana, lowokwaru, malang\ndekat kampus UB, UIN, UM, Polinema\n\n3 kamar tidur (kasur dan lemari)\nkamar mandi\ndapur\nruang tamu\ndekat jalan raya\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?\n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 182,
      "kota": "Malang",
      "latitude": -7.915544154811693,
      "longitude": 112.5944102363619,
      "harga_sewa": "25000000",
      "label_harga_sewa": "Rp25jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250704080125_38740.jpeg",
      "deskripsi_visual_kontrakan": "Gambar menunjukkan sebuah rumah satu lantai yang memiliki tampilan sederhana dan fungsional. Fasad rumah didominasi oleh warna putih krem dengan aksen atap berwarna gelap di bagian depan.\n\nDi sebelah kiri, terdapat area beranda atau teras yang ditutupi oleh kanopi datar berwarna gelap. Di bawah kanopi ini, terlihat jendela dan pintu dengan kusen berwarna merah tua atau cokelat gelap. Sebuah pagar besi berwarna putih dengan desain sederhana membatasi area halaman depan dari jalan. Di dekat pagar ini, terlihat sebuah tempat sampah berwarna hitam dan ember biru.\n\nDi sebelah kanan, terdapat garasi dengan pintu lipat atau geser berwarna hitam kusam. Di atas garasi, terdapat bagian atap yang sedikit lebih tinggi dengan dinding berwarna krem dan aksen biru muda, kemungkinan sebagai bagian dari desain atap atau cerobong ventilasi.\n\nJalan di depan rumah beraspal dengan trotoar kecil yang berubin. Secara keseluruhan, rumah ini memberikan kesan hunian yang praktis dan kompak, dengan fokus pada fungsi.",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah di belakang UMM 3, Tegalgondo, Kec. Karang Ploso, Kabupaten Malang,\n\nSudah dapat kasur dan lemari\n\n5 kamar tidur\n2 kamar mandi\nRuang tamu\nGarasi mobil, tempat parkir sepeda motor dan pagar besi\n\nAkses mobil. Rumah dipinggir jalan.\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?  \n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 183,
      "kota": "Malang",
      "latitude": -7.95233892729572,
      "longitude": 112.60501471995548,
      "harga_sewa": "36500000",
      "label_harga_sewa": "Rp36,5jt",
      "ketersediaan": "DP",
      "foto_kontrakan": "20250713224154_66582.jpeg",
      "deskripsi_visual_kontrakan": "Berdasarkan video yang diberikan, berikut adalah deskripsi kontrakan ini, termasuk bentuk, gaya, suasana, lingkungan, serta potensi penggunaan dan rekomendasi peruntukan setiap bagiannya:\n\n**Deskripsi Kontrakan:**\n\nKontrakan ini memiliki gaya minimalis modern dengan dominasi warna cerah, seperti krem atau putih gading pada dinding, dan lantai keramik berwarna hijau muda. Bangunan tampak baru atau terawat dengan baik.\n\n**Bentuk dan Gaya:**\n* **Eksterior:** Kontrakan ini memiliki area parkir depan yang cukup luas, mampu menampung mobil atau setidaknya satu motor dengan nyaman, dan sepertinya memiliki kanopi atau atap pelindung. Pintu masuk utama berwarna putih dengan bingkai hitam, dan terdapat jendela besar di bagian depan yang memungkinkan masuknya cahaya alami.\n* **Interior:** Tata letak interior terlihat memanjang dengan koridor utama yang menghubungkan beberapa ruangan. Setiap ruangan tampaknya memiliki pintu dan jendela sendiri, menunjukkan perhatian pada privasi dan pencahayaan. Desain pintu berwarna putih polos dengan aksen garis horizontal, memberikan kesan modern dan bersih. Lantai keramik hijau muda memberikan sentuhan warna yang menyegarkan.\n\n**Suasana dan Lingkungan:**\n* **Suasana dalam kontrakan:** Suasana di dalam kontrakan terasa terang dan lapang berkat dinding berwarna cerah dan jendela yang memadai. Kondisi ruangan terlihat bersih dan kosong, memberikan kesan siap huni dan fleksibel untuk berbagai penataan.\n* **Lingkungan sekitar:** Berdasarkan tampilan awal video, lingkungan sekitar kontrakan terlihat cukup tenang dan residensial, meskipun tidak ada detail spesifik mengenai tetangga atau fasilitas umum di luar area kontrakan. Adanya area parkir depan menunjukkan bahwa akses kendaraan cukup mudah.\n\n**Potensi Penggunaan dan Rekomendasi Peruntukan Setiap Bagian:**\n\nBerikut adalah potensi penggunaan dan rekomendasi peruntukan untuk setiap bagian kontrakan:\n\n1.  **Area Depan/Teras (0:00 - 0:02):**\n    * **Potensi Penggunaan:** Area parkir untuk motor dan mobil, tempat meletakkan tanaman, area tunggu tamu, atau tempat bersantai di luar ruangan.\n    * **Rekomendasi Peruntukan:** Cocok sebagai **area parkir motor dan teras depan untuk hunian**. Jika untuk usaha, bisa menjadi area parkir pelanggan atau tempat display kecil.\n\n2.  **Ruang Tamu/Area Utama (0:03 - 0:08):**\n    * **Potensi Penggunaan:** Ruang tamu, ruang keluarga, ruang kerja, atau area komunal. Ukurannya terlihat cukup fleksibel.\n    * **Rekomendasi Peruntukan:** Ideal sebagai **ruang tamu dan ruang keluarga untuk hunian**. Jika untuk kantor, bisa menjadi area resepsionis atau ruang kerja bersama. Jika toko, bisa jadi area display utama.\n\n3.  **Kamar Tidur 1 (0:09 - 0:14):**\n    * **Potensi Penggunaan:** Kamar tidur utama, kamar anak, atau ruang kerja pribadi. Memiliki jendela yang memberikan pencahayaan alami.\n    * **Rekomendasi Peruntukan:** Sangat cocok sebagai **kamar tidur untuk hunian**. Bisa juga menjadi **ruang kantor pribadi** jika kontrakan dijadikan kantor.\n\n4.  **Kamar Tidur 2 (0:17 - 0:19):**\n    * **Potensi Penggunaan:** Mirip dengan kamar tidur 1, dapat menjadi kamar tidur tambahan atau ruang serbaguna.\n    * **Rekomendasi Peruntukan:** Ideal sebagai **kamar tidur untuk hunian**.\n\n5.  **Kamar Mandi 1 (22:00 - 24:00):**\n    * **Potensi Penggunaan:** Kamar mandi utama. Dilengkapi kloset duduk dan area mandi.\n    * **Rekomendasi Peruntukan:** Jelas sebagai **kamar mandi untuk hunian atau kantor/tempat usaha**.\n\n6.  **Area Dapur/Pantry (0:29 - 0:31):**\n    * **Potensi Penggunaan:** Area memasak, persiapan makanan, atau pantry kecil. Terdapat wastafel dan meja beton.\n    * **Rekomendasi Peruntukan:** Cocok sebagai **dapur kecil atau area pantry untuk hunian**. Jika untuk kantor, bisa menjadi area pantry karyawan. Untuk cafe kecil, mungkin bisa menjadi area bar atau persiapan minuman.\n\n7.  **Kamar Mandi 2 (0:32 - 0:33):**\n    * **Potensi Penggunaan:** Kamar mandi atau toilet tambahan. Tampak lebih sederhana dari kamar mandi pertama.\n    * **Rekomendasi Peruntukan:** Sebagai **kamar mandi/toilet tambahan untuk hunian, kantor, atau tempat usaha**.\n\n8.  **Kamar Tidur 3 dan Seterusnya (0:35 - 0:45, dan bagian lain yang tidak dijelaskan secara spesifik):**\n    * **Potensi Penggunaan:** Kamar tidur tambahan atau ruang kerja individual.\n    * **Rekomendasi Peruntukan:** Sangat cocok sebagai **kamar tidur untuk hunian** atau **ruang kantor pribadi**.\n\n**Rekomendasi Peruntukan Keseluruhan:**\n\nBerdasarkan deskripsi dan potensi penggunaan setiap bagian, kontrakan ini **lebih cocok sebagai hunian**, namun memiliki potensi besar untuk menjadi **kantor atau kombinasi keduanya (hunian dengan area kerja terpisah)**.\n\n**Alasan Kuat yang Mendukung Rekomendasi:**\n\n* **Untuk Hunian (Sangat Cocok):**\n    * **Desain dan Tata Letak:** Adanya beberapa kamar tidur terpisah, kamar mandi yang memadai, dan area dapur menunjukkan bahwa kontrakan ini dirancang untuk kehidupan sehari-hari.\n    * **Pencahayaan Alami:** Jendela di setiap kamar dan di depan kontrakan memastikan sirkulasi udara dan pencahayaan alami yang baik, penting untuk kenyamanan hunian.\n    * **Area Parkir:** Area depan yang cukup luas sangat berguna untuk parkir kendaraan pribadi penghuni.\n    * **Suasana:** Desain yang bersih, terang, dan minimalis menciptakan suasana yang nyaman untuk tinggal.\n\n* **Untuk Kantor (Potensi Kuat):**\n    * **Tata Letak Ruangan Terpisah:** Adanya beberapa \"kamar\" yang terpisah sangat ideal untuk dijadikan ruang kerja individual, ruang rapat kecil, atau departemen yang berbeda dalam sebuah kantor.\n    * **Area Depan:** Dapat difungsikan sebagai area resepsionis atau ruang tunggu klien.\n    * **Dapur/Pantry:** Berguna sebagai area pantry untuk karyawan.\n    * **Kamar Mandi:** Fasilitas yang esensial untuk kantor.\n    * **Gaya Minimalis:** Desain yang bersih dan profesional cocok untuk lingkungan kerja. Kontrakan ini akan cocok untuk startup, kantor kecil, atau shared office.\n\n* **Kombinasi (Hunian dengan Kantor di Rumah):**\n    * Sangat memungkinkan untuk menggunakan satu atau dua kamar sebagai ruang kerja/kantor pribadi, sementara sisa ruangan tetap berfungsi sebagai area hunian. Ini akan cocok untuk profesional yang bekerja dari rumah.\n\n* **Gudang (Kurang Cocok):** Meskipun memiliki beberapa ruangan, desainnya yang terbuka dengan jendela dan pintu yang banyak serta fokus pada pencahayaan alami membuatnya kurang ideal dan tidak efisien sebagai gudang penyimpanan barang.\n\n* **Tempat Usaha (Toko/Cafe - Kurang Optimal, Kecuali Spesifik):**\n    * **Toko:** Mungkin bisa untuk toko kecil dengan area display terbatas. Namun, tata letak koridor yang memanjang mungkin kurang efisien untuk aliran pelanggan seperti toko ritel umumnya.\n    * **Cafe:** Akan memerlukan renovasi signifikan untuk memenuhi kebutuhan dapur komersial, area makan, dan toilet yang memadai untuk umum. Area depan bisa jadi tempat duduk outdoor, tetapi interiornya tidak langsung mendukung layout cafe. Kecuali jika ini adalah cafe sangat kecil dengan konsep spesifik (misalnya, *takeaway* atau *coffee bar*).\n\n**Kesimpulan Rekomendasi Utama:**\n\nKontrakan ini paling direkomendasikan sebagai **hunian** karena desain dan fasilitasnya sangat mendukung. Namun, karena tata letak ruangannya yang terpisah dan bersih, ini juga merupakan pilihan yang sangat kuat untuk **kantor kecil** atau **tempat kerja bersama (co-working space mini)**. Fleksibilitas ruangannya memungkinkan adaptasi yang mudah untuk kedua tujuan tersebut.",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan di perumahan Sigura-gura, Dinoyo, Lowokwaru, Malang City\n\n5 kamar tidur (luas dan bersih)\n2 kamar mandi (WC duduk)\nRuang tamu\nDapur\nAda parkiran mobil dan sepeda motor\nRumah baru direnovasi\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?\n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 184,
      "kota": "Malang",
      "latitude": -7.952612678586193,
      "longitude": 112.60370456042592,
      "harga_sewa": "48000000",
      "label_harga_sewa": "Rp48jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250713235523_79425.jpeg",
      "deskripsi_visual_kontrakan": "Berikut adalah deskripsi kontrakan berdasarkan gambar yang diberikan, untuk membantu Anda dan tim membandingkannya dengan kontrakan lain:\n\n**Deskripsi Kontrakan**\n\n**Bentuk dan Gaya Kontrakan:**\nKontrakan ini memiliki gaya arsitektur sederhana dan fungsional, dengan satu lantai. Fasad depan menunjukkan area parkir/teras yang cukup luas dengan kanopi dan pagar besi, serta sebuah gerbang. Dinding eksterior tampak dicat dengan warna netral seperti krem atau putih, dikombinasikan dengan abu-abu gelap pada bagian pagar tembok. Jendela dan pintu utama didominasi warna gelap (hitam) dengan beberapa aksen kuning pada ventilasi atau bingkai jendela kecil di bagian depan. Lantai teras memiliki pola ubin batu alam atau keramik dengan motif abstrak coklat-abu-abu, yang juga terlihat di sebagian area dalam. Interior ruangan memiliki lantai keramik berwarna terang (putih/krem), memberikan kesan bersih dan lapang. Kamar mandi memiliki dinding dan lantai keramik, dengan kloset duduk dan bak mandi permanen (bak penampungan air bergaya Indonesia).\n\n**Suasana dan Lingkungan:**\nLingkungan kontrakan terlihat seperti area perumahan atau permukiman padat. Terdapat rumah-rumah lain di sekitarnya, beberapa di antaranya terlihat seperti toko atau tempat usaha kecil (seperti yang terlihat di sebelah kanan kontrakan dengan rolling door). Jalan di depan kontrakan tampak beraspal atau menggunakan paving block. Adanya pohon di area teras memberikan sedikit nuansa hijau dan teduh. Suasana keseluruhan terlihat cukup ramai namun tidak bising, dengan kendaraan roda dua terparkir di teras.\n\n**Potensi Penggunaan dan Rekomendasi Peruntukan Setiap Bagian:**\n\n* **Area Teras/Parkir Depan:**\n    * **Potensi Penggunaan:** Sangat cocok untuk parkir kendaraan roda dua atau satu mobil kecil. Bisa juga dimanfaatkan sebagai area duduk santai di luar ruangan atau tempat meletakkan tanaman hias.\n    * **Rekomendasi Peruntukan:** **Kombinasi Hunian & Usaha Ringan (Jika Diperlukan):** Ideal sebagai tempat parkir dan area transisi sebelum masuk ke dalam rumah. Jika digunakan untuk usaha, area ini bisa menjadi etalase kecil atau area tunggu.\n\n* **Ruang Utama/Depan (Area dengan Lantai Ubin Motif):**\n    * **Potensi Penggunaan:** Ruang tamu, ruang keluarga, atau area kerja/belajar. Ukurannya tampak cukup memadai untuk menampung beberapa perabot standar.\n    * **Rekomendasi Peruntukan:** **Kombinasi Hunian & Usaha (Ruang Tunggu/Kantor Depan):** Fleksibel untuk dijadikan ruang tamu di hunian, atau sebagai area penerimaan tamu/pelanggan di sebuah kantor kecil atau toko. Adanya jendela besar dan pintu ganda memberikan pencahayaan yang baik.\n\n* **Kamar Tidur (Area dengan Lantai Keramik Terang):**\n    * **Potensi Penggunaan:** Jelas sebagai kamar tidur utama. Sudah dilengkapi dengan kasur dan lemari pakaian.\n    * **Rekomendasi Peruntukan:** **Hunian (Kamar Tidur):** Sangat cocok untuk tujuan ini, menyediakan privasi dan ruang istirahat yang nyaman.\n\n* **Kamar Mandi:**\n    * **Potensi Penggunaan:** Fungsi utama sebagai fasilitas sanitasi. Terdapat kloset duduk, bak mandi permanen, dan kran air. Kebersihan dan kondisi saat ini perlu diperhatikan (terlihat ada noda/lumut di dinding keramik).\n    * **Rekomendasi Peruntukan:** **Hunian/Kantor (Fasilitas Sanitasi Standar):** Wajib ada untuk hunian. Untuk kantor atau tempat usaha, ini adalah fasilitas dasar yang harus tersedia untuk karyawan dan/atau pelanggan.\n\n* **Area Lainnya (Lorong/Ruang Antara):**\n    * **Potensi Penggunaan:** Kemungkinan sebagai area makan, dapur kecil (jika ada instalasi air dan gas), atau area transisi antar ruangan.\n    * **Rekomendasi Peruntukan:** **Hunian (Area Fungsional Tambahan):** Berguna sebagai area makan atau ruang serbaguna, mendukung fungsi hunian.\n\n**Rekomendasi Peruntukan Keseluruhan Kontrakan:**\n\nBerdasarkan analisis gambar, kontrakan ini sangat direkomendasikan untuk **Hunian dengan Potensi Usaha Kecil/Kantor Sederhana (Kombinasi)**.\n\n**Alasan Kuat:**\n\n1.  **Fasilitas Dasar Hunian Terpenuhi:** Kontrakan ini jelas memiliki ruang tidur, kamar mandi, dan area umum yang memadai untuk tempat tinggal individu atau keluarga kecil.\n2.  **Akses dan Lokasi Strategis (Potensi Usaha):** Lokasi di pemukiman padat dan keberadaan toko di sebelahnya menunjukkan bahwa area ini memiliki potensi lalu lintas orang yang cukup. Teras depan yang luas juga mendukung kegiatan usaha kecil yang tidak membutuhkan banyak ruang.\n3.  **Fleksibilitas Ruang Depan:** Ruang depan dengan lantai ubin motif dapat dengan mudah diadaptasi menjadi area resepsionis, ruang tunggu, atau bahkan etalase kecil jika disewakan untuk kantor atau toko.\n4.  **Skala dan Tata Letak:** Ukurannya yang tidak terlalu besar cocok untuk kantor perwakilan kecil, startup, atau usaha rumahan (home office) yang tidak memerlukan banyak karyawan atau stok barang.\n5.  **Bukan Gudang Murni:** Meskipun ada ruang kosong, tata letak dan fasilitasnya (kamar mandi, kamar tidur) tidak optimal untuk dijadikan gudang murni yang hanya menyimpan barang dalam jumlah besar. Kelembaban dan sirkulasi udara mungkin perlu diperhatikan jika memang ada niat untuk menyimpan barang-barang sensitif.\n6.  **Kurang Cocok untuk Cafe Besar:** Meskipun ada potensi usaha, ukurannya mungkin terlalu kecil untuk sebuah kafe besar yang membutuhkan area dapur luas, banyak meja, dan fasilitas pelanggan yang kompleks. Lebih cocok untuk kafe take-away atau kedai kopi sederhana.\n\n**Kesimpulan:**\n\nKontrakan ini adalah pilihan yang sangat baik sebagai tempat tinggal (hunian) bagi individu atau keluarga kecil. Namun, dengan sedikit modifikasi atau penyesuaian, kontrakan ini juga memiliki potensi besar untuk difungsikan sebagai kantor kecil, studio, atau toko/usaha rumahan yang tidak memerlukan ruang besar, terutama karena lokasinya yang tampaknya berada di area yang cukup aktif.",
      "deskripsi_spesifikasi_kontrakan": "[Ready awal agustus 2025]\n\nDikontrakan rumah di perumahan Sigura-gura, Dinoyo, Lowokwaru, Malang City\n\n6 kamar tidur\n2 kamar mandi (WC duduk)\nAda parkiran mobil atau sepeda motor\nFull perabot ada kasur dan lemari perkamar\n\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?  \n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 1
    },
    {
      "nomer": 185,
      "kota": "Malang",
      "latitude": -7.9520626875666744,
      "longitude": 112.60339726717771,
      "harga_sewa": "31000000",
      "label_harga_sewa": "Rp31jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250714033218_92970.jpeg",
      "deskripsi_visual_kontrakan": "Berdasarkan video dan gambar yang Anda berikan, berikut adalah deskripsi kontrakan tersebut untuk perbandingan:\n\n**Deskripsi Kontrakan**\n\n**1. Bentuk dan Gaya Kontrakan:**\nKontrakan ini adalah sebuah rumah satu lantai dengan fasad berwarna hijau muda, yang memberikan kesan segar dan modern. Atapnya berbentuk pelana dengan genteng berwarna gelap. Di bagian depan terdapat pagar besi hitam yang dikombinasikan dengan tembok batu bata berwarna krem, memberikan kesan kokoh dan minimalis. Terdapat juga kanopi di area carport. Di bagian dalam, lantai menggunakan ubin keramik berwarna krem atau putih gading yang bersih, sementara dindingnya dicat putih polos, menciptakan kesan luas dan terang.\n\n**2. Suasana dan Lingkungan:**\nSuasana di dalam kontrakan terasa tenang dan bersih karena dinding yang polos dan lantai yang rapi. Area depan rumah yang sedikit berumput sintetis hijau dan adanya tanaman hias memberikan sentuhan asri dan nyaman. Lingkungan di luar kontrakan tampak sebagai area perumahan dengan rumah-rumah berdekatan, mengindikasikan lingkungan yang cukup padat namun teratur.\n\n**3. Potensi Penggunaan dan Rekomendasi Peruntukan:**\n\n* **Area Depan/Carport:**\n    * **Potensi Penggunaan:** Cocok untuk parkir kendaraan (mobil/motor) dan juga dapat dimanfaatkan sebagai area hijau kecil dengan pot tanaman atau tempat duduk santai.\n    * **Rekomendasi Peruntukan:** **Hunian**. Area carport ini esensial untuk fungsi hunian, memungkinkan penghuni memarkir kendaraan dengan aman.\n\n* **Ruang Tamu/Utama (Area Pertama Setelah Pintu Masuk):**\n    * **Potensi Penggunaan:** Ruang serbaguna yang dapat difungsikan sebagai ruang tamu, ruang keluarga, atau ruang makan. Ukurannya yang cukup luas memungkinkan fleksibilitas penataan.\n    * **Rekomendasi Peruntukan:** **Hunian**. Ini adalah inti dari fungsi hunian, sebagai tempat berkumpul keluarga atau menerima tamu.\n\n* **Kamar Tidur:**\n    * **Potensi Penggunaan:** Khusus untuk tidur dan istirahat.\n    * **Rekomendasi Peruntukan:** **Hunian**. Fungsi utama kamar tidur adalah untuk privasi dan istirahat bagi penghuni.\n\n* **Area Dapur/Belakang (Terlihat Ada Area Kosong dengan Lantai Paving Block dan Pagar Belakang):**\n    * **Potensi Penggunaan:** Area ini sangat fleksibel. Bisa menjadi dapur terbuka/semi-terbuka, area cuci jemur, atau taman belakang kecil. Adanya paving block membuatnya cocok untuk aktivitas yang berhubungan dengan air.\n    * **Rekomendasi Peruntukan:** **Kombinasi (Hunian dengan Potensi Usaha Kecil)**. Jika untuk hunian, ini adalah area servis penting. Namun, jika ada ide untuk usaha kecil yang membutuhkan area terbuka atau penyimpanan, area ini bisa dimanfaatkan. Misalnya, untuk usaha katering skala kecil atau laundry rumahan.\n\n* **Kamar Mandi:**\n    * **Potensi Penggunaan:** Kebersihan pribadi.\n    * **Rekomendasi Peruntukan:** **Hunian**. Penting untuk kebutuhan sanitasi penghuni.\n\n**Rekomendasi Keseluruhan Peruntukan:**\n\nBerdasarkan deskripsi di atas, kontrakan ini **sangat direkomendasikan untuk hunian (tinggal)**.\n\n**Alasan Kuat yang Mendukung Rekomendasi Hunian:**\n\n1.  **Desain dan Tata Letak Umum:** Tata letak standar rumah tinggal dengan ruang tamu, kamar tidur, dan area belakang yang multifungsi.\n2.  **Suasana Lingkungan:** Berada di area perumahan yang menunjukkan bahwa lingkungan sekitarnya mendukung kehidupan bermukim.\n3.  **Kondisi Interior:** Dinding putih bersih dan lantai keramik yang terawat memberikan kesan siap huni dan nyaman.\n4.  **Fasilitas Dasar:** Adanya area carport menunjukkan kemudahan akses dan parkir bagi penghuni.\n\n**Pertimbangan Tambahan untuk Potensi Lain:**\n\n* **Tempat Usaha (Kantor/Toko/Cafe):** Meskipun secara internal bersih dan rapi, lokasinya di dalam perumahan mungkin kurang strategis untuk toko atau kafe yang mengandalkan lalu lintas pejalan kaki yang tinggi. Untuk kantor, bisa saja, terutama untuk startup kecil atau kantor cabang yang tidak membutuhkan eksposur besar. Namun, modifikasi signifikan mungkin diperlukan (misalnya mengubah ruang tamu menjadi area kerja yang lebih formal).\n* **Gudang:** Sangat tidak disarankan. Kondisi kontrakan yang bersih dan terawat akan menjadi tidak efisien jika hanya digunakan sebagai gudang. Selain itu, ada area yang lebih cocok dan murah untuk fungsi gudang.\n\n**Kesimpulan:**\n\nKontrakan ini paling optimal dan efisien jika digunakan sebagai **hunian**. Desain, fasilitas, dan lingkungannya mendukung penuh fungsi ini, menawarkan kenyamanan dan kepraktisan bagi penghuninya.",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan di perumahan Sigura-gura, Dinoyo, Lowokwaru, Malang City\n\n2 kamar tidur\n1 kamar mandi (WC duduk)\nAda lahan luas di belakang rumah. Bisa untuk jemur baju maupun berkebun\nAda carport parkir mobil\nada tempat parkir sepeda motor\nAkses jalan luas\n\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?  \n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 186,
      "kota": "Malang",
      "latitude": -7.95173307356178,
      "longitude": 112.6025327994298,
      "harga_sewa": "33000000",
      "label_harga_sewa": "Rp33jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250714065741_41627.jpeg",
      "deskripsi_visual_kontrakan": "Berikut adalah deskripsi kontrakan berdasarkan gambar yang diberikan, untuk membantu perbandingan dengan properti lain:\n\n**Deskripsi Kontrakan**\n\n**Bentuk dan Gaya:**\nKontrakan ini memiliki gaya minimalis modern dengan dominasi warna putih atau krem pada dinding dan lantai keramik berwarna terang (abu-abu muda atau krem). Bangunan tampak berdiri sendiri, kemungkinan rumah tapak atau bagian dari klaster. Fasade depan terlihat sederhana namun rapi dengan pagar besi berwarna putih. Jendela-jendela berukuran sedang memastikan pencahayaan alami yang cukup. Secara keseluruhan, desainnya fungsional dan bersih, dengan pencahayaan yang cukup di siang hari.\n\n**Suasana dan Lingkungan:**\nSuasana di dalam kontrakan terkesan tenang dan lapang karena minimnya perabotan dan warna dinding yang cerah. Langit-langit yang tinggi (terutama di area keluarga/ruang tengah) memberikan kesan luas dan lega. Lingkungan di luar rumah terlihat seperti perumahan residensial, ditunjukkan oleh keberadaan rumah tetangga dengan desain serupa dan keberadaan pohon di depan properti yang memberikan nuansa asri. Ada area parkir yang cukup untuk satu mobil di bagian depan, yang menunjukkan karakteristik lingkungan perumahan yang teratur.\n\n**Potensi Penggunaan dan Rekomendasi Peruntukan Setiap Bagian:**\n\n* **R. Keluarga (Ruang Keluarga):**\n    * **Potensi Penggunaan:** Ruang ini sangat luas dan lapang, cocok sebagai area komunal utama. Dapat berfungsi sebagai ruang tamu, ruang keluarga, atau area serbaguna. Ada beberapa pintu yang mengarah ke bagian lain rumah, menunjukkan fungsi sebagai koridor atau area transisi.\n    * **Rekomendasi Peruntukan:** Ideal untuk **hunian** sebagai ruang keluarga/ruang tamu utama. Fleksibel untuk menampung berbagai aktivitas keluarga. Bisa juga dimanfaatkan sebagai ruang penerima tamu untuk **kantor skala kecil** atau **tempat usaha yang membutuhkan area tunggu/display luas**.\n\n* **R. Kamar Tidur Utama:**\n    * **Potensi Penggunaan:** Kamar tidur utama yang cukup luas dengan jendela menghadap ke luar, memungkinkan sirkulasi udara dan cahaya alami yang baik. Ada bekas tempelan di dinding yang menunjukkan pernah ditempati.\n    * **Rekomendasi Peruntukan:** Sangat cocok untuk **hunian** sebagai kamar tidur utama. Untuk **kantor**, bisa menjadi ruang direktur atau ruang kerja tim kecil.\n\n* **R. Kamar Tidur Anak:**\n    * **Potensi Penggunaan:** Kamar tidur dengan ukuran lebih kecil dari kamar utama, dilengkapi jendela dan dua poster belajar (angka dan alfabet) yang menandakan peruntukan sebelumnya.\n    * **Rekomendasi Peruntukan:** Sesuai untuk **hunian** sebagai kamar tidur anak atau kamar tidur tambahan. Untuk **kantor/usaha**, bisa menjadi ruang kerja individual, ruang arsip, atau gudang kecil untuk barang ringan.\n\n* **R. Kamar Mandi:**\n    * **Potensi Penggunaan:** Kamar mandi standar dengan kloset duduk dan area keran air, dilapisi keramik dinding motif garis. Tampak bersih dan fungsional.\n    * **Rekomendasi Peruntukan:** Esensial untuk **hunian** maupun **tempat usaha (kantor/toko/cafe)** sebagai fasilitas sanitasi.\n\n* **R. Dapur 1, Dapur 2 di Belakang:**\n    * **Potensi Penggunaan:** Terdapat area dapur dengan wastafel dan meja konter sederhana. Keterangan \"Dapur 2 di Belakang\" mengindikasikan adanya dua area dapur, yang pertama ini kemungkinan dapur bersih atau area persiapan, dan dapur kedua di belakang bisa jadi dapur kotor atau area servis.\n    * **Rekomendasi Peruntukan:** Untuk **hunian**, sangat berfungsi sebagai dapur utama. Untuk **cafe/resto skala kecil**, area ini bisa menjadi pantry atau area persiapan minuman, dengan potensi dapur kedua di belakang untuk memasak. Untuk **kantor/toko**, dapat berfungsi sebagai pantry karyawan.\n\n**Rekomendasi Peruntukan Keseluruhan:**\n\nBerdasarkan deskripsi di atas, kontrakan ini paling cocok untuk **hunian** dan memiliki potensi kuat untuk **kantor skala kecil** atau **toko/usaha jasa** yang tidak membutuhkan banyak renovasi struktural.\n\n* **Hunian:** Ini adalah peruntukan paling alami dan cocok. Desain rumah, jumlah kamar, area keluarga yang luas, dan fasilitas dapur-kamar mandi sangat mendukung fungsi hunian untuk keluarga. Lingkungan yang tampak tenang juga mendukung suasana tempat tinggal.\n\n* **Kantor Skala Kecil:** Kontrakan ini sangat berpotensi sebagai kantor. Ruang keluarga yang luas dapat menjadi area resepsionis atau ruang tunggu/pertemuan. Kamar tidur bisa diubah menjadi ruang kerja individu atau ruang rapat kecil. Adanya dua area dapur bisa dimanfaatkan sebagai pantry dan gudang penyimpanan. Lokasi di perumahan bisa menawarkan suasana kerja yang lebih tenang dibandingkan di pusat bisnis yang ramai.\n\n* **Toko/Usaha Jasa (misalnya: butik, salon kecil, studio desain, klinik mini):** Fasad yang rapi dan area keluarga yang luas di depan bisa dimanfaatkan sebagai area display produk atau ruang pelayanan pelanggan. Kamar-kamar bisa menjadi ruang ganti, ruang perawatan, atau kantor administrasi. Namun, peruntukan ini sangat bergantung pada regulasi zonasi di area tersebut (apakah perumahan diizinkan untuk kegiatan komersial) dan aksesibilitas untuk pelanggan.\n\n* **Gudang:** Meskipun memiliki area yang luas, peruntukan sebagai gudang saja kurang efisien mengingat adanya fasilitas kamar mandi, dapur, dan kamar tidur yang lebih cocok untuk fungsi hunian atau komersial yang membutuhkan fasilitas tersebut. Kecuali jika barang yang disimpan adalah barang bersih dan membutuhkan lingkungan yang terawat (misalnya, gudang arsip atau produk fashion).\n\n**Alasan Kuat Mendukung Rekomendasi:**\n\n* **Fleksibilitas Ruang:** Tata letak ruang yang terbuka di area keluarga memberikan fleksibilitas tinggi untuk berbagai penataan.\n* **Pencahayaan & Sirkulasi:** Jendela-jendela yang memadai menjamin pencahayaan alami dan sirkulasi udara yang baik, penting untuk kenyamanan hunian maupun lingkungan kerja.\n* **Fasilitas Lengkap:** Keberadaan kamar tidur, kamar mandi, dan area dapur yang fungsional membuatnya siap huni atau siap pakai dengan sedikit modifikasi.\n* **Lingkungan Residensial:** Lingkungan perumahan menawarkan ketenangan yang cocok untuk hunian dan beberapa jenis usaha yang tidak membutuhkan lalu lintas pejalan kaki yang tinggi.\n\nDengan deskripsi ini, Anda dan tim dapat lebih mudah membandingkan kontrakan ini dengan properti lain berdasarkan kebutuhan spesifik Anda.",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah di perumahan Sigura - Gura, Karangbesuki, Sukun, Malang City\n\n2 kamar tidur\n1 kamar mandi\n2 dapur\nRuang tamu\nRuang Keluarga\nRuang jemuran\nCarport parkiran mobil\nparkiran sepeda motor\nListrik 1300 Watt\nAir PDAM\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?  \n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 187,
      "kota": "Malang",
      "latitude": -7.937042922531271,
      "longitude": 112.60157068624935,
      "harga_sewa": "23000000",
      "label_harga_sewa": "Rp23jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250715081216_55092.jpg",
      "deskripsi_visual_kontrakan": "## Deskripsi Kontrakan\n\nKontrakan ini adalah bangunan satu lantai dengan **gaya arsitektur tradisional** yang sederhana, khas rumah di Indonesia. Fasadnya didominasi warna **kuning muda** dengan beberapa aksen biru keabu-abuan pada tiang dan bagian atas dinding. Terdapat **teras depan** yang cukup luas, ditutupi atap dan ditopang dua pilar kayu besar. Lantai teras dan area parkir depannya berupa **semen kasar**, menunjukkan kesan fungsional dan minim perawatan.\n\nPintu masuk utama terbuat dari **kayu cokelat gelap** dengan desain panel vertikal, diapit oleh dua jendela kaca besar berbingkai kayu yang serasi. Di sisi kanan terdapat pagar besi vertikal berwarna hitam, yang kemungkinan membatasi area kontrakan dengan properti sebelahnya atau jalan. Sebuah **tiang beton kecil** dengan hiasan geometris hitam putih juga terlihat di dekat pagar, berfungsi sebagai pembatas atau penanda.\n\nSuasana di sekitar kontrakan terkesan **ramai dan dinamis**, mengingat adanya **tempat usaha makanan** (Mendoan Mania) di sisi kiri bangunan. Spanduk besar dengan gambar makanan dan daftar menu menunjukkan bahwa area ini memiliki aktivitas komersial. Kabel listrik terlihat menjuntai di atas, umum ditemukan di permukiman padat di Indonesia. Lingkungannya tampak seperti **kawasan perkotaan atau semi-perkotaan** dengan akses langsung ke jalan.\n\n---\n\n## Potensi Penggunaan dan Rekomendasi Peruntukan\n\n### Area Depan (Teras dan Halaman Parkir)\n\n* **Potensi Penggunaan:** Area ini sangat ideal untuk **parkir kendaraan** (mobil atau motor) karena permukaannya yang rata dan keras. Teras yang tertutup juga bisa dimanfaatkan sebagai **area tunggu** bagi pelanggan jika digunakan untuk usaha, atau **ruang santai** outdoor jika untuk hunian.\n* **Rekomendasi Peruntukan:**\n    * **Tempat Usaha (Toko/Kafe kecil/Kantor):** Area ini sangat cocok untuk **display produk** atau penempatan **meja makan outdoor** jika diubah menjadi kafe. Keberadaan tempat makan di sebelahnya menunjukkan potensi traffic pengunjung. 🏢\n    * **Hunian:** Sebagai **teras untuk bersantai** atau menaruh tanaman, serta area parkir pribadi.\n\n---\n\n### Bagian Dalam Bangunan (Estimasi)\n\nMeskipun tidak terlihat bagian dalamnya, berdasarkan eksteriornya, dapat diasumsikan tata letaknya fungsional.\n\n* **Potensi Penggunaan:**\n    * **Ruang utama** yang luas bisa dibagi menjadi beberapa area fungsional.\n    * **Kamar-kamar** dapat berfungsi sebagai kamar tidur atau ruang kerja.\n    * **Dapur dan kamar mandi** (asumsi ada) untuk kebutuhan dasar.\n* **Rekomendasi Peruntukan:**\n    * **Kombinasi Hunian dan Tempat Usaha:** Ini adalah **rekomendasi paling kuat** untuk kontrakan ini.\n        * **Alasan:** Lokasinya yang strategis di pinggir jalan dan berdekatan dengan tempat usaha lain membuat bangunan ini sangat berpotensi untuk **usaha komersial kecil hingga menengah** (misalnya, toko kelontong, butik kecil, kantor jasa, atau kafe/warung makan sederhana yang bisa memanfaatkan area teras). Di saat yang sama, bagian belakang atau area terpisah di dalamnya dapat digunakan sebagai **tempat tinggal** bagi pemilik atau karyawan.\n        * Keberadaan tempat makan Mendoan Mania di sebelahnya bisa menjadi **sumber traffic** yang menguntungkan bagi usaha baru. ✨\n    * **Tempat Usaha Sepenuhnya (Kantor/Toko/Kafe):** Jika pemilik ingin memaksimalkan potensi komersialnya, seluruh bangunan bisa dialihfungsikan menjadi tempat usaha, dengan sedikit renovasi internal untuk menyesuaikan tata letak.\n    * **Hunian:** Kurang optimal dibandingkan potensi komersialnya, namun tetap bisa berfungsi sebagai hunian keluarga sederhana.\n    * **Gudang:** Meskipun memungkinkan, ukurannya mungkin terlalu kecil dan lokasinya terlalu strategis untuk hanya dijadikan gudang.\n\n---",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah di Tlogomas, Kec. Lowokwaru, Kota Malang\n4 kamar tidur\n1 kamar mandi\nAkses Mobil\nListrik 900watt\nAir sumur dan sanyo\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?  \n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 188,
      "kota": "Malang",
      "latitude": -7.888081432380149,
      "longitude": 112.66625511828506,
      "harga_sewa": "12000000",
      "label_harga_sewa": "Rp12jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250719232921_30715.jpeg",
      "deskripsi_visual_kontrakan": "Kontrakan ini adalah sebuah rumah satu lantai bergaya minimalis modern dengan dominasi warna **putih** pada dinding eksterior dan atap berwarna **merah maroon** atau coklat kemerahan. Bagian depan rumah dilengkapi dengan **pagar besi tempa berwarna hitam** dengan desain klasik yang cukup tinggi, memberikan kesan aman dan privat. Terdapat **gerbang ganda** yang juga terbuat dari besi tempa hitam untuk akses masuk kendaraan dan pejalan kaki.\n\nDi depan rumah, terdapat area paving block yang bisa difungsikan sebagai **carport** atau teras. Sebuah **pohon kecil** tumbuh di area depan rumah, memberikan sentuhan hijau dan keteduhan. Jendela-jendela rumah tampak tinggi dan berbentuk vertikal, dengan **kusen atau bingkai berwarna hitam** yang serasi dengan pagar, menciptakan kontras yang menarik dengan dinding putih.\n\n### Suasana dan Lingkungan\n\nBerdasarkan gambar, suasana di sekitar kontrakan terkesan **tenang dan cukup terawat**. Tidak terlihat keramaian yang berlebihan, mengindikasikan lingkungan yang lebih cenderung **residensial** atau area perumahan. Jalan di depan kontrakan terlihat beraspal atau beton, menunjukkan aksesibilitas yang baik. Kehadiran pohon di depan rumah dan langit yang cerah mengesankan suasana yang **nyaman dan asri**. Lingkungan ini cocok bagi mereka yang mencari ketenangan setelah beraktivitas.\n\n---\n\n## Potensi Penggunaan dan Rekomendasi Peruntukan\n\n### Potensi Penggunaan\n\n* **Area Depan (Pagar dan Carport):** Area ini sangat cocok sebagai **tempat parkir** untuk satu atau dua kendaraan roda empat, atau beberapa sepeda motor. Bagian teras yang lebih luas dapat dimanfaatkan untuk **menempatkan tanaman hias** atau area duduk santai. Pagar tinggi memberikan **keamanan** dan **privasi** tambahan.\n* **Ruang Utama:** Mengingat tampilannya sebagai rumah tinggal, ruang utama kemungkinan besar terdiri dari **ruang tamu, ruang keluarga, dan kamar tidur**. Area ini fleksibel dan dapat diatur sesuai kebutuhan penghuni, baik sebagai ruang istirahat, belajar, atau berkumpul.\n* **Dapur dan Kamar Mandi:** Meskipun tidak terlihat langsung, sebagai kontrakan, pastinya terdapat fasilitas dasar seperti dapur dan kamar mandi. Dapur dapat digunakan untuk **memasak harian**, sementara kamar mandi untuk **keperluan sanitasi**.\n\n---\n\n### Rekomendasi Peruntukan\n\nBerdasarkan bentuk, gaya, dan suasana lingkungannya, kontrakan ini **sangat direkomendasikan untuk hunian**.\n\n#### Alasan Kuat:\n\n1.  **Desain Residensi:** Desain eksterior dengan pagar tinggi, carport, dan jendela-jendela vertikal sangat mencerminkan **rumah tinggal keluarga**. Gaya minimalis modern memberikan kesan nyaman dan fungsionalitas yang ideal untuk kehidupan sehari-hari.\n2.  **Lingkungan Tenang:** Suasana lingkungan yang cenderung sepi dan tidak terlalu ramai sangat mendukung fungsi sebagai **tempat istirahat dan berkumpul keluarga**. Ini tidak cocok untuk jenis usaha yang membutuhkan visibilitas tinggi dan lalu lintas pelanggan yang konstan.\n3.  **Keamanan dan Privasi:** Pagar besi tempa yang kokoh dan tinggi menawarkan **tingkat keamanan dan privasi yang baik**, fitur penting untuk sebuah hunian.\n4.  **Minimnya Ruang Komersial:** Tidak terlihat adanya etalase atau area terbuka yang secara spesifik dirancang untuk aktivitas komersial seperti toko atau kafe. Bentuk bangunan lebih tertutup dan fokus pada fungsi internal rumah.\n5.  **Potensi Gudang Terbatas:** Meskipun bisa saja sebagian ruangan dialihfungsikan sebagai gudang kecil, bangunan ini terlalu bagus dan terawat untuk dijadikan gudang utama. Biaya sewa juga kemungkinan akan lebih tinggi dibandingkan gudang biasa.\n6.  **Kurang Ideal untuk Kantor/Toko/Kafe:**\n    * **Kantor:** Bisa saja digunakan sebagai kantor skala kecil yang tidak membutuhkan interaksi langsung dengan klien dalam jumlah besar, seperti kantor *start-up* atau *back office*. Namun, lokasi di lingkungan residensial mungkin kurang strategis untuk kantor yang membutuhkan aksesibilitas tinggi.\n    * **Toko/Kafe:** Sama sekali tidak cocok. Tidak ada area *display* yang memadai, dan lingkungan yang tenang tidak akan menarik banyak pelanggan yang mencari tempat usaha.\n\nSecara keseluruhan, kontrakan ini paling optimal untuk **hunian keluarga kecil atau individu** yang mencari tempat tinggal nyaman, aman, dan tenang dengan sentuhan gaya modern. 🏡",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah di singosari, Malang\n\n3 kamar tidur\n1 kamar mandi\nRuang tamu\nDapur\nAkses Mobil\nParkiran Motor \nDekat masjid\nLokasi Perumahan \nLuas 122m2\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?  \n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 1
    },
    {
      "nomer": 189,
      "kota": "Malang",
      "latitude": -7.942179243311795,
      "longitude": 112.59124253860621,
      "harga_sewa": "32000000",
      "label_harga_sewa": "Rp32jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250719230041_97179.jpg",
      "deskripsi_visual_kontrakan": "Kontrakan ini memiliki **desain modern minimalis** dengan dominasi warna putih pada dinding interior dan eksterior, serta aksen cokelat gelap pada kusen pintu dan jendela. Terlihat cukup **terawat dan bersih**, mengindikasikan bahwa properti ini siap huni atau digunakan.\n\n---\n\n## Bentuk dan Gaya Kontrakan\n\nDari gambar yang diberikan, kontrakan ini tampaknya merupakan **bangunan satu lantai** dengan **gaya arsitektur modern minimalis**. Eksteriornya menonjolkan **kesederhanaan dan fungsionalitas**.\n\n* **Eksterior:**\n    * Fasad depan didominasi warna putih dengan sentuhan **batu alam berwarna gelap** pada bagian bawah dinding, memberikan kontras yang menarik.\n    * Terdapat **kanopi atau atap carport** di bagian depan yang luas, mampu menampung beberapa sepeda motor dan mungkin satu mobil kecil.\n    * Pintu utama memiliki **panel kaca vertikal** yang memberikan kesan modern dan memungkinkan masuknya cahaya alami.\n    * Jendela-jendela di bagian depan rumah terlihat cukup besar, mendukung pencahayaan alami di dalam ruangan.\n    * Area depan rumah, termasuk carport dan taman kecil, menggunakan **paving block** yang rapi.\n* **Interior:**\n    * Dinding interior dicat **putih bersih**, menciptakan kesan **luas dan terang**.\n    * Lantai menggunakan **keramik berwarna krem atau gading** yang memantulkan cahaya, menambah kesan lapang.\n    * Beberapa area memiliki **jendela tinggi** di bagian atas dinding (seperti pada ruang utama/ruang tamu), memberikan sirkulasi udara dan pencahayaan tambahan.\n    * Terdapat **pintu-pintu kayu berwarna cokelat gelap** yang serasi dengan kusen jendela, memberikan sentuhan hangat pada interior yang didominasi warna putih.\n    * Dapur atau area servis memiliki **dinding berkeramik** dengan motif sederhana dan **meja beton berlapis keramik** dengan wastafel, fungsional untuk kebutuhan dasar.\n    * Area kamar mandi/toilet terlihat sederhana namun fungsional dengan kloset duduk.\n    * Beberapa dinding memiliki aksen **ubin dinding bermotif geometris**, memberikan sentuhan dekoratif tanpa terlalu ramai.\n\n---\n\n## Suasana dan Lingkungan\n\nSuasana kontrakan ini secara keseluruhan terasa **tenang dan nyaman**.\n\n* **Lingkungan:**\n    * Berada di **kompleks perumahan atau permukiman yang teratur**, ditandai dengan adanya pagar dan penataan lingkungan yang rapi.\n    * Terdapat **pepohonan dan tanaman hijau** di area depan dan sekitar properti, menambah kesan asri dan sejuk. 🌳\n    * Adanya **pagar tinggi** di bagian depan rumah memberikan privasi dan keamanan.\n    * Jalanan di depan rumah menggunakan **paving block** yang bersih dan terawat.\n    * Terlihat ada **beberapa unit rumah lain di sekitarnya**, menunjukkan bahwa ini adalah area pemukiman yang aktif.\n* **Suasana:**\n    * **Terang dan lapang** di bagian dalam berkat pemilihan warna cat terang dan jendela yang memadai.\n    * **Asri dan sejuk** di bagian luar karena adanya tanaman hijau.\n    * Secara umum terasa **aman dan teratur** karena lingkungan perumahan yang tertata.\n\n---\n\n## Potensi Penggunaan dan Rekomendasi Peruntukan\n\n### 🏡 Potensi Penggunaan:\n\nKontrakan ini memiliki potensi serbaguna, namun lebih dominan ke arah **hunian** atau **kantor kecil**.\n\n1.  **Hunian:** Desain interior yang bersih dan fungsional, serta keberadaan dapur dan kamar mandi, sangat mendukung sebagai tempat tinggal. Adanya area parkir yang luas juga menjadi nilai tambah.\n2.  **Kantor Kecil/Work From Home (WFH) Space:** Ruangan yang terang dan bersih dapat difungsikan sebagai ruang kerja yang nyaman. Area depan yang luas bisa dimanfaatkan untuk parkir tamu atau karyawan.\n3.  **Gudang Kecil/Penyimpanan:** Dengan beberapa modifikasi, area carport bisa ditutup untuk dijadikan gudang, atau salah satu kamar dijadikan ruang penyimpanan. Namun, ini bukan peruntukan utama.\n4.  **Tempat Usaha (Toko/Cafe):** Kurang cocok untuk toko atau cafe besar karena tidak memiliki area komersial yang jelas menghadap jalan utama dan desainnya lebih menyerupai rumah tinggal. Namun, mungkin bisa untuk **usaha online atau studio kecil** yang tidak memerlukan interaksi langsung dengan banyak pelanggan di tempat.\n\n### 🎯 Rekomendasi Peruntukan:\n\nKontrakan ini **paling cocok untuk Hunian**, baik untuk individu, pasangan muda, atau keluarga kecil.\n\n* **Alasan Kuat:**\n    * **Desain dan Tata Letak Interior:** Tata letak ruangan (ruang tamu, kamar, dapur, kamar mandi) sangat mendukung fungsi hunian. Dinding putih dan lantai terang menciptakan suasana rumah yang nyaman. 🛋️\n    * **Fasilitas Dasar:** Keberadaan dapur sederhana dan kamar mandi yang memadai adalah fasilitas esensial untuk tempat tinggal.\n    * **Lingkungan yang Nyaman:** Lingkungan perumahan yang tenang, asri, dan teratur sangat ideal untuk tempat tinggal, terutama bagi mereka yang mencari ketenangan setelah beraktivitas.\n    * **Area Parkir Luas:** Carport yang cukup besar adalah keuntungan signifikan untuk hunian, terutama bagi pemilik kendaraan bermotor.\n    * **Keamanan dan Privasi:** Pagar depan dan lingkungan perumahan memberikan rasa aman bagi penghuni.\n\n### 💡 Rekomendasi Tambahan:\n\n* **Hunian dengan Ruang Kerja Terpisah:** Bagi individu atau pasangan yang bekerja dari rumah, salah satu ruangan dapat dengan mudah diadaptasi menjadi **kantor pribadi** yang nyaman karena kondisi ruangan yang terang dan kondusif. 💻\n* **Investasi Sewa:** Properti ini sangat potensial untuk disewakan sebagai hunian karena kondisinya yang terawat dan siap pakai, menarik bagi penyewa yang mencari tempat tinggal yang nyaman dan praktis.",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah eksklusif di Joyoland Town CLuster, Joyo Grand, Merjosari, Malang\n\n2 kamar tidur\n1 kamar mandi (WC Duduk)\nAkses Mobil\nCaport Mobil dan parkiran sepeda motor\nDesain open space\nAda ruang di bagian belakang\nAda taman kering di depan Rumah\nAir pakek PDAM \nListrik 1300 watt",
      "jumlah_peminat": 0
    },
    {
      "nomer": 190,
      "kota": "Malang",
      "latitude": -7.951098437464182,
      "longitude": 112.60160371507153,
      "harga_sewa": "25000000",
      "label_harga_sewa": "Rp25jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250722142748_14710.jpeg",
      "deskripsi_visual_kontrakan": "Tentu, mari kita bedah visual kontrakan ini secara detail:\n\n**Deskripsi Visual Umum**\n\n*   **Gaya Bangunan:** Bangunan ini memiliki gaya minimalis modern dengan ciri khas bentuk persegi panjang yang sederhana. Fasad depan didominasi oleh warna abu-abu muda dan krem, memberikan kesan bersih dan netral.\n*   **Material:** Terlihat penggunaan material seperti tembok plesteran yang dicat, kusen kayu (atau imitasi kayu) untuk pintu dan jendela, dan atap baja ringan. Lantai menggunakan keramik berwarna terang.\n*   **Eksterior:** Bagian depan terdapat pagar besi minimalis dan area parkir/teras yang cukup luas. Terdapat juga kanopi baja ringan untuk melindungi area depan dari panas dan hujan.\n*   **Interior:** Dinding interior dicat warna krem, memberikan kesan hangat. Jendela-jendela besar memungkinkan cahaya alami masuk dengan baik.\n*   **Kondisi:** Secara umum, kondisi bangunan terlihat terawat meskipun ada beberapa bagian yang mungkin perlu perbaikan kecil (misalnya, noda di toilet).\n\n**Detail Ruangan**\n\n*   **Fasad Depan:** Terdapat teras atau area parkir yang cukup luas, terlindung oleh kanopi. Pintu dan jendela besar memberikan akses cahaya yang baik ke dalam rumah.\n*   **Ruang Dalam:** Tampak seperti ruang keluarga atau ruang tengah yang menghubungkan ruangan-ruangan lain. Ukurannya cukup lapang.\n*   **Kamar Tidur:** Terdapat dua kamar tidur yang terlihat dalam foto. Ukurannya standar, dengan jendela yang cukup besar.\n*   **Kamar Mandi:** Kamar mandi standar dengan kloset duduk, bak mandi (atau shower), dan perlengkapan dasar lainnya. Kondisi kebersihan perlu diperhatikan.\n*   **Area Belakang:** Terdapat area terbuka di belakang rumah yang bisa digunakan untuk menjemur pakaian atau sebagai taman kecil.\n\n**Suasana dan Lingkungan**\n\n*   **Suasana:** Secara visual, kontrakan ini memberikan kesan nyaman dan tenang. Warna-warna netral dan pencahayaan alami yang baik menciptakan suasana yang menyenangkan.\n*   **Lingkungan:** Berdasarkan foto, lingkungan sekitar terlihat cukup padat dengan rumah-rumah lain di sekitarnya. Jalan depan rumah di paving blok.\n\n**Potensi Penggunaan dan Rekomendasi Peruntukan**\n\nBerikut adalah potensi penggunaan dan rekomendasi peruntukan untuk kontrakan ini, dengan alasan yang kuat:\n\n1.  **Hunian (Sangat Direkomendasikan):**\n    *   **Alasan:** Tata ruang yang terdiri dari ruang keluarga, kamar tidur, kamar mandi, dan area belakang sangat cocok untuk kebutuhan hunian keluarga kecil atau pasangan. Kondisi bangunan yang terawat (meskipun perlu sedikit perbaikan) membuat rumah ini siap huni.\n2.  **Tempat Usaha Kecil (Kantor/Toko Online):**\n    *   **Alasan:** Lokasi yang mudah diakses dan area depan yang cukup luas bisa dimanfaatkan sebagai kantor kecil atau tempat usaha toko online. Salah satu kamar tidur bisa diubah menjadi ruang kerja atau gudang penyimpanan barang.\n3.  **Kombinasi Hunian dan Usaha:**\n    *   **Alasan:** Ini adalah opsi yang paling fleksibel. Bagian depan rumah bisa digunakan sebagai tempat usaha kecil, sementara bagian belakang tetap berfungsi sebagai hunian. Ini cocok untuk pengusaha rumahan atau freelancer yang membutuhkan ruang kerja terpisah.\n\n**Pertimbangan Tambahan**\n\n*   **Kebersihan:** Perlu dilakukan pembersihan menyeluruh, terutama di kamar mandi.\n*   **Perbaikan Kecil:** Mungkin perlu ada beberapa perbaikan kecil, seperti pengecatan ulang atau perbaikan keran yang bocor.\n*   **Keamanan:** Pastikan keamanan rumah terjamin dengan memasang kunci yang kuat dan sistem keamanan tambahan jika diperlukan.\n\n**Kesimpulan**\n\nSecara keseluruhan, kontrakan ini memiliki potensi besar sebagai hunian yang nyaman dan fungsional. Dengan sedikit sentuhan perbaikan dan penataan, rumah ini bisa menjadi tempat tinggal yang ideal. Selain itu, lokasinya yang strategis juga memungkinkan untuk dimanfaatkan sebagai tempat usaha kecil atau kombinasi hunian dan usaha.\n\nSemoga deskripsi ini bermanfaat!",
      "deskripsi_spesifikasi_kontrakan": "[kosong 1 agustus 2025]\n\nDikontrakan rumah di perumahan sigura-gura\n\n2 kamar tidur\n1 kamar mandi (WC Duduk)\nRuang tamu\nDapur\nAkses Mobil\nParkiran mobil\nTempat jemur baju di area belakang rumah",
      "jumlah_peminat": 0
    },
    {
      "nomer": 191,
      "kota": "Malang",
      "latitude": -7.938322978850959,
      "longitude": 112.61957285769671,
      "harga_sewa": "41000000",
      "label_harga_sewa": "Rp41jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250724122934_55115.jpeg",
      "deskripsi_visual_kontrakan": "### **Deskripsi Visual Kontrakan**\n\n**Bentuk dan Gaya Bangunan:**\nKontrakan ini memiliki desain yang praktis dan fungsional, mencerminkan gaya rumah yang umum dijumpai. Bangunan ini memanjang ke belakang, memungkinkan pemanfaatan ruang yang efisien. Atap seng yang terlihat jelas dari bagian depan memberikan kesan industrial minimalis, sekaligus menawarkan solusi atap yang tahan lama. Dinding bangunan didominasi warna putih cerah dengan aksen garis hitam horizontal di bagian bawah jendela depan, memberikan sentuhan modern dan kontras yang menarik. Jendela dan pintu utama memiliki desain kisi-kisi kayu atau logam berwarna putih krem, menambahkan estetika yang sederhana namun rapi.\n\n**Suasana dan Lingkungan:**\nSuasana di dalam kontrakan terasa terang dan lapang berkat cat dinding berwarna cerah dan pencahayaan yang memadai, baik dari lampu maupun bukaan alami. Meski tidak ada detail lingkungan luar yang spesifik, gerbang besi hitam besar di bagian depan menunjukkan adanya area parkir atau teras yang cukup luas, yang dapat menampung beberapa kendaraan roda dua seperti motor yang terlihat di awal video. Lingkungan di sekitar kontrakan terkesan tenang dan privat, mengingat tidak ada gangguan visual atau suara yang mencolok dari luar.\n\n---\n\n### **Potensi Penggunaan dan Rekomendasi Peruntukan Setiap Bagian**\n\nKontrakan ini menawarkan beragam kemungkinan penggunaan, dan kami akan menjelaskan potensi serta rekomendasi peruntukan untuk setiap areanya:\n\n1.  **Area Depan (Teras/Garasi Terbuka):**\n    * **Deskripsi Visual:** Area ini memiliki lantai keramik putih yang bersih, sebagian besar tidak beratap permanen tetapi terlindung oleh kanopi atap seng yang menjorok keluar dari bangunan utama. Terdapat pagar besi hitam yang kokoh sebagai pembatas depan, dan area ini cukup luas untuk menampung beberapa motor.\n    * **Potensi Penggunaan:** Area ini sangat fleksibel. Dapat berfungsi sebagai garasi terbuka untuk kendaraan, area tunggu bagi tamu atau pelanggan, atau bahkan area pajangan produk jika dimanfaatkan sebagai tempat usaha.\n    * **Rekomendasi Peruntukan:**\n        * **Tempat Usaha (Toko/Kafe kecil/Kantor Layanan):** Sangat cocok untuk tujuan komersial. Area depan yang luas dan terbuka memungkinkan etalase yang menarik atau ruang tunggu yang nyaman bagi pelanggan. Garasi terbuka bisa dimanfaatkan untuk parkir pelanggan.\n        * **Kombinasi Hunian dan Usaha:** Jika Anda berencana tinggal di sini sambil menjalankan bisnis kecil, area ini bisa menjadi titik masuk yang sempurna untuk usaha Anda tanpa mengganggu privasi area hunian di dalamnya.\n\n2.  **Ruang Utama/Tamu/Teras Dalam:**\n    * **Deskripsi Visual:** Setelah melewati pintu masuk utama yang lebar, Anda akan menemukan area luas dengan lantai keramik putih bersih. Dinding berwarna putih dengan aksen garis hitam horizontal terlihat dari luar, dan bagian dalam ruangan ini juga dicat putih. Terdapat jendela besar dengan kisi-kisi putih yang memungkinkan masuknya cahaya alami. Di salah satu sudut, terdapat wastafel kecil, dan di sepanjang dinding terdapat rak-rak dinding berwarna hitam. Ruangan ini dilengkapi dengan dua kursi plastik hijau dan satu bangku kecil, serta sebuah rak buku kayu sederhana.\n    * **Potensi Penggunaan:** Area ini adalah jantung kontrakan, ideal untuk ruang tamu, area kerja, atau ruang tunggu yang lebih formal.\n    * **Rekomendasi Peruntukan:**\n        * **Hunian (Ruang Keluarga/Tamu):** Jika digunakan sebagai hunian, ini akan menjadi ruang keluarga atau ruang tamu yang nyaman dan luas. Wastafel tambahan di sudut dapat berfungsi sebagai area cuci tangan praktis.\n        * **Tempat Usaha (Area Resepsionis/Kantor Utama/Cafe):** Sangat direkomendasikan untuk tujuan usaha. Luasnya memungkinkan penataan meja resepsionis, beberapa meja kerja, atau bahkan beberapa set meja kursi untuk kafe kecil. Pencahayaan yang baik dan tampilan yang bersih mendukung citra profesional atau menarik untuk usaha kuliner.\n\n3.  **Ruang Tengah/Koridor & Kamar Tidur/Ruang Serbaguna (2 Unit):**\n    * **Deskripsi Visual:** Setelah ruang utama, terdapat koridor yang memanjang dengan pintu-pintu menuju beberapa ruangan. Ada dua ruangan di sisi kiri koridor yang terlihat jelas. Salah satu ruangan dicat hijau cerah dengan stiker dinding edukatif dan karpet motif di lantai, mengindikasikan penggunaan sebelumnya sebagai ruang anak atau belajar. Ruangan lainnya dicat kuning cerah, tampak kosong.\n    * **Potensi Penggunaan:** Ruangan-ruangan ini memiliki privasi lebih dan dapat disesuaikan untuk berbagai keperluan.\n    * **Rekomendasi Peruntukan:**\n        * **Hunian (Kamar Tidur):** Sangat cocok sebagai kamar tidur utama atau kamar tidur anak. Ruangan berwarna hijau sangat ideal untuk kamar anak tanpa perlu banyak dekorasi tambahan.\n        * **Tempat Usaha (Ruang Kelas/Ruang Konsultasi/Ruang Kantor Privat):** Karena desainnya yang terpisah dan relatif privat, ruangan ini sempurna untuk ruang kelas kecil (terutama yang hijau), ruang konsultasi pribadi, atau kantor privat bagi karyawan. Warna cerah juga mendukung lingkungan yang produktif.\n\n4.  **Area Belakang (Dapur & Kamar Mandi):**\n    * **Deskripsi Visual:** Di bagian paling belakang kontrakan, terdapat area yang didedikasikan untuk dapur dan kamar mandi. Dapur dilengkapi dengan bak cuci piring sederhana dan dinding berkeramik dengan motif mozaik kecil. Kamar mandi memiliki bak mandi tradisional berbentuk kotak dan dinding berkeramik putih dengan aksen garis merah.\n    * **Potensi Penggunaan:** Area esensial ini memenuhi kebutuhan dasar sanitasi dan memasak.\n    * **Rekomendasi Peruntukan:**\n        * **Hunian (Dapur dan Kamar Mandi Fungsional):** Tentunya esensial untuk hunian. Dapur memungkinkan kegiatan memasak sehari-hari, dan kamar mandi menyediakan fasilitas dasar.\n        * **Tempat Usaha (Dapur Komersial Kecil/Fasilitas Sanitasi Pegawai/Pelanggan):** Jika digunakan sebagai tempat usaha, area dapur dapat dioptimalkan menjadi dapur komersial kecil untuk katering atau kafe. Kamar mandi akan berfungsi sebagai fasilitas sanitasi penting bagi karyawan dan pelanggan.\n\n---\n\n**Kesimpulan:**\n\nKontrakan ini merupakan properti serbaguna dengan tata letak yang efisien dan lingkungan yang tenang. Dengan area depan yang luas, ruang utama yang adaptif, serta kamar-kamar yang privat, kontrakan ini sangat cocok untuk:\n\n* **Hunian:** Ideal untuk keluarga kecil atau individu yang mencari ruang luas dengan fleksibilitas tata letak.\n* **Tempat Usaha (Kantor/Toko/Kafe/Tempat Kursus):** Terutama menarik bagi mereka yang ingin memulai usaha skala kecil hingga menengah. Area depan yang terbuka sangat menguntungkan untuk visibilitas dan akses pelanggan, sementara ruangan-ruangan di dalamnya bisa difungsikan sebagai ruang kerja, kelas, atau area layanan.\n* **Kombinasi Hunian dan Usaha:** Pilihan terbaik bagi pengusaha rumahan atau bisnis yang membutuhkan tempat tinggal sekaligus kantor/toko di lokasi yang sama, memungkinkan efisiensi biaya dan waktu.\n\nKami yakin kontrakan ini dapat menjadi solusi yang tepat untuk kebutuhan Anda. Jangan ragu untuk menghubungi kami untuk informasi lebih lanjut atau penjadwalan kunjungan.",
      "deskripsi_spesifikasi_kontrakan": "Disewakan rumah di perumahan griya shanta\n\n3 kamar tidur\nRuang Tamu/Keluarga\nRuang Makan\nDapur\n1 Kamar Mandi/WC (lengkap dengan wastafel cuci tangan)\nTeras depan (bisa difungsikan sebagai ruang tamu tambahan)\nPDAM lancar 24 jam.\nListrik token dengan daya 2200 Watt.\nAda garasi mobil",
      "jumlah_peminat": 0
    },
    {
      "nomer": 192,
      "kota": "Malang",
      "latitude": -7.944452683569584,
      "longitude": 112.59513898757335,
      "harga_sewa": "23000000",
      "label_harga_sewa": "Rp23jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250724130738_77943.jpeg",
      "deskripsi_visual_kontrakan": "Baik, mari kita analisis kontrakan ini berdasarkan gambar-gambar yang diberikan:\n\n**Deskripsi Visual:**\n\n*   **Bentuk dan Gaya Bangunan:** Bangunan ini tampaknya memiliki gaya arsitektur rumah tinggal sederhana dengan sentuhan klasik. Terlihat dari bentuk bangunan yang kotak, penggunaan jendela-jendela besar dengan bingkai kayu, serta pagar besi tempa berwarna putih. Ada kesan rumah yang dibangun pada era tertentu, mungkin sekitar tahun 80-an atau 90-an, meskipun sudah direnovasi.\n*   **Eksterior:** Fasad rumah didominasi warna putih, dengan aksen kayu berwarna coklat pada jendela dan pintu. Pagar besi putih memberikan kesan aman dan rapi. Terdapat teras yang cukup luas di bagian depan.\n*   **Interior:**\n    *   **Ruang Depan:** Terlihat ruang depan yang cukup luas dengan lantai keramik. Jendela-jendela besar memberikan pencahayaan alami yang baik.\n    *   **Kamar/Ruangan:** Terlihat beberapa ruangan dengan pintu berwarna putih. Lantai keramik tampak bersih dan terawat.\n    *   **Dapur:** Ada area dapur dengan meja dapur dan bak cuci piring. Ukuran dapur tampaknya tidak terlalu besar.\n*   **Suasana dan Lingkungan:** Dari gambar, sulit untuk menilai lingkungan secara pasti. Namun, terlihat jalanan yang cukup lebar di depan rumah. Suasana tampak tenang, terutama karena foto diambil pada malam hari.\n\n**Potensi Penggunaan dan Rekomendasi Peruntukan:**\n\nBerikut adalah beberapa potensi penggunaan kontrakan ini, beserta rekomendasi peruntukan yang paling sesuai:\n\n1.  **Hunian:**\n\n    *   **Potensi:** Ruangan-ruangan yang ada cukup memadai untuk keluarga kecil atau pasangan. Teras depan bisa dimanfaatkan untuk bersantai. Keberadaan dapur memungkinkan untuk memasak sehari-hari.\n    *   **Rekomendasi:** Sangat cocok untuk hunian.\n    *   **Alasan:** Tata ruang yang ada mendukung fungsi rumah tinggal. Ukuran ruangan cukup nyaman untuk aktivitas sehari-hari. Pagar memberikan keamanan dan privasi.\n2.  **Kantor/Tempat Usaha Kecil:**\n\n    *   **Potensi:** Ruang depan yang luas bisa dimanfaatkan sebagai ruang tunggu atau area resepsionis. Ruangan-ruangan lain bisa digunakan sebagai ruang kerja.\n    *   **Rekomendasi:** Cocok untuk kantor kecil atau usaha jasa yang tidak memerlukan banyak ruang penyimpanan.\n    *   **Alasan:** Lokasi yang berada di pinggir jalan (terlihat dari foto) memudahkan akses bagi pelanggan. Tata ruang yang fleksibel memungkinkan untuk diubah sesuai kebutuhan kantor.\n3.  **Toko/Retail:**\n\n    *   **Potensi:** Ruang depan yang luas bisa dijadikan area display produk.\n    *   **Rekomendasi:** Kurang cocok, kecuali untuk jenis usaha tertentu yang tidak memerlukan banyak ruang display atau penyimpanan barang.\n    *   **Alasan:** Dapur mungkin kurang relevan untuk toko, dan ruangan lain mungkin terlalu kecil untuk menyimpan stok barang.\n4.  **Kombinasi Hunian dan Usaha:**\n\n    *   **Potensi:** Sebagian rumah bisa digunakan sebagai tempat tinggal, sementara sebagian lagi digunakan sebagai ruang kerja atau tempat usaha.\n    *   **Rekomendasi:** Mungkin, jika jenis usahanya cocok dan tidak mengganggu kenyamanan penghuni rumah.\n    *   **Alasan:** Memungkinkan untuk menghemat biaya sewa tempat tinggal dan tempat usaha.\n\n**Kesimpulan:**\n\nBerdasarkan analisis di atas, kontrakan ini paling cocok untuk **hunian**. Tata ruang yang ada mendukung fungsi rumah tinggal, dan ukuran ruangan cukup nyaman untuk aktivitas sehari-hari. Pagar memberikan keamanan dan privasi.\n\nJika tujuannya adalah untuk usaha, kontrakan ini lebih cocok untuk **kantor kecil atau usaha jasa** yang tidak memerlukan banyak ruang penyimpanan. Lokasi yang berada di pinggir jalan memudahkan akses bagi pelanggan.\n\nPerlu diingat bahwa rekomendasi ini bersifat sementara dan dapat berubah tergantung pada kebutuhan dan preferensi penyewa. Akan lebih baik jika Anda melakukan survei langsung ke lokasi untuk mendapatkan gambaran yang lebih jelas tentang kontrakan ini.",
      "deskripsi_spesifikasi_kontrakan": "Disewakan rumah Joyogrand\n\n3 kamar tidur\n1 kamar mandi\nPLN 1300 token\nPdam\nJemuran di atas",
      "jumlah_peminat": 0
    },
    {
      "nomer": 193,
      "kota": "Malang",
      "latitude": -7.946064682547488,
      "longitude": 112.59412219385158,
      "harga_sewa": "25500000",
      "label_harga_sewa": "Rp25,5jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250724145313_11023.jpeg",
      "deskripsi_visual_kontrakan": "**Deskripsi Visual Kontrakan:**\n\n**1. Bentuk dan Gaya Bangunan:**\nKontrakan ini memiliki desain rumah petak atau rumah baris khas Indonesia, dengan penekanan pada fungsionalitas dan efisiensi ruang. Tampak depan rumah didominasi oleh sebuah gerbang besi hitam dengan ornamen keemasan di bagian atas, memberikan kesan yang cukup kokoh dan sedikit sentuhan estetika. Fasad bangunan berwarna krem pucat dengan aksen hijau di pilar dan lis atap, menciptakan kontras yang menarik dan memberikan tampilan yang segar. Bagian teras depan memiliki atap dan tiang, menunjukkan adanya area yang terlindungi dari matahari dan hujan. Jendela dan pintu utama memiliki kusen berwarna gelap, kemungkinan coklat tua atau hitam, dengan kaca bening.\n\n**2. Suasana dan Lingkungan:**\n* **Eksterior:** Suasana di luar kontrakan tampak tenang dan asri, meskipun tidak banyak tanaman. Terlihat ada pot tanaman di dekat pilar teras. Lingkungan sekitarnya menunjukkan perumahan padat dengan rumah-rumah lain yang berdekatan. Jalan di depan kontrakan terlihat cukup lebar untuk akses kendaraan roda dua atau mobil. Kebersihan area depan tampak terjaga dengan baik.\n* **Interior:** Interior kontrakan didominasi oleh warna-warna cerah dan netral, memberikan kesan bersih dan lapang. Lantai keramik dengan motif coklat muda memberikan sentuhan hangat pada seluruh ruangan. Pencahayaan di dalam rumah cukup baik, baik dari cahaya alami yang masuk melalui pintu dan jendela, maupun dari lampu plafon yang terpasang.\n\n**3. Potongan Ruangan dan Potensi Penggunaan:**\n\n* **Teras Depan (00:00 - 00:04, 01:29 - 01:35):**\n    * **Deskripsi:** Area teras yang cukup luas dan tertutup, dengan lantai keramik yang sama seperti di dalam rumah. Terdapat tempat duduk sederhana (kemungkinan kursi plastik) di salah satu sisi dan beberapa pasang sandal/sepatu. Adanya meteran listrik dan air (PLN PAM) menunjukkan fasilitas dasar yang lengkap. Pintu masuk utama memiliki dua daun pintu yang bisa dibuka lebar.\n    * **Potensi Penggunaan:** Area ini sangat ideal untuk tempat menerima tamu, bersantai di sore hari, atau sebagai area parkir sepeda motor kecil. Bisa juga dimanfaatkan untuk menjemur pakaian kecil atau meletakkan rak sepatu/penyimpanan.\n    * **Rekomendasi Peruntukan:** **Hunian atau Kombinasi (Hunian + Usaha Kecil).** Terlalu luas untuk hanya sebagai teras hunian, bisa dimanfaatkan sebagian untuk tempat usaha kecil yang tidak membutuhkan banyak privasi, seperti warung kelontong kecil atau tempat les/kursus.\n\n* **Ruang Tamu / Area Utama (00:07 - 00:15, 01:10 - 01:14):**\n    * **Deskripsi:** Ruangan pertama setelah pintu masuk, berukuran cukup memanjang. Dindingnya dicat hijau terang, memberikan kesan ceria dan hidup. Ada jendela besar dengan gorden kuning yang memberikan pencahayaan alami yang baik. Lantainya bersih dan mengkilap. Terlihat ada rak buku atau meja kecil di salah satu sudut.\n    * **Potensi Penggunaan:** Ruangan ini berfungsi sebagai ruang tamu utama dan bisa juga sebagai area keluarga. Ukurannya memungkinkan penempatan sofa, meja kopi, dan mungkin lemari TV.\n    * **Rekomendasi Peruntukan:** **Hunian.** Sangat cocok sebagai ruang tamu/keluarga di hunian. Untuk tempat usaha, kurang representatif sebagai kantor utama, namun bisa berfungsi sebagai ruang tunggu atau area pameran produk.\n\n* **Ruang Tengah / Ruang Keluarga (00:16 - 00:23):**\n    * **Deskripsi:** Ruangan ini tampak lebih luas dari ruang tamu, dengan satu sisi dinding bertekstur seperti batu bata atau panel kayu berwarna coklat gelap, menambahkan sentuhan modern dan hangat. Dinding lainnya berwarna putih polos. Pencahayaan dari lampu plafon cukup terang.\n    * **Potensi Penggunaan:** Ini adalah area serbaguna yang dapat digunakan sebagai ruang keluarga yang nyaman, ruang makan, atau bahkan area kerja/belajar. Ukurannya memungkinkan fleksibilitas dalam penataan furnitur.\n    * **Rekomendasi Peruntukan:** **Hunian atau Kombinasi (Hunian + Kantor/Toko).** Untuk hunian, sangat ideal sebagai ruang keluarga. Untuk tempat usaha, bisa dijadikan area kerja staf, ruang display produk, atau area kafe yang luas. Dinding bertekstur menambah daya tarik visual.\n\n* **Kamar Tidur 1 (00:24 - 00:29):**\n    * **Deskripsi:** Kamar ini memiliki dinding berwarna krem atau abu-abu muda, memberikan suasana yang tenang. Terdapat satu jendela vertikal yang tinggi, memberikan sedikit cahaya alami dan sirkulasi udara. Lantai keramik.\n    * **Potensi Penggunaan:** Kamar tidur utama atau kamar tidur anak.\n    * **Rekomendasi Peruntukan:** **Hunian.** Jelas ditujukan sebagai kamar tidur. Tidak ideal untuk penggunaan komersial kecuali sebagai ruang penyimpanan.\n\n* **Kamar Tidur 2 (00:30 - 00:41):**\n    * **Deskripsi:** Kamar tidur ini juga memiliki dinding krem/abu-abu muda, dengan pencahayaan alami yang masuk melalui jendela. Suasananya sederhana dan fungsional.\n    * **Potensi Penggunaan:** Kamar tidur tambahan.\n    * **Rekomendasi Peruntukan:** **Hunian.** Sama seperti kamar tidur 1, ini adalah ruang privat untuk hunian.\n\n* **Kamar Tidur 3 (00:42 - 00:53):**\n    * **Deskripsi:** Dinding kamar ini memiliki tekstur dan warna yang mirip dengan dinding di ruang tengah, memberikan kesan yang lebih dekoratif dan hangat dibandingkan kamar tidur lainnya. Ukuran kamar tampak standar.\n    * **Potensi Penggunaan:** Kamar tidur atau kamar kerja.\n    * **Rekomendasi Peruntukan:** **Hunian atau Kombinasi (Hunian + Kantor).** Untuk hunian, bisa jadi kamar tidur utama. Untuk kantor, bisa digunakan sebagai ruang kantor pribadi atau ruang rapat kecil karena desain dindingnya memberikan kesan lebih formal namun tetap nyaman.\n\n* **Kamar Mandi (00:54 - 01:05):**\n    * **Deskripsi:** Kamar mandi berukuran standar, dengan dinding berubin putih dan sebagian dihiasi ubin bermotif gambar ikan, memberikan sentuhan ceria. Terdapat kloset duduk, bak mandi, dan shower (meskipun tidak terlalu terlihat jelas). Lantai keramik.\n    * **Potensi Penggunaan:** Kamar mandi utama.\n    * **Rekomendasi Peruntukan:** **Hunian.** Fungsi utama sebagai fasilitas sanitasi untuk penghuni.\n\n* **Dapur (01:15 - 01:28):**\n    * **Deskripsi:** Dapur semi-terbuka dengan area wastafel permanen berubin, lemari es, dan area untuk memasak. Dindingnya berubin putih dengan lis bermotif bintang di bagian atas, memberikan sentuhan ceria dan bersih. Lantainya berbeda dari ruangan lain, kemungkinan keramik motif kayu atau gelap. Terdapat sebuah meja/rak kecil.\n    * **Potensi Penggunaan:** Area memasak dan persiapan makanan.\n    * **Rekomendasi Peruntukan:** **Hunian.** Dapur adalah elemen penting dalam hunian. Jika digunakan untuk usaha makanan, mungkin perlu modifikasi agar sesuai standar kebersihan dan kapasitas produksi yang lebih besar.\n\n**Rekomendasi Peruntukan Keseluruhan Kontrakan:**\n\nBerdasarkan analisis visual, kontrakan ini sangat cocok untuk **Hunian** sebagai fungsi utamanya. Alasannya kuat:\n\n* **Desain Umum:** Tata letak ruangan (teras, ruang tamu, ruang tengah, kamar tidur, dapur, kamar mandi) sangat ideal untuk kebutuhan hunian sehari-hari sebuah keluarga.\n* **Jumlah Kamar:** Tiga kamar tidur memberikan fleksibilitas untuk keluarga dengan anak atau sebagai ruang kerja/tamu tambahan.\n* **Fasilitas Dasar:** Keberadaan dapur dan kamar mandi yang fungsional adalah kebutuhan dasar untuk hunian.\n* **Ukuran Ruangan:** Ruangan-ruangan yang tidak terlalu besar atau terlalu kecil, memberikan kesan nyaman dan mudah diatur untuk tinggal.\n\nNamun, dengan sedikit modifikasi dan penataan, kontrakan ini juga memiliki potensi untuk **Kombinasi (Hunian + Tempat Usaha Kecil/Kantor/Toko)**, terutama untuk usaha yang tidak memerlukan lalu lintas pelanggan yang sangat tinggi atau gudang skala besar.\n\n**Alasan Kuat untuk Rekomendasi Kombinasi:**\n\n* **Teras yang Luas:** Teras depan yang terlindungi bisa dimanfaatkan untuk usaha kecil seperti:\n    * **Warung Kelontong:** Cukup untuk menempatkan etalase kecil.\n    * **Konter Pulsa/Pembayaran:** Area yang aman dan terlihat dari luar.\n    * **Tempat Kursus/Les Privat:** Ruang tunggu dan area belajar di teras atau ruang tamu.\n* **Ruang Tengah/Depan yang Fleksibel:** Area ini bisa disulap menjadi:\n    * **Kantor Mikro/Virtual Office:** Cukup untuk beberapa meja kerja.\n    * **Studio Kecil:** Untuk fotografer, desainer grafis, atau seniman.\n    * **Toko Online (dengan Gudang Mini):** Bagian depan untuk display kecil, bagian dalam untuk penyimpanan barang.\n* **Aksesibilitas:** Lokasi di perumahan yang padat penduduk biasanya menjamin aksesibilitas yang baik bagi calon pelanggan jika dijadikan tempat usaha.\n\n**Mengapa Kurang Cocok untuk Gudang Murni atau Cafe Skala Besar:**\n\n* **Gudang:** Meskipun memiliki beberapa ruangan, ukurannya tidak cukup besar untuk gudang skala industri atau komersial yang membutuhkan kapasitas penyimpanan sangat besar. Ketersediaan jendela dan dapur juga tidak mendukung fungsi gudang murni.\n* **Cafe Skala Besar:** Layout ruangan yang terpisah-pisah dan dapur berukuran rumahan tidak cocok untuk operasional cafe dengan banyak meja, area bar yang luas, atau dapur komersial yang sibuk. Diperlukan renovasi besar-besaran untuk mengubahnya menjadi cafe yang fungsional dan menarik.\n\n**Kesimpulan:**\n\nKontrakan ini adalah properti yang fungsional dan terawat, sangat ideal sebagai **hunian pribadi atau keluarga kecil**. Dengan sedikit kreativitas dan modifikasi, potensi penggunaannya dapat diperluas menjadi **hunian yang juga mengakomodasi usaha kecil atau kantor mikro**, memanfaatkan area teras dan ruang depan yang cukup representatif.",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah di perumahan JoyoGrand\n\nFasilitas nya \n3 kamar tidur  \n1 kamar mandi\nKulkas\nLemari\nDapur\nRuang tamu\nRuang keluarga\nCarpot\nAkses Mobil",
      "jumlah_peminat": 0
    },
    {
      "nomer": 194,
      "kota": "Malang",
      "latitude": -7.943428883330325,
      "longitude": 112.59035507192576,
      "harga_sewa": "23000000",
      "label_harga_sewa": "Rp23jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250724152759_18189.jpeg",
      "deskripsi_visual_kontrakan": "Berikut adalah deskripsi visual detail dan komprehensif dari kontrakan pada gambar, beserta analisis potensi penggunaan dan rekomendasi peruntukannya:\n\n**Deskripsi Visual:**\n\n*   **Bentuk dan Gaya Bangunan:** Kontrakan ini tampak seperti rumah tinggal satu lantai dengan gaya arsitektur minimalis modern yang sederhana. Terdiri dari dua bagian yang terlihat, masing-masing dengan pintu masuk tersendiri yang dipisahkan oleh taman kecil. Fasad depan didominasi oleh warna krem atau putih pucat, dipadukan dengan aksen warna coklat pada jendela dan beberapa bagian dinding. Atapnya terlihat menggunakan genteng dengan warna coklat kemerahan dan ada desain lisplang minimalis di bawahnya.\n\n*   **Gerbang dan Pagar:** Kontrakan ini memiliki gerbang besi berwarna abu-abu tua dengan desain geometris yang modern. Pagar besi ini tidak terlalu tinggi, memungkinkan pandangan ke arah taman kecil di dalam.\n\n*   **Taman dan Area Depan:** Terdapat sedikit area taman di depan masing-masing bagian kontrakan, dengan beberapa tanaman hias dalam pot dan tumbuhan hijau lainnya. Di depan salah satu bagian, terlihat sebuah mobil terparkir. Area jalan di depan kontrakan terlihat cukup lebar.\n\n*   **Pencahayaan:** Foto diambil pada malam hari, dengan pencahayaan yang cukup baik dari lampu jalan dan lampu di area kontrakan.\n\n*   **Suasana dan Lingkungan:** Secara umum, suasana yang tergambar adalah suasana lingkungan perumahan yang tenang. Keberadaan tanaman hijau di depan kontrakan memberikan kesan asri dan nyaman.\n\n**Potensi Penggunaan dan Rekomendasi Peruntukan:**\n\nMelihat desain dan tata letak kontrakan, berikut adalah potensi penggunaan dan rekomendasi peruntukan untuk setiap bagian:\n\n*   **Hunian (Rumah Tinggal):** Ini adalah peruntukan yang paling potensial. Desain minimalis modern dan keberadaan taman kecil memberikan kesan nyaman untuk tempat tinggal. Setiap bagian bisa difungsikan sebagai rumah tinggal untuk keluarga kecil atau individu.\n\n    *   **Alasan:** Desain rumah yang sudah ada, adanya area parkir, dan kesan lingkungan yang tenang mendukung peruntukan sebagai hunian.\n\n*   **Kantor/Tempat Usaha Kecil:** Karena terdapat dua bagian yang terpisah dengan pintu masuk sendiri, salah satu bagian bisa difungsikan sebagai kantor kecil atau tempat usaha seperti studio desain, konsultan, atau toko online.\n\n    *   **Alasan:** Lokasi yang berada di area perumahan bisa menjadi keuntungan untuk menjangkau pelanggan lokal.\n\n*   **Kombinasi Hunian dan Usaha:** Salah satu bagian kontrakan bisa dijadikan tempat tinggal, sementara bagian lainnya difungsikan sebagai tempat usaha.\n\n    *   **Alasan:** Model ini cocok untuk mereka yang ingin memiliki tempat tinggal sekaligus menjalankan bisnis dari rumah.\n\n*   **Bukan Rekomendasi:** Gudang atau cafe tidak cocok karena desain yang tidak sesuai dengan fungsi tersebut.\n\n**Kesimpulan:**\n\nSecara keseluruhan, kontrakan ini memiliki potensi besar sebagai hunian yang nyaman atau kombinasi hunian dan tempat usaha kecil. Keputusan peruntukan akhir sebaiknya didasarkan pada kebutuhan dan preferensi calon penyewa atau pembeli.",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah di perumahan Joyogrand\n\n3 kamar tidur\n1 kamar mandi\nteras\nruang tamu\ndapur\nakses mobil\nada parkiran sepeda motor dan pagar",
      "jumlah_peminat": 0
    },
    {
      "nomer": 195,
      "kota": "Malang",
      "latitude": -7.944030990837588,
      "longitude": 112.59024605221235,
      "harga_sewa": "33000000",
      "label_harga_sewa": "Rp33jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250725133757_19353.jpeg",
      "deskripsi_visual_kontrakan": "Baik, mari kita analisis kontrakan ini berdasarkan gambar yang ada.\n\n**Deskripsi Visual Bangunan:**\n\n*   **Gaya dan Bentuk:** Bangunan ini memiliki gaya modern minimalis dengan sentuhan industrial. Hal ini terlihat dari bentuk kotak yang dominan, penggunaan warna-warna netral seperti putih, abu-abu, dan hitam, serta aksen elemen metal seperti pagar dan kanopi. Terdapat elemen dekoratif yang menonjol pada fasad depan yang menciptakan kesan menarik dan tidak monoton.\n\n*   **Fasad Depan:** Fasad depan memiliki beberapa bagian yang berbeda. Ada bagian dinding yang dilapisi material berwarna hitam (kemungkinan batu alam atau panel). Bagian lain dicat putih, dan terdapat elemen arsitektur menonjol di atas jendela dan pintu utama. Pintu utama memiliki kisi-kisi vertikal berwarna emas.\n\n*   **Pagar:** Pagar terbuat dari besi dengan desain sederhana, dicat warna krem atau kuning muda. Pagar ini memberikan privasi dan keamanan bagi penghuni.\n\n*   **Kanopi:** Di atas pagar dan sebagian area depan terdapat kanopi yang terbuat dari rangka besi dan atap seng atau sejenisnya. Kanopi ini berfungsi melindungi area parkir dan area depan dari panas dan hujan.\n\n*   **Lingkungan:** Dari gambar, terlihat ada sedikit area hijau di depan pagar, meskipun tidak terlalu luas. Terlihat juga rumah atau bangunan lain di sekitarnya, yang mengindikasikan lingkungan perumahan.\n\n**Potensi Penggunaan dan Rekomendasi Peruntukan:**\n\nBerdasarkan deskripsi visual di atas, berikut adalah potensi penggunaan dan rekomendasi peruntukan untuk kontrakan ini:\n\n*   **Hunian:** Ini adalah peruntukan yang paling cocok untuk kontrakan ini. Desain modern minimalis, adanya pagar untuk privasi, dan area depan yang cukup luas (meskipun perlu penataan lebih lanjut) menjadikannya tempat yang nyaman untuk ditinggali.\n    *   **Alasan:**\n        *   Desain yang bersih dan modern menciptakan suasana yang menyenangkan untuk hunian.\n        *   Pagar memberikan keamanan dan privasi.\n        *   Adanya area parkir yang terlindungi oleh kanopi.\n*   **Tempat Usaha (Kantor/Toko Kecil):** Dengan sedikit modifikasi, kontrakan ini juga berpotensi menjadi kantor kecil atau toko yang menjual produk-produk yang tidak memerlukan ruang display yang besar.\n    *   **Alasan:**\n        *   Lokasi di lingkungan perumahan bisa menjadi keuntungan jika usaha yang dijalankan cocok dengan kebutuhan warga sekitar.\n        *   Fasad yang menarik dapat menarik perhatian pelanggan.\n        *   Ruang depan yang ada bisa dimanfaatkan sebagai area parkir pelanggan.\n*   **Kombinasi Hunian dan Usaha:** Bagian depan kontrakan bisa dimodifikasi menjadi ruang usaha, sementara bagian belakang tetap berfungsi sebagai hunian.\n    *   **Alasan:**\n        *   Memungkinkan pemilik untuk menjalankan bisnis dari rumah.\n        *   Mengurangi biaya sewa tempat usaha terpisah.\n\n**Rekomendasi Lebih Detail per Bagian:**\n\n*   **Area Depan (Dengan Kanopi):**\n    *   **Potensi:** Parkir kendaraan, area tunggu jika dijadikan toko atau kantor.\n    *   **Rekomendasi:**\n        *   Hunian: Rapikan area ini dan tambahkan tanaman hias agar lebih asri.\n        *   Usaha: Pastikan area ini bersih dan rapi, tambahkan signage yang jelas untuk menarik perhatian.\n*   **Fasad:**\n    *   **Potensi:** Daya tarik utama bangunan.\n    *   **Rekomendasi:**\n        *   Hunian: Pertahankan desain yang sudah ada, tambahkan sentuhan personal seperti nomor rumah yang unik atau hiasan dinding.\n        *   Usaha: Gunakan fasad untuk menampilkan identitas brand, pasang logo dan nama toko yang mudah dilihat.\n\n**Kesimpulan:**\n\nSecara keseluruhan, kontrakan ini memiliki potensi besar sebagai hunian yang nyaman dan modern. Dengan sedikit penyesuaian, kontrakan ini juga bisa berfungsi sebagai tempat usaha kecil atau kombinasi hunian dan usaha.\n\nSemoga analisis ini bermanfaat!",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah di perumahan Joyogrand\n\nfasilitas nya :\n- 2 kamar tidur\n- 2 ac\n- kulkas\n- 3 kasur (1 queen bed, trundle bed (kasur atas bawah))\n- bantal dan guling\n- sofa\n- lemari\n- meja & kursi makan\n- meja kecil\n- kompor\n- piring dan gelas\n- tempat jemuran\n- kamar mandi wc duduk + shower",
      "jumlah_peminat": 0
    },
    {
      "nomer": 196,
      "kota": "Malang",
      "latitude": -7.945487825738965,
      "longitude": 112.62287236926744,
      "harga_sewa": "9000000",
      "label_harga_sewa": "Rp9jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250726140055_98568.jpeg",
      "deskripsi_visual_kontrakan": "Baik, berikut adalah deskripsi visual detail dan komprehensif dari kontrakan ini, ditujukan bagi Anda para calon penyewa:\n\n**Deskripsi Bangunan dan Lingkungan**\n\nKontrakan ini memiliki tampilan yang unik dan mencolok dengan dominasi warna pink cerah pada dinding eksterior. Kombinasi warna kuning dan hijau pada kusen jendela dan pagar memberikan sentuhan yang lebih ceria. Bentuk bangunannya sederhana, kemungkinan merupakan bangunan tunggal atau bagian dari deretan kontrakan serupa.\n\n*   **Fasad Depan:** Bagian depan rumah memiliki teras yang cukup luas, ditutupi oleh atap untuk memberikan perlindungan dari panas dan hujan. Lantai teras dilapisi keramik berwarna putih. Pintu masuk utama terletak di tengah, dengan jendela besar di sampingnya. Pagar pendek dengan warna hijau membatasi area teras di satu sisi, memberikan sedikit privasi.\n*   **Warna dan Desain:** Warna pink yang dominan memberikan kesan ceria dan ramah. Namun, warna ini mungkin perlu dipertimbangkan jika Anda memiliki preferensi warna yang berbeda.\n*   **Lingkungan:** Dari gambar, terlihat bahwa kontrakan ini berada di lingkungan pemukiman yang cukup padat.\n\n**Potensi Penggunaan dan Rekomendasi Peruntukan**\n\nSetelah mengamati gambar dengan seksama, berikut adalah potensi penggunaan dan rekomendasi peruntukan untuk kontrakan ini:\n\n1.  **Hunian:**\n    *   **Potensi:** Dengan teras yang cukup luas dan tata letak yang kemungkinan sederhana, kontrakan ini cocok untuk keluarga kecil atau pasangan muda. Warna cerah dan suasana yang hangat dapat menciptakan lingkungan yang nyaman untuk ditinggali.\n    *   **Rekomendasi:** Sangat cocok untuk hunian. Lingkungan yang padat penduduk menunjukkan adanya interaksi sosial yang baik, dan suasana yang ceria dapat meningkatkan kualitas hidup.\n    *   **Alasan:** Ukuran yang mungkin cukup untuk keluarga kecil, teras yang nyaman, dan suasana yang ramah.\n2.  **Tempat Usaha (Toko Kecil/Warung):**\n    *   **Potensi:** Lokasi di lingkungan pemukiman yang padat dapat menjadi keuntungan untuk membuka toko kecil atau warung. Teras dapat digunakan sebagai area display atau tempat duduk sederhana.\n    *   **Rekomendasi:** Cocok untuk toko kecil/warung jika Anda mempertimbangkan faktor lingkungan yang padat dan potensi pelanggan yang ada.\n    *   **Alasan:** Lokasi strategis di lingkungan pemukiman, teras yang dapat dimanfaatkan untuk display, dan visibilitas yang baik.\n3.  **Kombinasi Hunian dan Usaha:**\n    *   **Potensi:** Jika Anda memiliki usaha kecil yang tidak memerlukan ruang terlalu besar, kontrakan ini dapat menjadi solusi untuk menggabungkan tempat tinggal dan tempat usaha.\n    *   **Rekomendasi:** Cukup cocok untuk kombinasi hunian dan usaha kecil. Pastikan tata letak interior mendukung kebutuhan keduanya.\n    *   **Alasan:** Fleksibilitas penggunaan ruang, efisiensi biaya, dan kemudahan akses antara tempat tinggal dan tempat usaha.\n4.  **Gudang:**\n    *   **Potensi:** Jika Anda memiliki kebutuhan penyimpanan barang yang tidak terlalu besar, kontrakan ini dapat menjadi pilihan.\n    *   **Rekomendasi:** Kurang cocok untuk gudang, kecuali jika Anda hanya memiliki sedikit barang yang perlu disimpan.\n    *   **Alasan:** Ukuran yang mungkin terbatas dan kurangnya fasilitas khusus untuk penyimpanan barang.\n5.  **Kantor:**\n    *   **Potensi:** Kurang cocok untuk kantor, kecuali kantor kecil yang tidak banyak memerlukan tempat\n    *   **Rekomendasi:** Kurang cocok untuk kantor, karena tampilan eksterior yang mungkin tidak sesuai dengan citra profesional yang ingin ditampilkan.\n    *   **Alasan:** Warna cerah dan suasana yang kurang formal mungkin tidak ideal untuk lingkungan kantor.\n\n**Catatan Tambahan untuk Calon Penyewa:**\n\n*   **Tata Letak Interior:** Sebelum memutuskan untuk menyewa, penting untuk mengetahui tata letak interior kontrakan ini. Apakah memiliki kamar tidur yang cukup? Apakah dapur dan kamar mandi dalam kondisi baik?\n*   **Kondisi Bangunan:** Periksa dengan seksama kondisi bangunan, termasuk atap, dinding, dan lantai. Pastikan tidak ada kerusakan yang signifikan yang dapat menyebabkan masalah di kemudian hari.\n*   **Fasilitas:** Tanyakan kepada pemilik kontrakan mengenai fasilitas yang tersedia, seperti air, listrik, dan akses internet.\n*   **Lingkungan:** Luangkan waktu untuk mengamati lingkungan sekitar kontrakan. Apakah aman dan nyaman untuk ditinggali atau menjalankan usaha?\n\nSemoga deskripsi ini membantu Anda dalam mempertimbangkan kontrakan ini. Jangan ragu untuk mengajukan pertanyaan lebih lanjut jika Anda memiliki keraguan. Terima kasih!",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah di Kendalsari dekat suhat, malang\n\nRumah sederhana dan murah\n1 kamar tidur\nAkses Mobil\nLokasi di tengah",
      "jumlah_peminat": 0
    },
    {
      "nomer": 197,
      "kota": "Malang",
      "latitude": -7.961940138878209,
      "longitude": 112.6016153768938,
      "harga_sewa": "33000000",
      "label_harga_sewa": "Rp33jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250726230859_4120.jpeg",
      "deskripsi_visual_kontrakan": "Tentu, mari kita lihat detail kontrakan ini dan pertimbangkan potensi penggunaannya.\n\n**Deskripsi Visual Kontrakan**\n\nDari gambar yang Anda berikan, berikut adalah deskripsi visual yang detail:\n\n*   **Bentuk dan Gaya Bangunan:** Kontrakan ini memiliki desain yang sederhana dan fungsional. Tampaknya merupakan bangunan satu lantai dengan atap genteng. Gaya arsitekturnya cenderung minimalis, dengan garis-garis lurus dan tidak banyak ornamen. Jendela depan berukuran sedang dengan model minimalis.\n\n*   **Eksterior:** Dinding luar dicat dengan warna krem atau *beige* yang lembut. Terdapat roster beton di bagian depan, yang berfungsi sebagai ventilasi dan memberikan sedikit privasi. Pagar depan terbuat dari besi dengan desain sederhana, dicat warna merah bata.\n\n*   **Lingkungan:** Terletak di lingkungan perumahan dengan jalan yang cukup lebar di depannya. Suasana tampak tenang dan cukup padat. Ada rumah lain di sampingnya, dan terlihat ada utilitas umum (tiang listrik) di dekatnya.\n\n**Potensi Penggunaan dan Rekomendasi Peruntukan**\n\nKepada calon penyewa, inilah beberapa pertimbangan dan rekomendasi:\n\n*   **Hunian:**\n    *   **Cocok:** Kontrakan ini sangat cocok untuk hunian, terutama bagi keluarga kecil atau pasangan muda. Suasana yang tenang dan lingkungan yang ramah keluarga menjadi nilai tambah.\n    *   **Alasan:** Desain rumah yang sederhana dan fungsional akan mudah diatur.\n*   **Tempat Usaha (Kantor/Toko/Cafe):**\n    *   **Kurang Cocok:** Dengan mempertimbangkan posisi bangunan yang sedikit masuk dari jalan utama dan juga lebar bangunan, maka kurang cocok jika diperuntukan sebagai tempat usaha karena daya tarik pengunjung kurang.\n    *   **Alasan:** Dengan mempertimbangkan posisi bangunan yang sedikit masuk dari jalan utama dan juga lebar bangunan, maka kurang cocok jika diperuntukan sebagai tempat usaha karena daya tarik pengunjung kurang.\n*   **Gudang:**\n    *   **Tidak Cocok:** Ruang yang terbatas pada kontrakan ini membuatnya kurang ideal untuk digunakan sebagai gudang. Akan lebih cocok untuk usaha yang membutuhkan tempat penyimpanan yang lebih besar.\n\n**Rekomendasi Akhir**\n\nDengan mempertimbangkan semua faktor, **rekomendasi terbaik untuk kontrakan ini adalah sebagai hunian.** Lokasinya yang berada di lingkungan perumahan yang tenang menjadikannya tempat yang nyaman untuk tinggal.\n\nSemoga penjelasan ini membantu Anda dalam mempertimbangkan apakah kontrakan ini sesuai dengan kebutuhan Anda.",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah di daerah Tidar, malang\n\n3 kamar tidur\n1 kamar mandi (WC duduk)\nGarasi parkiran mobil kecil\nRuang tamu\nJemuran di lantai 2\nDapur\nRuang keluarga\nAkses mobil",
      "jumlah_peminat": 0
    },
    {
      "nomer": 198,
      "kota": "Malang",
      "latitude": -7.938399072651964,
      "longitude": 112.62911465232547,
      "harga_sewa": "20000000",
      "label_harga_sewa": "Rp20jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250821110703_66311.jpeg",
      "deskripsi_visual_kontrakan": "Baik, mari kita bedah potensi kontrakan ini untuk Anda sebagai calon penyewa:\n\n**Deskripsi Visual:**\n\n*   **Eksterior:** Kontrakan ini memiliki tampilan depan yang cukup sederhana. Fasadnya didominasi oleh pagar besi berwarna hitam dan tembok dengan ornamen berwarna biru dan kuning. Terdapat kanopi sederhana yang menutupi bagian teras depan. Di depan kontrakan, terdapat sebuah spanduk yang menutupi sebagian fasad. Pintu masuk berupa pintu besi dengan jendela kecil di bagian atas. Secara keseluruhan, gaya bangunannya bisa dibilang minimalis dan fungsional.\n*   **Lingkungan:** Dari gambar, terlihat bahwa kontrakan berada di lingkungan yang cukup ramai. Terdapat papan reklame dan aktivitas di sekitarnya, yang mengindikasikan bahwa lokasi ini berada di area yang cukup strategis. Suasana di sekitar kontrakan terlihat cukup hidup, terutama di malam hari.\n\n**Potensi Penggunaan dan Rekomendasi Peruntukan:**\n\nSetelah mempertimbangkan visual dan lokasi, berikut adalah beberapa rekomendasi peruntukan untuk kontrakan ini:\n\n1.  **Tempat Usaha (Kantor/Toko/Cafe Sederhana):**\n\n    *   **Alasan:** Lokasi yang strategis dengan lingkungan yang ramai menjanjikan visibilitas yang baik untuk usaha Anda. Area depan yang cukup luas dapat dimanfaatkan sebagai ruang display atau area tunggu pelanggan. Kontrakan ini ideal untuk toko kelontong, warung makan sederhana, atau kantor kecil.\n2.  **Hunian:**\n\n    *   **Alasan:** Walaupun berada di area yang ramai, kontrakan ini tetap bisa dijadikan hunian yang nyaman. Dengan penataan interior yang tepat, Anda bisa menciptakan suasana yang tenang dan pribadi. Lokasi yang strategis juga memudahkan akses ke berbagai fasilitas umum seperti pasar, sekolah, dan transportasi.\n3.  **Kombinasi Hunian dan Usaha:**\n\n    *   **Alasan:** Jika Anda memiliki usaha kecil yang bisa dijalankan dari rumah, kontrakan ini sangat cocok. Bagian depan bisa difungsikan sebagai tempat usaha, sementara bagian belakang bisa dijadikan area pribadi untuk beristirahat.\n\n**Rekomendasi Lebih Detail:**\n\n*   **Area Depan (Teras):** Ideal untuk area display produk (jika digunakan sebagai toko), area tunggu pelanggan (jika digunakan sebagai kantor/cafe), atau area santai di sore hari (jika digunakan sebagai hunian).\n*   **Ruang Utama:** Bisa difungsikan sebagai ruang kerja (jika digunakan sebagai kantor), ruang display produk (jika digunakan sebagai toko), ruang makan/ruang keluarga (jika digunakan sebagai hunian), atau area produksi (jika digunakan sebagai usaha rumahan).\n*   **Area Belakang:** Bisa difungsikan sebagai dapur, kamar mandi, atau ruang penyimpanan barang.\n\n**Penting untuk Diperhatikan:**\n\n*   **Renovasi:** Perlu dipertimbangkan untuk melakukan renovasi kecil agar tampilan kontrakan lebih menarik dan sesuai dengan kebutuhan Anda.\n*   **Kebersihan:** Pastikan untuk membersihkan kontrakan secara menyeluruh sebelum digunakan.\n*   **Keamanan:** Periksa keamanan kontrakan, terutama pagar dan pintu, untuk memastikan keamanan barang-barang Anda.\n\nSemoga deskripsi ini membantu Anda dalam mempertimbangkan kontrakan ini. Selamat berburu kontrakan!",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah lokasi di Jl. Suhat, Malang Kota\n\nInformasi Kontrakan:\n- Harga Sewa: Rp 20 Juta per tahun.\n- Fasilitasnya: 3 kamar tidur, 1 kamar mandi, Parkiran mobil\n- Kondisi: Bersih, Terawat\n- Kelengkapan: Kosongan\n\nInformasi Tambahan:\n- Parkir: Bisa Mobil atau motor\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?\n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 199,
      "kota": "Malang",
      "latitude": -7.9444365852101875,
      "longitude": 112.63402161518785,
      "harga_sewa": "17500000",
      "label_harga_sewa": "Rp17,5jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250821112349_5967.jpeg",
      "deskripsi_visual_kontrakan": "Baik, berikut deskripsi visual kontrakan beserta rekomendasi peruntukannya, ditujukan untuk calon penyewa:\n\n**Deskripsi Visual:**\n\nDari gambar yang Anda berikan, terlihat kontrakan ini memiliki karakteristik sebagai berikut:\n\n*   **Bentuk dan Gaya Bangunan:** Bangunan ini bergaya sederhana, dengan atap pelana (segitiga) yang umum ditemui pada rumah-rumah di daerah perkampungan atau perumahan lama. Terdapat teras depan yang cukup luas dengan lantai yang ditinggikan beberapa anak tangga. Tampak depan bangunan didominasi oleh material tembok yang dicat dengan warna biru dan abu-abu yang sudah memudar.\n*   **Kondisi Fisik:** Secara umum, bangunan terlihat cukup tua dan memerlukan beberapa perbaikan atau renovasi. Cat dinding tampak mengelupas, dan beberapa bagian bangunan terlihat kotor atau berlumut. Atap terbuat dari seng.\n*   **Lingkungan:** Kontrakan ini terletak di tepi jalan yang terlihat tidak terlalu ramai. Di sekitarnya terdapat bangunan rumah tinggal lainnya, dan suasana lingkungannya tampak cukup tenang. Terlihat adanya dekorasi bendera merah putih, menandakan nuansa nasionalis dan kemungkinan kegiatan kemasyarakatan di lingkungan tersebut.\n\n**Potensi Penggunaan dan Rekomendasi Peruntukan:**\n\nMelihat kondisi dan lokasi kontrakan, berikut potensi penggunaan dan rekomendasi peruntukan beserta alasannya:\n\n1.  **Hunian (Rumah Tinggal):**\n\n    *   **Potensi:** Kontrakan ini memiliki potensi untuk dijadikan hunian, terutama bagi keluarga kecil atau pasangan muda yang mencari tempat tinggal dengan harga terjangkau.\n    *   **Rekomendasi:** Cocok untuk hunian sederhana setelah dilakukan renovasi.\n    *   **Alasan:**\n        *   Lingkungan yang relatif tenang dan aman.\n        *   Teras depan dapat dimanfaatkan sebagai ruang santai atau tempat bermain anak.\n        *   Ukuran yang mungkin cukup untuk keluarga kecil.\n    *   **Catatan:** Perlu renovasi untuk meningkatkan kenyamanan dan estetika, seperti pengecatan ulang, perbaikan atap jika bocor, dan penataan interior.\n\n2.  **Tempat Usaha (Warung/Toko Kecil):**\n\n    *   **Potensi:** Lokasi di tepi jalan (meskipun tidak terlalu ramai) memberikan potensi untuk membuka usaha kecil, seperti warung kelontong, toko makanan ringan, atau usaha sejenis yang tidak membutuhkan ruang terlalu besar.\n    *   **Rekomendasi:** Dapat dipertimbangkan sebagai tempat usaha setelah dilakukan penyesuaian tata ruang dan tampilan depan.\n    *   **Alasan:**\n        *   Aksesibilitas yang cukup baik bagi pelanggan.\n        *   Teras depan dapat dimanfaatkan sebagai area display atau tempat duduk pelanggan.\n        *   Biaya sewa yang mungkin lebih terjangkau dibandingkan lokasi komersial lain.\n    *   **Catatan:** Perlu memperhatikan perizinan usaha dan persaingan di sekitar lokasi.\n\n3.  **Kombinasi Hunian dan Usaha:**\n\n    *   **Potensi:** Kontrakan ini juga bisa menjadi solusi bagi Anda yang ingin menjalankan usaha dari rumah (home business).\n    *   **Rekomendasi:** Sebagian ruang dapat difungsikan sebagai area usaha, sementara bagian lain sebagai tempat tinggal.\n    *   **Alasan:**\n        *   Menghemat biaya sewa terpisah untuk rumah dan tempat usaha.\n        *   Fleksibilitas dalam mengatur waktu kerja dan aktivitas rumah tangga.\n    *   **Catatan:** Perlu penataan ruang yang cermat agar fungsi hunian dan usaha dapat berjalan harmonis.\n\n**Kesimpulan:**\n\nKontrakan ini menawarkan fleksibilitas dalam peruntukannya, tergantung pada kebutuhan dan preferensi Anda. Jika Anda mencari tempat tinggal dengan harga terjangkau, bangunan ini bisa menjadi pilihan yang menarik setelah dilakukan renovasi. Jika Anda ingin memulai usaha kecil-kecilan, lokasi dan tata ruangnya juga memiliki potensi yang bisa dimanfaatkan. Atau, Anda bisa menggabungkan keduanya, menjadikan kontrakan ini sebagai tempat tinggal sekaligus sumber penghasilan.\n\n**Sebagai calon penyewa, pertimbangkan hal-hal berikut sebelum memutuskan:**\n\n*   **Kondisi Fisik:** Perhatikan secara seksama kondisi fisik bangunan dan perkirakan biaya renovasi yang mungkin diperlukan.\n*   **Lingkungan:** Amati suasana lingkungan sekitar, tingkat keamanan, dan fasilitas umum yang tersedia.\n*   **Aksesibilitas:** Pastikan lokasi mudah diakses oleh Anda, keluarga, atau pelanggan jika Anda berencana membuka usaha.\n*   **Perizinan:** Jika Anda berencana membuka usaha, pastikan Anda memahami dan dapat memenuhi persyaratan perizinan yang berlaku.\n\nSemoga informasi ini bermanfaat bagi Anda dalam mempertimbangkan kontrakan ini. Silakan hubungi pemilik kontrakan untuk informasi lebih detail dan negosiasi harga.",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah lokasi di Jl. Telaga Wangi, Malang Kota\n\nInformasi Kontrakan:\n- Harga Sewa: Rp 17,5 Juta per tahun.\n- Fasilitasnya: 2 Kamar tidur, 1 kamar mandi, ruang tamu, dapur.\n- Kondisi: Terawat.\n- Kelengkapan: Kosongan.\n\nInformasi Tambahan:\n- Parkir: Bisa parkir Mobil dan sepeda motor\n- Akses: Akses Mobil. rumah pinggir jalan raya.\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?\n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 200,
      "kota": "Malang",
      "latitude": -7.955956035775945,
      "longitude": 112.63255490562571,
      "harga_sewa": "25000000",
      "label_harga_sewa": "Rp25jt",
      "ketersediaan": "Tidak Tersedia",
      "foto_kontrakan": "20250821114315_39849.jpeg",
      "deskripsi_visual_kontrakan": "Baik, mari kita bedah potensi kontrakan ini secara detail:\n\n**Deskripsi Visual:**\n\n*   **Bentuk dan Gaya Bangunan:** Rumah ini memiliki gaya minimalis modern yang cukup sederhana. Terlihat dari bentuknya yang kotak, garis-garis yang bersih, dan penggunaan warna krem yang hangat. Terdapat teras depan yang cukup luas dengan pilar-pilar penyangga yang menambah kesan kokoh. Atapnya menggunakan genteng dengan sedikit ornamen pada bagian tepi. Jendela dan pintu kayu berwarna coklat tua memberikan kontras yang menarik dengan warna dinding.\n*   **Gerbang dan Pagar:** Gerbang besi berwarna hitam dengan ujung-ujung yang runcing memberikan kesan aman dan privat. Pagar sebagian terbuat dari tembok bata yang dilapisi keramik, memberikan sentuhan estetika yang menarik. Ada tanaman hias di depan pagar, memberikan sedikit kesegaran.\n*   **Lingkungan dan Suasana:** Dari gambar, terlihat bahwa kontrakan ini berada di lingkungan perumahan yang cukup padat. Jalan di depan rumah terlihat cukup lebar. Terdapat bangunan lain di sekitarnya, termasuk masjid yang terlihat dari kejauhan. Suasana secara umum terlihat tenang dan kondusif untuk tempat tinggal.\n\n**Potensi Penggunaan dan Rekomendasi Peruntukan:**\n\nBerdasarkan pengamatan saya, kontrakan ini paling cocok untuk:\n\n*   **Hunian (Rumah Tinggal):** Ini adalah opsi yang paling ideal. Alasan:\n    *   **Layout yang Mendukung:** Bentuk bangunan menunjukkan bahwa kontrakan ini dirancang sebagai rumah tinggal. Teras depan yang luas bisa menjadi tempat bersantai atau bermain anak-anak.\n    *   **Keamanan dan Privasi:** Gerbang besi dan pagar memberikan rasa aman dan privasi bagi penghuni.\n    *   **Lingkungan yang Kondusif:** Lokasinya di perumahan yang tenang mendukung kualitas hidup yang baik. Keberadaan masjid di dekatnya bisa menjadi nilai tambah bagi keluarga Muslim.\n*   **Kombinasi Hunian dan Usaha Kecil (Kantor/Toko Online):** Jika Anda memiliki usaha kecil yang tidak memerlukan display produk secara fisik, kontrakan ini bisa menjadi solusi yang menarik.\n    *   **Ruang Depan Fleksibel:** Teras depan bisa digunakan sebagai area penerima tamu atau ruang tunggu kecil.\n    *   **Efisiensi Biaya:** Menggabungkan tempat tinggal dan tempat usaha dapat menghemat biaya sewa dan transportasi.\n*   **Tidak Disarankan untuk:**\n    *   **Gudang:** Bentuk dan desain bangunan tidak optimal untuk penyimpanan barang dalam skala besar.\n    *   **Kafe/Restoran:** Lokasinya di area perumahan kurang strategis untuk menarik pelanggan secara langsung. Selain itu, perlu modifikasi yang signifikan untuk memenuhi standar kebersihan dan keamanan pangan.\n\n**Mengapa Anda Harus Tertarik dengan Kontrakan Ini:**\n\n1.  **Kenyamanan dan Keamanan Terjamin:** Bayangkan Anda pulang kerja dan disambut oleh suasana rumah yang tenang dan aman. Gerbang besi yang kokoh memberikan rasa nyaman dan tenang.\n2.  **Lokasi Strategis:** Meskipun berada di lingkungan perumahan yang tenang, kontrakan ini kemungkinan besar memiliki akses mudah ke fasilitas publik seperti sekolah, pasar, dan transportasi umum. (Anda perlu memastikan ini dengan bertanya langsung kepada pemilik kontrakan).\n3.  **Fleksibilitas Penggunaan:** Jika Anda seorang pengusaha kecil, kontrakan ini bisa menjadi solusi hemat biaya untuk menggabungkan tempat tinggal dan tempat usaha.\n4.  **Potensi untuk Disesuaikan:** Dengan sedikit sentuhan kreatif, Anda bisa mengubah teras depan menjadi ruang terbuka yang nyaman untuk bersantai atau berkumpul bersama keluarga dan teman. Tambahkan tanaman hias atau perabotan outdoor untuk menciptakan suasana yang lebih hidup dan menarik.\n5.  **Harga yang Kompetitif:** Jika kontrakan ini ditawarkan dengan harga yang wajar, ini adalah kesempatan yang bagus untuk mendapatkan tempat tinggal yang nyaman dan strategis.\n\n**Tips Tambahan:**\n\n*   **Periksa Kondisi Interior:** Pastikan untuk memeriksa kondisi interior rumah secara detail. Perhatikan kualitas lantai, dinding, atap, dan instalasi listrik. Tanyakan kepada pemilik kontrakan apakah ada perbaikan yang perlu dilakukan sebelum Anda pindah.\n*   **Tanyakan tentang Fasilitas:** Tanyakan fasilitas yang tersedia, seperti air, listrik, dan internet. Pastikan fasilitas tersebut berfungsi dengan baik dan sesuai dengan kebutuhan Anda.\n*   **Negosiasi Harga:** Jangan ragu untuk bernegosiasi harga sewa dengan pemilik kontrakan. Bandingkan harga sewa dengan kontrakan lain di sekitar area tersebut untuk mendapatkan harga yang terbaik.\n*   **Buat Perjanjian Sewa yang Jelas:** Pastikan untuk membuat perjanjian sewa yang jelas dan rinci. Perjanjian sewa harus mencantumkan hak dan kewajiban masing-masing pihak, jangka waktu sewa, harga sewa, dan ketentuan lainnya.\n\nSemoga deskripsi ini membantu Anda dalam mengambil keputusan! Jangan ragu untuk bertanya jika Anda memiliki pertanyaan lebih lanjut.",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah lokasi di Jl. Selorejo, Lowokwaru, Malang Kota\n\nInformasi Kontrakan:\n- Harga Sewa: Rp 25 Juta per tahun.\n- Fasilitasnya: 3 Kamar tidur, 1 kamar mandi, dapur, ruang tamu, Tempat jemur baju.\n- Kondisi: Terawat dan bersih.\n- Kelengkapan: Kosongan.\n\nInformasi Tambahan:\n- Parkir: Muat 1 Mobil dan 2 motor\n- Akses Jalan: Mobil\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?\n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 201,
      "kota": "Malang",
      "latitude": -7.9427927351397285,
      "longitude": 112.60769665800574,
      "harga_sewa": "29000000",
      "label_harga_sewa": "Rp29jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250824120747_95420.jpg",
      "deskripsi_visual_kontrakan": "Tentu, mari kita telaah kontrakan ini secara mendalam!\n\n**Deskripsi Visual:**\n\n*   **Bentuk dan Gaya Bangunan:** Dari gambar, terlihat kontrakan ini memiliki gaya arsitektur yang sederhana namun fungsional. Bangunan didominasi oleh bentuk persegi panjang, dengan finishing dinding berwarna hijau cerah yang memberikan kesan segar dan ceria. Terdapat teras depan yang cukup luas dengan pagar besi yang menambah keamanan dan privasi. Atapnya kemungkinan besar berupa atap genteng, umum untuk rumah-rumah di Indonesia.\n*   **Suasana dan Lingkungan:** Lokasinya terlihat berada di lingkungan padat penduduk, dengan rumah-rumah berdempetan. Namun, adanya teras dan pagar memberikan sedikit ruang pribadi. Dari foto atap, terlihat potensi untuk menjemur pakaian atau bersantai di area terbuka.\n*   **Interior:** Interior kontrakan terlihat sederhana dengan lantai keramik putih yang mudah dibersihkan. Dinding interior juga didominasi warna hijau, menciptakan kesinambungan dengan eksterior. Beberapa ruangan terlihat cukup luas dan terang, dengan pencahayaan alami dari jendela. Ada juga beberapa perabotan dasar seperti lemari, meja, dan kursi yang mungkin sudah termasuk dalam kontrakan.\n\n**Potensi Penggunaan dan Rekomendasi Peruntukan:**\n\nMari kita bedah setiap bagian kontrakan:\n\n*   **Ruang Depan/Teras:**\n    *   **Potensi:** Area ini sangat ideal sebagai ruang tamu semi-terbuka, tempat menerima tamu, atau sekadar bersantai menikmati udara segar. Pagar besi memberikan keamanan tambahan.\n    *   **Rekomendasi:** Sangat cocok untuk **kombinasi hunian dan tempat usaha kecil**. Misalnya, jika Anda memiliki usaha rumahan seperti menjahit, berjualan makanan ringan, atau jasa lainnya, teras ini bisa dimanfaatkan sebagai area display atau tempat melayani pelanggan.\n    *   **Alasan:** Lokasi yang strategis di lingkungan padat penduduk memungkinkan visibilitas yang baik untuk usaha Anda.\n*   **Ruang Tengah:**\n    *   **Potensi:** Ruangan ini adalah jantung dari kontrakan, dapat difungsikan sebagai ruang keluarga, ruang makan, atau bahkan area kerja.\n    *   **Rekomendasi:** **Hunian dan/atau Kantor**. Jika untuk hunian, tata ruangan dengan sofa, meja TV, dan perabotan lainnya untuk menciptakan ruang keluarga yang nyaman. Jika untuk kantor, ruangan ini bisa menjadi area kerja tim atau ruang rapat.\n    *   **Alasan:** Ukuran ruangan yang cukup luas memberikan fleksibilitas dalam penataan dan pemanfaatan.\n*   **Kamar Tidur:**\n    *   **Potensi:** Kamar tidur adalah ruang pribadi untuk beristirahat dan menyimpan barang-barang pribadi.\n    *   **Rekomendasi:** Jelas, **Hunian**. Pastikan pencahayaan cukup dan ventilasi baik untuk menciptakan lingkungan tidur yang sehat.\n    *   **Alasan:** Adanya jendela dan ukuran yang memadai memberikan kenyamanan bagi penghuni.\n*   **Dapur:**\n    *   **Potensi:** Dapur adalah tempat untuk menyiapkan makanan dan mencuci peralatan makan.\n    *   **Rekomendasi:** **Hunian dan/atau Produksi Makanan Skala Kecil**. Jika Anda hobi memasak atau memiliki usaha kuliner rumahan, dapur ini bisa dioptimalkan dengan menambahkan peralatan memasak yang memadai.\n    *   **Alasan:** Adanya bak cuci dan lemari dapur dasar memudahkan aktivitas memasak.\n*   **Area Atap/Jemuran:**\n    *   **Potensi:** Area ini sangat bermanfaat untuk menjemur pakaian, menyimpan barang-barang yang jarang digunakan, atau bahkan membuat taman atap kecil.\n    *   **Rekomendasi:** **Hunian dan/atau Gudang Ringan**. Jika Anda membutuhkan ruang penyimpanan tambahan, area atap bisa dimanfaatkan dengan membuat rak atau lemari penyimpanan.\n    *   **Alasan:** Ruang terbuka memberikan fleksibilitas dalam pemanfaatan, terutama untuk keperluan praktis seperti menjemur pakaian.\n\n**Mengapa Anda Harus Tertarik dengan Kontrakan Ini:**\n\n1.  **Lokasi Strategis:** Berada di lingkungan padat penduduk memberikan potensi besar untuk usaha rumahan atau bisnis kecil.\n2.  **Fleksibilitas Penggunaan:** Kontrakan ini dapat diadaptasi untuk berbagai keperluan, mulai dari hunian nyaman hingga tempat usaha yang produktif.\n3.  **Kondisi Terawat:** Meskipun sederhana, kontrakan ini terlihat bersih dan terawat, siap untuk Anda tempati atau gunakan untuk bisnis Anda.\n4.  **Harga Terjangkau:** Kemungkinan besar, kontrakan dengan fitur-fitur dasar seperti ini memiliki harga sewa yang lebih terjangkau dibandingkan dengan properti yang lebih mewah. Ini adalah keuntungan besar, terutama jika Anda baru memulai usaha atau memiliki anggaran terbatas.\n5.  **Potensi Kreatif:** Dengan sentuhan dekorasi dan penataan yang tepat, Anda dapat mengubah kontrakan ini menjadi ruang yang unik dan sesuai dengan kepribadian atau merek bisnis Anda.\n\n**Tips Tambahan:**\n\n*   **Negosiasi:** Jangan ragu untuk bernegosiasi harga sewa dengan pemilik kontrakan.\n*   **Perjanjian Sewa:** Pastikan Anda membuat perjanjian sewa yang jelas dan tertulis, mencantumkan hak dan kewajiban kedua belah pihak.\n*   **Renovasi Ringan:** Jika diperlukan, bicarakan dengan pemilik kontrakan tentang kemungkinan renovasi ringan untuk menyesuaikan kontrakan dengan kebutuhan Anda.\n\nSemoga deskripsi ini membantu Anda membuat keputusan yang tepat! Jangan ragu untuk bertanya jika Anda memiliki pertanyaan lebih lanjut.",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah lokasi di Jl. Gajayana, Malang kota dekat kampus UB\n\nInformasi Kontrakan:\n- Harga Sewa: Rp 29 Juta per tahun.\n- Fasilitasnya: 5 kamar tidur, 2 kamar mandi, ruang tamu, dapur, tempat jemur baju.\n- Kondisi: Baru direnovasi dan dibersihkan. Rumah Terawat.\n- Kelengkapan: Kulkas, Kompor, Kasur, Lemari, Meja kursi, dll.\n\nInformasi Tambahan:\n- Listrik: Token, daya 900 watt.\n- Air: PDAM.\n- Parkir: 8 Sepeda Motor.\n- Akses Jalan: Motor.\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?\n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    },
    {
      "nomer": 202,
      "kota": "Malang",
      "latitude": -7.925233869490548,
      "longitude": 112.60785277351518,
      "harga_sewa": "20000000",
      "label_harga_sewa": "Rp20jt",
      "ketersediaan": "Tersedia",
      "foto_kontrakan": "20250824130202_20174.jpeg",
      "deskripsi_visual_kontrakan": "Berdasarkan gambar dan video yang Anda berikan, berikut adalah deskripsi detail tentang rumah kontrakan tersebut.\n\n### Deskripsi Rumah Kontrakan\n\nRumah ini memiliki gaya arsitektur yang sederhana dan fungsional, ideal untuk berbagai keperluan. Tampak depan rumah dicat dengan warna hijau muda, dilengkapi dengan pagar kayu berwarna coklat tua dan besi hitam yang terpasang di atas fondasi semen berwarna hijau tua, serasi dengan cat dinding utama. Halaman depan cukup luas, dapat digunakan sebagai tempat parkir sepeda motor atau area santai. Lingkungan sekitarnya terlihat bersih, tenang, dan asri dengan beberapa tanaman hias di teras rumah. Jalan di depan rumah cukup lebar dan terbuat dari aspal yang terawat dengan baik.\n\n---\n\n### Peruntukan dan Tata Letak Ruangan\n\nBerikut adalah detail tata letak dan peruntukan setiap ruangan:\n\n* **Ruang Tamu:** Ruangan pertama setelah pintu masuk memiliki lantai keramik putih bersih dan dinding berwarna krem cerah. Ukurannya cukup lapang, ideal untuk menempatkan kursi tamu dan meja. Sebuah jendela besar dengan kusen kayu memberikan pencahayaan alami dan sirkulasi udara yang baik.\n\n* **Kamar Tidur:** Rumah ini memiliki dua kamar tidur. Ruang kamar pertama berukuran sedang, cukup untuk menempatkan satu ranjang dan lemari. Kamar kedua berukuran sedikit lebih kecil, cocok sebagai kamar anak atau ruang kerja. Keduanya memiliki lantai keramik putih yang sama dengan ruang tamu.\n\n* **Kamar Mandi:** Kamar mandi terletak di dalam rumah, memiliki dinding keramik berwarna hitam dan lantai keramik coklat kemerahan. Dilengkapi dengan toilet jongkok dan bak penampungan air, desainnya sederhana namun fungsional.\n\n* **Dapur:** Area dapur memiliki meja dan wastafel yang terbuat dari semen dan dilapisi keramik. Ukurannya pas untuk kebutuhan memasak sehari-hari, dan Anda bisa menambahkan lemari dapur sesuai selera.\n\n* **Ruang Belakang/Area Terbuka:** Terdapat area belakang yang masih dalam kondisi mentah dengan lantai semen dan dinding yang belum diplester. Area ini dapat digunakan sebagai gudang, area jemur pakaian, atau direnovasi menjadi ruang makan. Terdapat pintu yang mengarah langsung ke area ini, memberikan akses mudah untuk berbagai keperluan.\n\n---\n\n### Rekomendasi Penggunaan dan Alasan Pendukung\n\nRumah kontrakan ini sangat cocok untuk **hunian pribadi** atau **rumah kantor (home office)**.\n\n**Alasan kuat mengapa rumah ini cocok:**\n\n* **Fungsional dan Siap Huni:** Tata letak ruangan sudah tertata dengan baik. Dengan lantai keramik bersih, dinding yang baru dicat, dan kamar mandi serta dapur yang sudah tersedia, rumah ini siap untuk segera ditempati tanpa perlu banyak perbaikan.\n* **Akses dan Lingkungan Strategis:** Berada di pinggir jalan yang cukup lebar, rumah ini mudah diakses oleh kendaraan. Lingkungan yang tenang dan asri menawarkan kenyamanan maksimal untuk istirahat setelah beraktivitas seharian.\n* **Potensi Pengembangan:** Area belakang yang masih terbuka memberikan fleksibilitas untuk pengembangan. Anda bisa menjadikannya gudang, area laundry, atau bahkan merenovasinya menjadi ruangan tambahan sesuai kebutuhan Anda.\n\nSebagai calon penyewa, Anda bisa membayangkan rumah ini sebagai tempat tinggal yang nyaman. Anda bisa menata ruang tamu dengan sofa yang empuk dan menambahkan beberapa dekorasi untuk menciptakan suasana yang lebih hangat. Jendela besar memungkinkan cahaya pagi masuk, menciptakan suasana yang lebih cerah dan energik. Dengan area belakang yang serbaguna, Anda dapat memiliki ruang untuk menyimpan barang-barang, sehingga rumah utama tetap rapi dan bersih.\n\nApakah Anda ingin tahu lebih lanjut mengenai fasilitas di sekitar lingkungan rumah ini, seperti warung makan, minimarket, atau fasilitas umum lainnya?",
      "deskripsi_spesifikasi_kontrakan": "Dikontrakan rumah lokasi di Jl. Organ, Malang Kota belakang kampus umm 3\n\nInformasi Kontrakan:\n- Harga Sewa: Rp 20 Juta per tahun.\n- Fasilitasnya: 2 kamar tidur, 1 kamar mandi (WC jongkok), ruang tamu luas, Ruang samping untuk jemur baju, Dapur.\n- Kondisi: Bersih dan Terawat.\n- Kelengkapan: Kosongan.\n\nInformasi Tambahan:\n- Listrik: Token.\n- Air: PDAM.\n- Parkir: Bisa mobil dan Sepeda Motor.\n- Akses Jalan: Mobil.\n\nWhatsApp: wa.me/6282231320160?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?\n\nTelegram: t.me/kontrakyuk?text=permisi,%20apakah%20rumah%20kontrakan%20masih%20ada?",
      "jumlah_peminat": 0
    }
  ],
  "last_update": "11:17:53, 25 August 2025",
  "total_data": 201,
  "error_log": []
}